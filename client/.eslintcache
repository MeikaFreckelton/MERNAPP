[{"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/index.js":"1","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/App.js":"2","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/stateReducer.js":"3","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/globalState.js":"4","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/data/post_data.js":"5","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/data/profile_data.js":"6","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Home.js":"7","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/EditPost.js":"8","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/EditProfile.js":"9","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profiles.js":"10","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profile.js":"11","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/SignIn.js":"12","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddProfile.js":"13","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/AddPost.js":"14","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/Register.js":"15","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Post.js":"16","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Oopsie.js":"17","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Navbar.js":"18","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/MultiStepForm.js":"19","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Posts.js":"20","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/FormInput.js":"21","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Education.js":"22","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Links.js":"23","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Review.js":"24","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Details.js":"25","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Skills.js":"26","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Work.js":"27","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/skillsComponents/SkillForm.js":"28","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/educationSections/PastEducation.js":"29","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/workComponents/Recent.js":"30","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/workComponents/Past.js":"31","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/store.js":"32","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/index.js":"33","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/constants.js":"34","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/alert.js":"35","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/Alert.js":"36","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/alert.js":"37"},{"size":247,"mtime":1610316499596,"results":"38","hashOfConfig":"39"},{"size":4513,"mtime":1610243222616,"results":"40","hashOfConfig":"39"},{"size":747,"mtime":1610065713034,"results":"41","hashOfConfig":"39"},{"size":157,"mtime":1610065713026,"results":"42","hashOfConfig":"39"},{"size":1489,"mtime":1610065713076,"results":"43","hashOfConfig":"39"},{"size":2431,"mtime":1610065713080,"results":"44","hashOfConfig":"39"},{"size":1160,"mtime":1610153697458,"results":"45","hashOfConfig":"39"},{"size":152,"mtime":1610065712936,"results":"46","hashOfConfig":"39"},{"size":162,"mtime":1610065712945,"results":"47","hashOfConfig":"39"},{"size":498,"mtime":1610065712958,"results":"48","hashOfConfig":"39"},{"size":5669,"mtime":1610065712953,"results":"49","hashOfConfig":"39"},{"size":1631,"mtime":1610083551635,"results":"50","hashOfConfig":"39"},{"size":476,"mtime":1610065712944,"results":"51","hashOfConfig":"39"},{"size":2165,"mtime":1610065712931,"results":"52","hashOfConfig":"39"},{"size":3415,"mtime":1610243475518,"results":"53","hashOfConfig":"39"},{"size":1301,"mtime":1610065712939,"results":"54","hashOfConfig":"39"},{"size":121,"mtime":1610065712924,"results":"55","hashOfConfig":"39"},{"size":1441,"mtime":1610065712921,"results":"56","hashOfConfig":"39"},{"size":2635,"mtime":1610065712949,"results":"57","hashOfConfig":"39"},{"size":4073,"mtime":1610065712943,"results":"58","hashOfConfig":"39"},{"size":490,"mtime":1610065713018,"results":"59","hashOfConfig":"39"},{"size":3561,"mtime":1610065712973,"results":"60","hashOfConfig":"39"},{"size":9301,"mtime":1610065712977,"results":"61","hashOfConfig":"39"},{"size":4559,"mtime":1610065712987,"results":"62","hashOfConfig":"39"},{"size":9154,"mtime":1610065712963,"results":"63","hashOfConfig":"39"},{"size":3605,"mtime":1610065712992,"results":"64","hashOfConfig":"39"},{"size":2826,"mtime":1610065712996,"results":"65","hashOfConfig":"39"},{"size":3707,"mtime":1610065713006,"results":"66","hashOfConfig":"39"},{"size":3072,"mtime":1610065713001,"results":"67","hashOfConfig":"39"},{"size":1388,"mtime":1610065713009,"results":"68","hashOfConfig":"39"},{"size":3314,"mtime":1610065713008,"results":"69","hashOfConfig":"39"},{"size":389,"mtime":1610087118246,"results":"70","hashOfConfig":"39"},{"size":121,"mtime":1610245020242,"results":"71","hashOfConfig":"39"},{"size":86,"mtime":1610150100434,"results":"72","hashOfConfig":"39"},{"size":372,"mtime":1610318153473,"results":"73","hashOfConfig":"39"},{"size":528,"mtime":1610244663054,"results":"74","hashOfConfig":"39"},{"size":437,"mtime":1610276487506,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xwpbvp",{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"81"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"81"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"81"},"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/index.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/App.js",["162","163","164","165","166","167"],"\nimport React, { Fragment, useEffect, useReducer, useState } from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport stateReducer from './config/stateReducer'\nimport { StateContext } from './config/globalState'\nimport blogData from './data/post_data'\nimport profileData from './data/profile_data'\nimport Alert from './components/reusable/Alert'\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\n// components :\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Oopsie from './components/Oopsie'\n\nimport Post from './components/posts/Post'\nimport AddPost from './components/posts/AddPost'\nimport EditPost from './components/posts/EditPost'\n\nimport Profile from './components/profiles/Profile'\nimport Profiles from './components/profiles/Profiles'\nimport AddProfile from './components/profiles/AddProfile'\nimport EditProfile from './components/profiles/EditProfile'\n\nimport Register from './components/auth/Register'\nimport SignIn from './components/auth/SignIn'\n\n// styles :\nimport './styles/Styles.css'\nimport './styles/Profile.css'\nimport './styles/Desktop.css'\nimport './styles/Posts.css'\nimport './styles/Tablet.css'\n// import { getAllBlogPosts, getPostFromId } from './services/blogPostServices'\n\n\n\n\n\n\nconst App = () => {\n\n\n    const initialState = {\n        blogPosts: [],\n        loggedInUser: null,\n    }\n\n    // const fetchBlogPosts = () => {\n    //     getAllBlogPosts().then((blogData) => {\n    //         dispatch({\n    //             type: \"setBlogPosts\",\n    //             data: blogData\n    //         })\n    //     }).catch((error) => {\n    //         dispatch({\n    //             type: \"setError\",\n    //             data: true\n    //         })\n    //         console.log(\"an error occured fetching blog posts from the server: \", error)\n    //     })\n    // }\n\n    const getPostFromId = (id) => {\n        return posts.find((t) => t._id === parseInt(id))\n\n    }\n\n    const getProfileFromId = (id) => {\n\n        return profileData.find((p) => p._id === parseInt(id))\n    }\n\n\n    // const [store, dispatch] = useReducer(stateReducer, initialState)\n    // const {blogPosts, error} = store\n\n\n    const [posts, setPosts] = useState([])\n    const [profiles, setProfiles] = useState([])\n\n\n    // set blog posts\n    useEffect(() => {\n        // fetchBlogPosts()\n        setPosts(blogData)\n        setProfiles(profileData)\n    }, [])\n\n    // add blog posts\n    const addPost = (post) => {\n        setPosts([...posts, post])\n    }\n\n    const addProfile = (profile) => {\n        setProfiles([...profiles, profile])\n    }\n\n    // next id for blog posts\n    const nextId = () => {\n        return posts.reduce((acc, cur) => acc._id > cur._id ? acc : cur, {_id: 0})._id + 1\n    }\n\n\n    // const addProfile = (profile) => {\n    //     setProfiles([...profiles, profile])\n    // }\n\n\n\n\n    return (\n        <div>\n            <Provider store={store}>\n                \n                <BrowserRouter >\n                <Fragment>\n                <Navbar/>  \n                <Alert /> \n                    <Switch>\n\n                        <Route exact path=\"/auth/register\" component={Register} />\n                        <Route exact path=\"/auth/signin\" component={SignIn} />\n\n                        <Route exact path=\"/profiles\" render={(props) => <Profiles {...props} profileData={profileData} />} />\n                        <Route exact path=\"/profiles/new\" component={AddProfile} />\n                        <Route exact path=\"/profiles/edit/:id\" render={(props) => <EditProfile {...props} />} />\n                        <Route exact path=\"/profiles/:id\" render={(props) => <Profile {...props} profile={getProfileFromId(props.match.params.id)}/>} />\n                        \n                        \n                        <Route exact path=\"/posts/new\" render={(props) => <AddPost {...props} addPost={addPost} nextId={nextId()} />} />\n                        <Route exact path=\"/posts/edit/:id\" render={(props) => <EditPost {...props} />} />\n                        <Route exact path=\"/posts/:id\" render={(props) => <Post {...props}  post={getPostFromId(props.match.params.id)}/>} />\n                        \n                        <Route exact path=\"/\" render={(props) => <Home {...props} postsData={posts} />} />\n\n                    </Switch>\n                    </Fragment>\n                    </BrowserRouter>\n            </Provider>\n        </div>\n                    \n                )};\n\n\nexport default App;",["168","169"],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/stateReducer.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/globalState.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/data/post_data.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/data/profile_data.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Home.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/EditPost.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/EditProfile.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profiles.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profile.js",["170","171","172"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// how to map over links and display them with matching icon?\n\nconst Profile = ({ profile }) => {\n\n    // destructuring data variables\n    const { detailsData, skillsData, workData, educationData, linkData } = profile\n\n    const { username, firstName, lastName, location, phoneNumber, birthday, interests, bio, briefDescription } = detailsData\n    const { status, currentTitle, currentCompany, currentStartDate, pastRoles } = workData\n    const { recentSchool, recentDegree, recentStartDate, recentEndDate, pastEducation } = educationData\n    const { technical, soft, skillLevel, yearsOfExperience } = skillsData\n    // const { linkedIn, twitter, instagram, facebook, portfolio, github, resume, additionalLinks } = linkData\n\n    const { additionalLinks } = linkData\n\n\n\n    // to display links : \n    const links = Object.entries(linkData)\n    const correctLinks = links.filter(x => x[1] !== \"\" && x[0] !== \"additionalLinks\")\n\n    const DisplayLinks = ({ correctLinks }) => {\n\n        const additional = Object.entries(additionalLinks)\n\n        return (\n            <div>\n                <div className=\"linkDiv\">\n                    {\n                        correctLinks.map((x, i) => {\n                            return (\n                                <Link to={x[1]}><li key={i} className=\"links\" >{x[0]}</li></Link> \n                            )\n                        })\n                    } \n                    {\n                        additional.length > 0 &&\n                        additional.map((x, i) => {\n                            return (\n                                <Link to={x[1]}><li key={i} className=\"links\">{x[0]}</li></Link>\n                            )\n                        }) \n                    }\n                </div>\n            </div>\n        )\n    }\n\n    const DisplaySkills = ({ skills }) => {\n\n\n        return (\n            <div className=\"skillsDiv\">\n                {\n                    skills.length > 0 &&\n                    skills.map((x, i) => {\n                        return (\n                            <p className=\"skills\">{x}</p>\n                            \n                        )\n                    })\n                }\n            </div>\n\n        )\n    }\n\n    return(\n        <div id=\"profile\">\n\n            <div className=\"profileImgName\">\n                <div className=\"profileImageDisplay\">\n                    <div className=\"profileImg\">\n\n                    </div>\n\n                    <div className=\"status-desktop\">\n                        {status}\n                    </div>\n\n                </div>\n\n                <div className=\"nameLocation\">\n                    <h2 id=\"username\">@{username}</h2>\n                    <div className=\"lastChildren\">\n                        <h3 id=\"name\">{firstName} {lastName}</h3>\n                        <h4 id=\"location\">{location}</h4>\n                    </div>\n                    \n                </div>\n\n                <div className=\"personalDetails\">\n                    <div className=\"status\">\n                        {status}\n                    </div>\n                    <div className=\"experienceDesc\">\n                        <div className=\"experienceLevel\">\n                            <p><span className=\"bold\">{skillLevel}</span> Developer with <span className=\"bold\">{yearsOfExperience}</span> year of experience</p>\n                        </div>\n                        <div>\n                            <h2>Interested in:</h2>\n                            <p>\n                                {\n                                    interests.map((x, index) => {\n                                        return (`${x}, ` )\n                                    })\n                                }  \n                            </p>\n\n                        </div>\n                        \n                    </div>\n                </div>\n\n                \n\n            </div>\n\n\n            <div className=\"bioAndLinks\">\n                <div className=\"bio\">\n                    {bio}\n                </div>\n                \n                <div className=\"linksDisplay\">\n                    <h1>Get in touch</h1>\n                    <DisplayLinks correctLinks={correctLinks}/>\n\n                </div>\n\n            </div>\n            \n            \n            \n\n            \n            <div className=\"workAndEdu\">\n                <div className=\"workDisplay\">\n                    <h1>Current Role</h1>\n                    <h2>{currentTitle} at {currentCompany}</h2>\n                    <h3>{currentStartDate.slice(0, 4)} - present</h3>\n                    {\n                        pastRoles.length > 0 &&\n                        <h1>Past Roles ^</h1>\n                    }\n                    \n                </div>\n\n                <div className=\"eduDisplay\">\n                    <h1>Education</h1>\n                    <h2>{recentSchool} ({recentStartDate.slice(0, 4)} - {recentEndDate.slice(0, 4)})</h2>\n                    <h3>{recentDegree}</h3>\n                    {\n                        pastEducation.length > 0 &&\n                        <h1>Previous Education ^</h1>\n                    }\n                </div>\n\n            </div>\n            \n\n            <div className=\"skillsDisplay\">\n                <h1>Technical Skills/Languages</h1>\n                <DisplaySkills skills={technical} />\n                <h1>Soft Skills</h1>\n                <DisplaySkills skills={soft} />\n            </div>\n            <div className=\"postsDisplay\">\n                <h1>Blog Posts</h1>\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Profile ","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/SignIn.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddProfile.js",["173","174"],"import React from 'react'\nimport { useForm, useStep } from 'react-hooks-helper'\nimport MultiStepForm from './MultiStepForm'\n\n\n\n\nconst AddProfile = () => {\n\n\n\n    return(\n        <div>\n            <div>\n                <div className=\"heading\">\n                    <h1 className=\"headingFont\">Create Your Profile</h1>\n                </div>\n                <MultiStepForm />\n                \n\n            </div>\n             \n        </div>\n    )\n}\n\n\nexport default AddProfile ","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/AddPost.js",["175"],"import React, { useState } from 'react'\nimport './../../styles/Posts.css'\nimport FormInput from './../reusable/FormInput'\nimport Posts from './Posts'\n\n\nconst AddPost = ({ history, nextId, addPost}) => {\n    // const [posts, setTwoots] = useState([])\n\n    \n\n    const initialFormState = {\n        title: \"\",\n        category: \"\",\n        content: \"\"\n    }\n\n    const [formState, setFormState] = useState(initialFormState)\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setFormState({\n            ...formState,\n            [name]: value\n        })\n    }\n\n    \n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const newPost = {\n            _id: nextId,\n            title: formState.title,\n            category: formState.category || \"general\",\n            modified_date: new Date(),\n            content: formState.content\n        }\n        addPost(newPost)\n        history.push(`/posts/${nextId}`)\n    }\n    console.log(formState)\n\n\n    return(\n        <div>\n            \n            \n            <div id=\"addPostDiv\">\n                <div className=\"heading\">\n                    <h1>Add post</h1>\n                </div>\n                <form id=\"addPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"content\"\n                        placeholder=\"content here...\"\n                        className=\"addPostField\"\n                        onChange={handleChange}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"addPostSubmit\"\n                    value=\"New Post\"\n                    />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nexport default AddPost","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/Register.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Post.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Oopsie.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Navbar.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/MultiStepForm.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Posts.js",["176","177"],"import React, { useState, useEffect } from 'react'\nimport Post from './Post'\nimport { Link } from 'react-router-dom'\n\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\n\nimport './../../styles/Posts.css'\n\n\nconst Posts = ({ postsData }) => {\n\n    const filters = {\n        category: \"All\",\n        sortBy: \"Newest\"\n    }\n\n    const [filterData, setFilterData] = useState(filters)\n\n\n    const posts = (post) => {\n        const { title, category, modified_date } = post\n        return (\n            <div className=\"postCard\">\n                <Link to={`/posts/${post._id}`} className=\"titleLink\">\n                    <h1 className=\"postTitle\">{title}</h1>\n                </Link>\n                <div className=\"postInfo\">\n                    \n                    <h5>Posted by: (user), {modified_date.toLocaleString()}</h5>\n                    <h3>{category}</h3>\n                    {/* <p>{content}</p> */}\n                    <div className=\"upVotesDiv\">\n                        <p className=\"upVotes\">++5</p>\n                    </div>\n                    \n                </div>\n                    \n                \n            </div>\n        )\n    }\n\n    // updating display function to take different parameters\n    // first it should filter through the posts and find the \n    // category matching the one given as filter\n    // with that filtered data, it should impliment the chosen\n    // sorting method, eg. newest, oldest, most upvotes, least etc.\n\n\n    function Display (){\n        return (postsData\n            .sort((a, b) => b.modified_date - a.modified_date)\n            .map((post) => {\n                return posts(post)\n            })\n        )\n    }\n\n    const filterBtn = document.querySelector('.filters')\n\n    \n    function openFilters () {\n        if (filterBtn){\n            (filterBtn.style.display === \"none\") ? (filterBtn.style.display = \"flex\") : (filterBtn.style.display = \"none\")\n        }\n        \n    }\n\n\n    // const categoryOptions = [\"Code\", \"Food\", \"Issues\", \"Meetups\"]\n\n    const categoryOptions = [\n        {label: \"Code\", value: \"category\"},\n        {label: \"Food\", value: \"category\"},\n        {label: \"Issues\", value: \"category\"},\n        {label: \"Meetups\", value: \"category\"}\n    ]\n\n    // const sortByOptions = [\"Newest\", \"Oldest\", \"Most Upvotes\", \"Least Upvotes\"]\n\n    const sortByOptions = [\n        {label: \"Newest\", value: \"sortBy\"},\n        {label: \"Oldest\", value: \"sortBy\"},\n        {label: \"Most Upvotes\", value: \"sortBy\"},\n        {label: \"Least Upvotes\", value: \"sortBy\"}\n    ]\n\n    const handleSelection = e => {\n       console.log(e)\n        const { value, label } = e\n\n        \n        setFilterData({\n            ...filterData,\n            [value]: label\n        })\n        console.log('filter: ', filterData)\n    }\n\n    const handleFilterSubmit = e => {\n        e.preventDefault()\n\n    }\n\n    return(\n        <div>\n            {/* <div className=\"heading\">\n                <h4>Posts</h4>\n            </div> */}\n            <div className=\"filterText\">\n                <p onClick={openFilters}>Filter</p>\n            </div>\n            <div className=\"filters width70\">\n                <div className=\"filterDropdowns\">\n                    <div className=\"dropdownDiv\">\n                        <p>Category: </p>\n                        <Dropdown className='myClassName' options={categoryOptions} id=\"categoryFilter\" label=\"category\" onChange={handleSelection} />\n                    </div>\n                    <div className=\"dropdownDiv\">\n                        <p>Sort by:</p>\n                        <Dropdown options={sortByOptions} id=\"sortByFilter\" label=\"sortBy\" onChange={handleSelection} />\n                    </div>\n                </div>\n                \n                <div className=\"filterBtn\">\n                    <button onClick={handleFilterSubmit}>Done</button>\n                </div>\n                \n            </div>\n            \n            <div className=\"width70 posts\">\n                <Display />\n            </div>\n\n\n        </div>\n    )\n}\n\n\nexport default Posts","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/FormInput.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Education.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Links.js",["178","179"],"import React, { useState } from 'react'\nimport FormInput from '../../reusable/FormInput'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\n\n// need to add validation on additional links form -> display error message if no name for additional link is selected\n\nconst Links = ({ setLinks, linkData, navigation,  }) => {\n\n    const [disabled, setDisabled] = useState(true)\n\n    // form props :\n    const { linkedIn, twitter, instagram, facebook, additionalLinks, portfolio, github, resume } = linkData\n    \n\n    // for wizard form navigation :\n    const { previous, next } = navigation;\n\n\n    // local states for controlled forms :\n    const [tempValue, setTempValue] = useState(\"\")\n    const [tempName, setTempName] = useState(\"\")\n    const [defaultOption, setDefaultOption] = useState(\"\")\n\n\n    // sets temp values for additional links form :\n    function handleAdditional (e) {\n        setTempValue(e.target.value)\n    }\n\n\n    // add form :\n    // find div, create input element, set attributes of type and id, set value, add event listener for change,\n    // append the input field to the div, \n    const addFormField = (e) => {\n\n        const div = document.getElementById(\"additionalForms\")\n        const valueField = document.createElement(\"INPUT\")\n\n        valueField.setAttribute(\"type\", \"text\")\n        valueField.setAttribute(\"id\", \"valueField\")\n        valueField.value = tempValue\n\n        valueField.addEventListener(\"change\", handleAdditional)\n\n        div.appendChild(valueField)\n\n    }\n\n    const hideFormField = (e) => {\n        \n    }\n\n\n    // options for dropdown of additional links :\n    const options = [\n        \"Youtube\", \"Pinterest\", \"Reddit\", \"Codewars\", \"Stack Overflow\"\n    ]\n\n\n    // function for selecting dropdown options :\n    // set the temp name for the additional link from selected value,\n    // add a form field if there are no items in additional links object\n    function onSelect (e) {\n\n        const {value} = e\n        setTempName(value)\n\n        if (Object.entries(additionalLinks).length < 1){\n            addFormField()\n        } \n        setDisabled(false)\n    }\n\n\n    // function to handle changes from set input fields :\n    // set linkdata to the name and value given\n    function handleChange (e) {\n\n        const { name, value } = e.target\n\n        setLinks( {\n            ...linkData,\n            [name]: value\n        })\n    }\n\n\n    // display additional items keys and values:\n    function DisplayItems () {\n\n        return (\n            Object.entries(additionalLinks).map(([key, value]) => {\n                return <li key={key}>{key}: {value}</li>\n            })\n        )\n    }\n    \n\n    // function to handle the click of the + button :\n    // set the additional links to the ones saved in temp name and value,\n    // clear temp value, value field and dropdown selection\n    // add validation in here to prevent blank name : (if !name => display msg, dont allow submission)\n    function handleClick (e) {\n        e.preventDefault()\n\n        setLinks({\n            ...linkData,\n            additionalLinks: {...additionalLinks, [tempName]: tempValue}\n        })\n        \n        setTempValue(\"\")\n        setTempName(\"\")\n        const valueField = document.getElementById(\"valueField\")\n        valueField.value = \"\"\n        setDefaultOption(\"Select...\")\n    }\n\n    function handleUpload (e) {\n        console.log(e.target.files[0])\n        setLinks({\n            ...linkData,\n            resume: e.target.files[0]\n        })\n    }\n\n    return(\n        <div>\n            <div>\n                <div className=\"heading\">\n                <h4>\n                    Links\n                </h4>  \n                </div>\n                <div className=\"profileFormDiv\">\n                    <form>\n                        <div>\n                            <h3 className=\"greyTitle\">Social Media</h3>\n                            \n                            <div className=\"linkForms\">\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            LinkedIn\n                                        </label>\n                                        <FormInput name=\"linkedIn\" value={linkedIn} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Twitter\n                                        </label>\n                                        <FormInput name=\"twitter\" value={twitter} onChange={handleChange} />\n                                    </div>\n                                </div>\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Instagram\n                                        </label>\n                                        <FormInput name=\"instagram\" value={instagram} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Facebook\n                                        </label>\n                                        <FormInput name=\"facebook\" value={facebook} onChange={handleChange} />\n                                    </div>\n\n                                </div>\n                            </div>\n                            \n                    \n\n                                    \n                        </div>\n\n\n                        <div>\n                            <h3 className=\"greyTitle\">Portfolio</h3>\n                            <div className=\"linkForms\">\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Portfolio\n                                        </label>\n                                        <FormInput name=\"portfolio\" value={portfolio} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Github\n                                        </label>\n                                        <FormInput name=\"github\" value={github} onChange={handleChange} />\n                                    </div>\n\n                                </div>\n                                \n                            </div>\n\n                            <div className=\"profilePhotoUpload\">\n                                <label for=\"photoBtn\">Upload Resume</label>\n                                <input \n                                    type=\"file\"\n                                    name=\"resume\"\n                                    accept=\".pdf\"\n                                    multiple=\"false\"\n                                    onChange={handleUpload}\n                                    id=\"photoBtn\"\n                                    hidden\n                                    \n                                />\n                                <span id=\"fileChosen\">No file Chosen</span>\n\n                            </div>\n                            \n                            \n                            {/* <div className=\"formFields\">\n                                <label>\n                                    Resume\n                                </label>\n                                <FormInput type=\"file\" name=\"resume\" accept=\".pdf\" onChange={handleUpload}/>\n                                \n                            </div> */}\n                        </div>\n                        <div>\n                            <h3 className=\"greyTitle\">Additional</h3>\n                            \n                            <div className=\"linkDropDown\">\n                                <Dropdown options={options} onChange={onSelect} value={defaultOption} name=\"additionalLinks\" />\n                                \n                                <div id=\"additionalForms\"></div>\n                                <button className=\"plusButton\" onClick={handleClick} disabled={disabled} >+</button>                \n                            </div>\n                                \n                            <div id=\"additionalItems\">\n                                    \n                                <DisplayItems />\n                                    \n                                \n                            </div>\n                            </div>\n\n                    </form>  \n                    <div className=\"navigationDiv\">\n                        <button className=\"nextBtn\" onClick={previous}>back</button>  \n                        <button className=\"nextBtn\" onClick={next}>Next</button>\n                    </div>\n                </div>\n            </div>\n            \n\n        </div>\n    )\n}\n\n\nexport default Links","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Review.js",["180"],"import React from \"react\";\n\n// make DRY !!!!!!!\n// fix functionality for files and arrays\n\nconst Review = ({ setForm, detailsData, skillsData, workData, educationData, linkData, navigation }) => {\n  \n  const { go, previous } = navigation;\n\n\n  // function Display (data) {\n  //   return (\n  //     Object.entries(data).map(([key, value]) => {\n  //       return <li key={key}>{key}: {value}</li>\n  //     })\n  //   )\n  // }\n  // console.log(linkData.additionalLinks)\n\n\n  return (\n    <div>\n      <div className=\"heading\">\n        <h4>\n          Review your details\n        </h4>\n      </div>\n      <div>\n\n\n        <div>\n          <h3 className=\"greyTitle\">Details</h3>\n          <div className=\"reviewDivs\">\n\n            {\n              Object.entries(detailsData).map(([key, value]) => {\n\n\n                if (typeof(value) === \"object\" && value.length > 1){\n                  return (<div>\n                    <li>Interests:</li>\n                    {value.map((x) => <li key={x}>{x}</li>)}\n                  </div>\n                  )\n                } \n                \n                else if (key === \"profilePhoto\"){\n                  console.log(key, value, value.name)\n                  return (\n                    <div>\n                      <li>profile photo:</li>\n                      <li key={key}>{value.name}</li>\n                    </div>\n                  )\n\n                }\n                \n                return <li key={key}>{key}: {value}</li>\n\n              })\n            }\n\n\n          </div>\n        </div>\n\n\n\n        <div>\n          <h3 className=\"greyTitle\">Skills</h3>\n          <div className=\"reviewDivs\">\n            {\n              Object.entries(skillsData).map(([key, value]) => {\n\n                return <li key={key}>{key}: {value}</li>\n              })\n            }\n          </div>\n        </div>\n\n\n\n        <div>\n          <h3 className=\"greyTitle\">Work</h3>\n          <div className=\"reviewDivs\">\n            {\n              Object.entries(workData).map(([key, value]) => {\n\n                if (typeof(value) === \"object\"){\n                  return value.map(x => {\n                    return (\n                      \n                      <div>\n                        <h5> Past Role</h5>\n                        <li>title: {x.title}</li>\n                        <li>company: {x.company}</li>\n                        <li>dates: {x.startDate} - {x.endDate}</li>\n\n                      </div>\n                    )\n                  })\n                }\n\n                return <li key={key}>{key}: {value}</li>\n\n              })\n            }\n          </div>\n        </div>\n\n\n        <div>\n          <h3 className=\"greyTitle\">Education</h3>\n          <div className=\"reviewDivs\">\n          {\n              Object.entries(educationData).map(([key, value]) => {\n\n                if (typeof(value) === \"object\"){\n                  return value.map(x => {\n                    return (\n                      \n                      <div>\n                        <h5> Past Education</h5>\n                        <li>School: {x.school}</li>\n                        <li>degree: {x.degree}</li>\n                        <li>dates: {x.startDate} - {x.endDate}</li>\n\n                      </div>\n                    )\n                  })\n                }\n                return <li key={key}>{key}: {value}</li>\n              })\n            }\n          </div>\n        </div>\n\n\n\n        <div>\n          <h3 className=\"greyTitle\">Links</h3>\n          <div className=\"reviewDivs\">\n          {\n              Object.entries(linkData).map(([key, value]) => {\n                if (key === \"resume\"){\n                  console.log(\"RESUME\", key, value)\n                  return (\n                    <div>\n                      <li>Resume:</li>\n                      <li key={key}>{value.name}</li>\n                    </div>\n                  )\n                } else if (typeof(value) === \"object\"){\n                  return Object.entries(value).map(([k, v]) => {\n                    return (\n                      <div>\n                        <li>{k}: {v}</li>\n                      </div>\n                    )\n                  })\n                } else \n                return <li key={key}>{key}: {value}</li>\n              })\n            }\n          </div>\n        </div>\n\n      </div>\n      <div className=\"navigationDiv\">\n          <button className=\"nextBtn\" onClick={previous}>back</button>  \n          <button className=\"nextBtn\" >Create Profile</button>\n      </div>\n      \n\n    </div>\n\n  )\n\n}\n\n\nexport default Review\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Details.js",["181","182","183","184","185"],"import React, { useState, useEffect } from 'react'\n// import CheckBox from '../../reusable/CheckBox'\n// import interestsCheckBoxes from './../../../config/interestsCheckBoxes'\nimport FormInput from '../../reusable/FormInput'\n\nimport Checkbox from '@material-ui/core/Checkbox';\n\n// checkboxes are broken >:(\n\n// have image shown on screen when uploaded - maybe look into components (antd)\n// move checkbox data to data file (once merged)\n\nconst Details = ({ setDetails, detailsData, navigation }) => {\n    \n    // fields from detail form data :\n    const { profilePhoto, firstName, lastName, username, location, \n    phoneNumber, birthday, bio, briefDescription } = detailsData\n\n    // next from hooks helper\n    const { next } = navigation;\n\n    \n\n    const interests = [\n        {id: 1, value: \"Front End\", isChecked: false},\n        {id: 2, value: \"Back End\", isChecked: false},\n        {id: 3, value: \"Full Stack\", isChecked: false},\n        {id: 4, value: \"AI\", isChecked: false},\n        {id: 5, value: \"Mobile Development\", isChecked: false},\n        {id: 6, value: \"Software Development\", isChecked: false},\n        {id: 7, value: \"Data Science\", isChecked: false},\n        {id: 8, value: \"Cyber Security\", isChecked: false},\n        {id: 9, value: \"DevOps\", isChecked: false},\n        {id: 10, value: \"Game Development\", isChecked: false}\n    ]\n\n    const [checked, setChecked] = useState(interests)\n\n\n\n    function handleCheckboxChange (e) {\n        // console.log(e.target.checked)\n        // const checkbox = \"\"\n        \n        // checked.forEach(item => {\n        //     if (item.value === e.target.value){\n        //         console.log(item)\n        //         setChecked({\n        //             ...checked,\n                    \n        //         })\n\n        //         item.isChecked = e.target.checked\n                \n        //     }\n            \n        // })\n        // // setChecked(\n        // //     ...checked\n        // // )\n        // console.log(checked)\n\n\n\n    }\n  \n\n\n\n    // function to handle change of regular form inputs :\n    function handleChange (e) {\n        const { name, value } = e.target\n        setDetails({\n            ...detailsData,\n            [name]: value\n        })\n    }\n\n    // function for image upload :\n    function uploadImg (e) {\n        setDetails({\n            ...detailsData,\n            profilePhoto: e.target.files[0]\n        })\n\n        const file = document.getElementById('fileChosen')\n        file.textContent = e.target.files[0].name\n    }\n\n\n\n\n    return(\n        <div>\n    \n            <div className=\"heading\">\n                <h4>\n                    Personal Details\n                </h4>\n            </div>\n\n            <div className=\"profileFormDiv\">\n                \n\n\n                <form className=\"profileForm\">\n                    <div className=\"photoDiv\">\n                        <div className=\"profilePhoto\">\n                            <img\n                                src={profilePhoto}\n                                alt=\"profilephoto\"\n                                />\n                        </div>\n\n\n                        <div className=\"profilePhotoUpload\">\n                            <label id=\"photoLabel\" for=\"photoBtn\">Upload Image</label>\n                            <input \n                                type=\"file\"\n                                name=\"profilePhoto\"\n                                accept=\"image/png, image/jpeg\"\n                                multiple=\"false\"\n                                onChange={uploadImg}\n                                id=\"photoBtn\"\n                                hidden\n                                \n                            />\n                            <span id=\"fileChosen\">No file Chosen</span>\n\n                        </div>\n                    </div>\n\n\n                    <div className=\"profileFormSection\">\n\n                        <div className=\"doubleFields\">\n                            <div className=\"formFields\">\n                                <label>\n                                    First Name\n                                </label>\n                                <FormInput name=\"firstName\" value={firstName} onChange={handleChange} />  \n                            </div>\n\n                            \n                            <div className=\"formFields\">\n                                <label>\n                                    Last Name\n                                </label>\n                \n                                <FormInput name=\"lastName\" value={lastName} onChange={handleChange} />\n                            </div>\n\n                        </div>\n                        \n\n\n                        <div className=\"doubleFields\">\n                            <div className=\"formFields\">\n                                <label>\n                                    Username\n                                </label>\n                                <FormInput name=\"username\" value={username} onChange={handleChange} /> \n                            </div>\n\n                            \n                            <div className=\"formFields\">\n                                <label>\n                                    Location\n                                </label>\n            \n                                <FormInput name=\"location\" value={location} onChange={handleChange} />\n                            </div>\n                        </div>\n\n                        \n                        <div className=\"doubleFields\">\n                            <div className=\"formFields\">\n\n                                <label>\n                                    Phone Number\n                                </label>\n                                <FormInput name=\"phoneNumber\" value={phoneNumber} onChange={handleChange} />\n                            </div>\n\n                            <div className=\"birthdayFields formFields\">\n                                <label>Date of Birth</label>\n\n                                <FormInput type=\"date\" name=\"birthday\" value={birthday} onChange={handleChange}/>\n            \n                            </div>\n                        </div>\n\n\n                        {/* <div className=\"interestsSection\">\n                            <h4>Interests</h4>\n                            <div className=\"interestsCheckBoxes\">\n\n                            \n                            { // map over checkbox items from checkbox data file :\n                                checked.map((item, index) => {\n                                    // const { value, isChecked, id } = item\n                                    // let isChecked = checkedItems[name]\n                                    // console.log('isChecked', isChecked)\n                                    return(\n                                        <div key={item.id} className=\"checkboxes\">\n                                            \n\n                                            <Checkbox value={item.value} checked={item.isChecked} onChange={handleCheckboxChange}  />\n                                          \n                                            <label className=\"checkLabel\">\n                                                {item.value}\n                                            \n                                            </label>\n                                        </div>\n                                    )   \n                                })\n                            }\n                            \n                               \n\n                            </div>\n                        </div> */}\n\n                            <div className=\"formFields desc\">\n                                <label id=\"authorLabel\">\n                                    Brief Author Description \n                                </label>\n                                {/* <p>(This will be shown underneath your blog posts)</p> */}\n                                \n                                <textarea \n                                    name=\"briefDescription\"\n                                    value={briefDescription}\n                                    onChange={handleChange}\n                                    className=\"description\"\n                                />\n                            </div>\n\n                        <div className=\"formFields desc\">\n                            <label>\n                                Bio\n                            </label>\n                            <textarea \n                                name=\"bio\"\n                                value={bio}\n                                onChange={handleChange}\n                                className=\"bio\"\n                            />\n                        </div>\n\n                        \n                    </div>\n                </form>\n                <div className=\"navigationDiv\">\n                    <button className=\"nextBtn\" onClick={next}>next</button>\n                </div>\n\n                \n            </div>\n\n            \n            \n        </div>\n    )\n}\n\nexport default Details","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Skills.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/Work.js",["186","187"],"import React, { useState } from 'react'\nimport RecentWork from './workComponents/Recent'\nimport PastWork from './workComponents/Past'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst Work = ({ setWork, workData, navigation }) => {\n\n    const props = { setWork, workData, navigation }\n    const { previous, next } = navigation;\n    const { status } = workData\n\n\n\n    // handle change function for radio group for work status :\n    function handleChange (e) {\n        setWork({\n            ...workData,\n            status: e.target.value\n        })\n    }\n\n    return(\n        <div>\n            <div className=\"profileFormDiv\">\n                <div className=\"heading\">\n                    <h4>\n                        Work Information\n                    </h4>\n                </div>\n                <div>\n                    <form>\n\n                        <div className=\"recentWork\">\n                            <h3>Current Role</h3>\n                            <RecentWork {...props} />\n                        </div>\n\n                        <div className=\"pastWork\">\n                            <h3>Past Roles</h3>\n                            <PastWork {...props} />\n                        </div>\n\n\n                        <div className=\"statusSelection\">\n                            <h3>Please Choose one:</h3>\n                            <FormControl component=\"fieldset\">\n                                {/* <FormLabel component=\"legend\">Future Employment Status</FormLabel> */}\n                                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={status} onChange={handleChange} className=\"radioGroupWork\">\n                                    <FormControlLabel value=\"looking\" control={<Radio />} label=\"I'm looking for work\" />\n                                    <FormControlLabel value=\"open\" control={<Radio />} label=\"I'm not currently looking, but I'm open to offers\" />\n                                    <FormControlLabel value=\"notLooking\" control={<Radio />} label=\"I'm not looking for work\" />\n                                    \n                                </RadioGroup>\n                                </FormControl>\n\n                            \n                        </div>\n\n                    </form>\n\n                    <div className=\"navigationDiv\">\n                        <button className=\"nextBtn\" onClick={previous}>back</button>  \n                        <button className=\"nextBtn\" onClick={next}>Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Work","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/skillsComponents/SkillForm.js",["188","189"],"import React, { useState } from 'react'\nimport FormInput from '../../../reusable/FormInput'\n\n// skills forms working, current bug: \n// tryed different ways to have button as a submit button, however \n// prevent default does not work and the page refreshes,\n// the forms also dont work as expected when pressing enter instead \n// of clicking the button,\n// right now have settled with onclick instead of onsubmit and disabled enter from \n// causing submit, find a way to use enter and have forms working as expected,\n// possibly by figuring out how to fix submit problem\n\n// also need to figure out way to store these skills in global state or just to the \n// parent skills component\n\n// also need to figure out how to get rid of the empty string when updating the skills state\n// or a way to not print it to the screen\n\n\n\nconst SkillsForm = ({ setSkills, skillsData, navigation, skillType }) => {\n  \n    const { technical, soft } = skillsData\n    \n    // states for tech and soft skills arrays :\n    const [techSkills, setTechSkills] = useState([])\n\n    const [softSkills, setSoftSkills] = useState([])\n\n    // states for temporary values and names :\n    const [tempVal, setTempVal] = useState(\"\")\n    const [tempName, setTempName] = useState(\"\")\n\n\n    // function that handles text change :\n    // sets temp val and name :\n    function handleChange (e) {\n        setTempVal(e.target.value)\n        setTempName(e.target.name)\n    }\n\n\n    // function that handles button click :\n    // calls add to array function passing the temp val, which\n    // adds the values to either the tech or soft array based on the temp name :\n    // it then sets tempval to empty  :\n    function handleSubmit (e) {\n        addToArray(tempVal)\n        setTempVal(\"\")\n        \n        e.preventDefault()\n    }\n\n\n    // function described above ^ :\n    const addToArray = (item) => {\n        if (tempName === \"technical\" && item !== \"\"){\n            const newArr = [...techSkills, item ]\n            setTechSkills(newArr)\n            setSkills({\n                ...skillsData,\n                technical: newArr\n            })\n        } else if (tempName === \"soft\" && item !== \"\"){\n            const newArr = [...softSkills, item]\n            setSoftSkills(newArr)\n            setSkills({\n                ...skillsData,\n                soft: newArr\n            })\n        }\n        console.log(skillsData)\n    }\n\n    // display function that displays the correct list of skills based on temp name :\n    function Display(){\n        \n        if (tempName === \"technical\"){\n            return techSkills.map((item, index) => \n\n                    <li className=\"skillItem\" key={index}>{item}</li>\n \n                \n            )\n        } else if (tempName === \"soft\"){\n            return softSkills.map((item, index) => \n\n                    <li className=\"skillItem\" key={index}>{item}</li>\n\n                \n            )\n        } else return null\n\n    }\n\n\n    return(\n        <div className=\"skillsDisplayInput\">\n            <div className=\"formFields\">\n                <div>\n                    <label>\n                        Language/skill\n                    </label>\n                    <div className=\"skillInputSection\">\n                        <FormInput name={skillType} value={tempVal} onChange={handleChange} />\n                        <button onClick={handleSubmit} className=\"addBtn\">+</button>\n                    </div>\n                </div>\n                \n                <div className=\"skillsList\">\n                   <Display /> \n                </div>\n                \n            </div>\n            \n\n            \n\n            \n            \n            \n        </div>\n    )\n}\n\n\nexport default SkillsForm","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/educationSections/PastEducation.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/workComponents/Recent.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/formComponents/workComponents/Past.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/store.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/index.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/constants.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/alert.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/Alert.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/alert.js",["190"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/constants';\r\n\r\nconst initialState = [\r\n   \r\n];\r\n\r\nexport default function (state = initialState, alert) {\r\n    const { type, payload } = alert;\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n            default:\r\n                return state;\r\n    }\r\n}",{"ruleId":"191","severity":1,"message":"192","line":2,"column":38,"nodeType":"193","messageId":"194","endLine":2,"endColumn":48},{"ruleId":"191","severity":1,"message":"195","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":20},{"ruleId":"191","severity":1,"message":"196","line":5,"column":10,"nodeType":"193","messageId":"194","endLine":5,"endColumn":22},{"ruleId":"191","severity":1,"message":"197","line":18,"column":8,"nodeType":"193","messageId":"194","endLine":18,"endColumn":14},{"ruleId":"191","severity":1,"message":"198","line":48,"column":11,"nodeType":"193","messageId":"194","endLine":48,"endColumn":23},{"ruleId":"191","severity":1,"message":"199","line":99,"column":11,"nodeType":"193","messageId":"194","endLine":99,"endColumn":21},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"191","severity":1,"message":"204","line":11,"column":54,"nodeType":"193","messageId":"194","endLine":11,"endColumn":65},{"ruleId":"191","severity":1,"message":"205","line":11,"column":67,"nodeType":"193","messageId":"194","endLine":11,"endColumn":75},{"ruleId":"191","severity":1,"message":"206","line":11,"column":93,"nodeType":"193","messageId":"194","endLine":11,"endColumn":109},{"ruleId":"191","severity":1,"message":"207","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":17},{"ruleId":"191","severity":1,"message":"208","line":2,"column":19,"nodeType":"193","messageId":"194","endLine":2,"endColumn":26},{"ruleId":"191","severity":1,"message":"209","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":13},{"ruleId":"191","severity":1,"message":"210","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"211","line":2,"column":8,"nodeType":"193","messageId":"194","endLine":2,"endColumn":12},{"ruleId":"191","severity":1,"message":"212","line":13,"column":89,"nodeType":"193","messageId":"194","endLine":13,"endColumn":95},{"ruleId":"191","severity":1,"message":"213","line":50,"column":11,"nodeType":"193","messageId":"194","endLine":50,"endColumn":24},{"ruleId":"191","severity":1,"message":"214","line":8,"column":11,"nodeType":"193","messageId":"194","endLine":8,"endColumn":13},{"ruleId":"191","severity":1,"message":"210","line":1,"column":27,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"191","severity":1,"message":"215","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":16},{"ruleId":"191","severity":1,"message":"216","line":37,"column":12,"nodeType":"193","messageId":"194","endLine":37,"endColumn":19},{"ruleId":"191","severity":1,"message":"217","line":37,"column":21,"nodeType":"193","messageId":"194","endLine":37,"endColumn":31},{"ruleId":"191","severity":1,"message":"218","line":41,"column":14,"nodeType":"193","messageId":"194","endLine":41,"endColumn":34},{"ruleId":"191","severity":1,"message":"219","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"220","line":9,"column":8,"nodeType":"193","messageId":"194","endLine":9,"endColumn":17},{"ruleId":"191","severity":1,"message":"221","line":23,"column":13,"nodeType":"193","messageId":"194","endLine":23,"endColumn":22},{"ruleId":"191","severity":1,"message":"222","line":23,"column":24,"nodeType":"193","messageId":"194","endLine":23,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":7,"column":1,"nodeType":"225","endLine":17,"endColumn":2},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'stateReducer' is defined but never used.","'StateContext' is defined but never used.","'Oopsie' is defined but never used.","'initialState' is assigned a value but never used.","'addProfile' is assigned a value but never used.","no-native-reassign",["226"],"no-negated-in-lhs",["227"],"'phoneNumber' is assigned a value but never used.","'birthday' is assigned a value but never used.","'briefDescription' is assigned a value but never used.","'useForm' is defined but never used.","'useStep' is defined but never used.","'Posts' is defined but never used.","'useEffect' is defined but never used.","'Post' is defined but never used.","'resume' is assigned a value but never used.","'hideFormField' is assigned a value but never used.","'go' is assigned a value but never used.","'Checkbox' is defined but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","'handleCheckboxChange' is defined but never used.","'useState' is defined but never used.","'FormLabel' is defined but never used.","'technical' is assigned a value but never used.","'soft' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]