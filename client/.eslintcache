<<<<<<< HEAD
[{"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/index.js":"1","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/store.js":"2","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/App.js":"3","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/history.js":"4","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/utils/setAuthToken.js":"5","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/api.js":"6","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/privateroutes/PrivateRoute.js":"7","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/AddPost.js":"8","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/Alert.js":"9","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/EditPost.js":"10","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddExperience.js":"11","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profiles.js":"12","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/Profile.js":"13","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/EditProfile.js":"14","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/SignIn.js":"15","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddQualification.js":"16","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddProfile.js":"17","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/BaseProfile.js":"18","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Navbar.js":"19","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Home.js":"20","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Dashboard.js":"21","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Posts.js":"22","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Post.js":"23","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/Register.js":"24","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/index.js":"25","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/FormInput.js":"26","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/ProfileFields.js":"27","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/ProfileDisplay.js":"28","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/spinner.js":"29","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/alert.js":"30","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/constants.js":"31","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/profile.js":"32","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DashAction.js":"33","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Experience.js":"34","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Qualification.js":"35","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DisplayProfile.js":"36","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/auth.js":"37","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/post.js":"38","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/profile.js":"39","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/alert.js":"40"},{"size":363,"mtime":1611011539449,"results":"41","hashOfConfig":"42"},{"size":389,"mtime":1611011539456,"results":"43","hashOfConfig":"42"},{"size":4375,"mtime":1611011539198,"results":"44","hashOfConfig":"42"},{"size":86,"mtime":1611011539361,"results":"45","hashOfConfig":"42"},{"size":264,"mtime":1611011539520,"results":"46","hashOfConfig":"42"},{"size":4865,"mtime":1611011539357,"results":"47","hashOfConfig":"42"},{"size":595,"mtime":1611011539246,"results":"48","hashOfConfig":"42"},{"size":2899,"mtime":1611011539235,"results":"49","hashOfConfig":"42"},{"size":528,"mtime":1611011539355,"results":"50","hashOfConfig":"42"},{"size":2557,"mtime":1611011539236,"results":"51","hashOfConfig":"42"},{"size":3636,"mtime":1611011539252,"results":"52","hashOfConfig":"42"},{"size":1146,"mtime":1611011539289,"results":"53","hashOfConfig":"42"},{"size":860,"mtime":1611016499066,"results":"54","hashOfConfig":"42"},{"size":8429,"mtime":1611011539262,"results":"55","hashOfConfig":"42"},{"size":2210,"mtime":1611011539215,"results":"56","hashOfConfig":"42"},{"size":2568,"mtime":1611011539255,"results":"57","hashOfConfig":"42"},{"size":604,"mtime":1611011539253,"results":"58","hashOfConfig":"42"},{"size":6960,"mtime":1611011539260,"results":"59","hashOfConfig":"42"},{"size":3130,"mtime":1611011539212,"results":"60","hashOfConfig":"42"},{"size":2048,"mtime":1611011539210,"results":"61","hashOfConfig":"42"},{"size":2069,"mtime":1611011539223,"results":"62","hashOfConfig":"42"},{"size":5950,"mtime":1611011539239,"results":"63","hashOfConfig":"42"},{"size":4617,"mtime":1611011539238,"results":"64","hashOfConfig":"42"},{"size":4264,"mtime":1611011539214,"results":"65","hashOfConfig":"42"},{"size":252,"mtime":1611011539453,"results":"66","hashOfConfig":"42"},{"size":490,"mtime":1610065713018,"results":"67","hashOfConfig":"42"},{"size":1692,"mtime":1611011539276,"results":"68","hashOfConfig":"42"},{"size":4488,"mtime":1611015168639,"results":"69","hashOfConfig":"42"},{"size":296,"mtime":1611011539233,"results":"70","hashOfConfig":"42"},{"size":372,"mtime":1611011539200,"results":"71","hashOfConfig":"42"},{"size":962,"mtime":1611011539201,"results":"72","hashOfConfig":"42"},{"size":6640,"mtime":1611016476096,"results":"73","hashOfConfig":"42"},{"size":1578,"mtime":1611011539221,"results":"74","hashOfConfig":"42"},{"size":1717,"mtime":1611011539225,"results":"75","hashOfConfig":"42"},{"size":1621,"mtime":1611011539226,"results":"76","hashOfConfig":"42"},{"size":468,"mtime":1611011539224,"results":"77","hashOfConfig":"42"},{"size":1570,"mtime":1611011539452,"results":"78","hashOfConfig":"42"},{"size":605,"mtime":1611011539454,"results":"79","hashOfConfig":"42"},{"size":1383,"mtime":1611011539455,"results":"80","hashOfConfig":"42"},{"size":437,"mtime":1611011539451,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1xwpbvp",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"84"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"84"},"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/index.js",[],["179","180"],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/store.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/App.js",["181","182","183","184","185","186","187","188","189"],"import React, { Fragment, useEffect, useState } from 'react'\nimport {Router, Route, Switch} from 'react-router-dom'\nimport axios from 'axios'\nimport history from \"./history\";\nimport Alert from './components/reusable/Alert'\n\n// Redux\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './store';\nimport { loadUser, getAllPosts, getPostFromId } from './config/api';\nimport  setAuthToken  from './utils/setAuthToken';\n\n\n// components :\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PrivateRoute from './components/privateroutes/PrivateRoute'\n\nimport Posts from './components/posts/Posts'\nimport Post from './components/posts/Post'\nimport AddPost from './components/posts/AddPost'\nimport EditPost from './components/posts/EditPost'\n\nimport Profile from './components/profile/Profile'\nimport Profiles from './components/profiles/Profiles'\nimport BaseProfile from './components/profiles/BaseProfile'\n// import Profile from './components/profiles/Profilemeikas'\n// import Profiles from './components/profiles/Profilemeika'\nimport AddProfile from './components/profiles/AddProfile'\nimport EditProfile from './components/profiles/EditProfile'\nimport AddExperience from './components/profiles/AddExperience'\nimport AddQualification from './components/profiles/AddQualification'\n\nimport Register from './components/auth/Register'\nimport SignIn from './components/auth/SignIn'\n\n\n\n// styles :\nimport './styles/Styles.css'\nimport './styles/Profile.css'\nimport './styles/Desktop.css'\nimport './styles/Posts.css'\nimport './styles/Tablet.css'\n\n\nconst App = () => { \n\n    const [profiles, setProfiles] = useState([])\n\n    const dispatch = useDispatch()\n\n    \n    // get blog posts\n    useEffect(() => {\n\n       \n        dispatch(getAllPosts())\n\n        .catch(y => {\n            console.log(y)\n        })\n        \n    }, [dispatch])\n    const blogPosts = useSelector((state) =>  state.postReducer)\n\n    \n\n\n\n    return (\n        <div>\n            {/* <Provider store={store}> */}\n                \n                <Router history = {history}>\n                <Fragment>\n                <Navbar/>  \n                <Alert /> \n                    <Switch>\n                        <Route exact path=\"/profiles\" component={Profiles} />\n                        <Route exact path=\"/profile/:id\" component={Profile} />\n                        <Route exact path=\"/auth/register\" component={Register} />\n                        <Route exact path=\"/auth/signin\" component={SignIn} />\n                        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                        <PrivateRoute exact path=\"/createprofile\" component={BaseProfile} />\n                        <PrivateRoute exact path=\"/editprofile\" component={EditProfile} />\n                        <PrivateRoute exact path=\"/addexperience\" component={AddExperience} /> \n                        <PrivateRoute exact path=\"/addqualification\" component={AddQualification} />\n\n                        \n                        {/* <Route exact path=\"/profiles\" render={(props) => <Profiles {...props} profileData={profiles} />} />\n                        <Route exact path=\"/profiles/new\" render={(props) => <AddProfile {...props} profiles={profiles} />} />\n                        <Route exact path=\"/profiles/edit/:id\" render={(props) => <EditProfile {...props}   />} />\n                        <Route exact path=\"/profiles/:id\" render={(props) => <Profile {...props} />} /> */}\n                        \n                        <Route exact path=\"/posts\" render={(props) => <Posts {...props} posts={blogPosts} />} />\n                        <Route exact path=\"/posts/new\" render={(props) => <AddPost {...props}/>} />\n                        <Route exact path=\"/posts/edit/:id\" render={(props) => <EditPost {...props} posts={blogPosts} />} />\n                        <Route exact path=\"/posts/:id\" render={(props) => <Post {...props} />} />\n                        \n                        \n                        <Route exact path=\"/\" render={(props) => <Home {...props} posts={blogPosts} />} />\n\n                    </Switch>\n                    </Fragment>\n                    </Router>\n            {/* </Provider> */}\n        </div>\n                    \n                )};\n\n\nexport default App;","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/history.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/utils/setAuthToken.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/api.js",["190","191","192","193","194","195","196"],"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport setAuthToken from '../utils/setAuthToken'\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CREATE_PROFILE,\n  PROFILE_LOADED,\n  PROFILE_ERROR,\n  PROFILE_LOAD_ERROR,\n  ALL_POSTS,\n  POST_ERROR,\n  CREATE_POST,\n\n  CLEAR_PROFILE,\n  ALL_PROFILE,\n\n  CURRENT_POST,\n  DELETE_POST,\n  UPDATED_POST\n\n\n} from '../actions/constants'\n\nimport history from \"./../history\";\n\n// to connect to deployed server\n\n// Create an axios instance\nexport default axios.create({\n  baseURL: 'https://localhost:5000',\n  timeout: 10000,\n  withCredentials: true\n});\n\n// Load a user \nexport const loadUser = () => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n  try {\n    \n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n    // return res.data\n    // console.log(\"USER LOADED\", USER_LOADED)\n    // console.log(\"ID: \", res.data)\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}\n\n// Register a user\n\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  const body = JSON.stringify ({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n    history.push('/dashboard')\n  } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if(errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}\n\n\n// Login a User -------\nexport const login = ( email, password ) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if(errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// logout user \n\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n  \n};\n\n\n\n\n\n\n\n// get all posts\n\nexport const getAllPosts = (newPosts) => async dispatch =>{\n\n  try {\n\n    const { data } = await axios.get('/api/posts');\n    if (newPosts){\n      dispatch({type: ALL_POSTS, payload: newPosts })\n    } else {\n      dispatch({ type: ALL_POSTS, payload: data })\n\n    }\n\n    // console.log(\"DATA\", data)\n    \n  } catch (err) {\n\n    // const errors = err.response.data.errors;\n    console.log(err)\n    \n    // if(err) {\n    //   err.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    // }\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n}\n\n//  create post\n\nexport const createPost = (post) => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n\n  try {\n    const res = await axios.post('/api/posts', post)\n   \n\n    console.log(res)\n\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    })\n\n    history.push(`/posts/${res.data._id}`)\n    \n\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n\n\n// get post by id\n\nexport const getPostFromId = (id) => async dispatch => {\n\n  try {\n    const { data } = await axios.get(`/api/posts/${id}`)\n    // console.log(\"correct: \", data)\n\n    dispatch({\n      type: CURRENT_POST,\n      payload: data\n    })\n\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n// edit post\nexport const editPost = (id, updatedPost) => async dispatch => {\n\n  try{\n\n    const res = await axios.post(`/api/posts/edit/${id}`, updatedPost)\n\n    dispatch({\n      type: UPDATED_POST,\n      payload: res.data\n    })\n\n    // return res.data\n\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\n// delete post\n\nexport const deletePostById = (id) => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n\n  try {\n    console.log(\"hello world\")\n    const { data } = await axios.delete(`/api/posts/${id}` )\n    \n    // .then(x => console.log(x))\n\n    // dispatch({\n    //   type: DELETE_POST,\n    //   payload: data\n    // })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const toggleLikes = (id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  try {\n\n    const temp = await axios.put(`/api/posts/like/${id}`, config)\n    console.log('likes', temp)\n\n    // dispatch({\n      \n    // })\n\n  } catch(err) {\n    console.log(err)\n  }\n}\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/privateroutes/PrivateRoute.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/AddPost.js",["197","198","199","200"],"import React, { useState } from 'react'\nimport './../../styles/Posts.css'\nimport FormInput from './../reusable/FormInput'\nimport Posts from './Posts'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport { createPost, getAllPosts } from './../../config/api'\nimport { Redirect } from 'react-router-dom'\nimport { currentProfile } from '../../actions/profile'\nimport PropTypes from 'prop-types'\n\n\n\nconst AddPost = ({ currentProfile, auth: { user }, profile: { profile, loading}, history, addPost, match }) => {\n    console.log(profile)\n\n    const dispatch = useDispatch()\n    const posts = useSelector(state => state.postReducer)\n    \n    \n\n    const initialFormState = {\n        title: \"\",\n        category: \"\",\n        text: \"\",\n        // username: profile.username\n        // profile: profile\n\n    }\n\n    const [formState, setFormState] = useState(initialFormState)\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setFormState({\n            ...formState,\n            [name]: value\n        })\n    }\n\n    \n\n    const handleSubmit = e => {\n        e.preventDefault()\n        let newPost = {\n            title: formState.title,\n            category: formState.category || \"general\",\n            text: formState.text,\n            // username: formState.username\n        }\n        console.log('new', newPost)\n\n        dispatch(createPost(newPost))\n        history.push(`/posts/${newPost._id}`)\n        \n    }\n\n\n    return(\n        <div>\n            <div id=\"addPostDiv\">\n                <div className=\"heading\">\n                    <h1>Add post</h1>\n                </div>\n                <form id=\"addPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"text\"\n                        placeholder=\"content here...\"\n                        className=\"addPostField\"\n                        onChange={handleChange}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"addPostSubmit\"\n                    value=\"New Post\"\n                    />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n\nAddPost.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, { currentProfile })(AddPost)","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/Alert.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/EditPost.js",["201","202"],"import React, { useState, useEffect } from 'react'\nimport FormInput from './../reusable/FormInput'\nimport {editPost, setAllPosts, getAllPosts } from './../../config/api'\nimport { useDispatch } from 'react-redux'\n\n// use effect\n\nconst EditPost = ({ match, posts, history}) => {\n\n    const dispatch = useDispatch()\n    const id = match.params.id\n    const post = posts.filter(x => x._id === id)[0]\n\n\n    const [newForm, setNewForm] = useState({\n        title: post.title,\n        category: post.category,\n        text: post.text\n    })\n\n    const { title, category, text } = newForm\n\n    useEffect(() => {\n\n        dispatch(getAllPosts)\n\n    }, [])\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setNewForm({\n            ...newForm,\n            [name]: value\n        })\n        console.log(newForm)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        const updatedPost = {\n            _id: id,\n            user: post.user,\n            modified_date: new Date(),\n            title: newForm.title,\n            category: newForm.category,\n            text: newForm.text\n        }\n        console.log(updatedPost)\n\n        dispatch(editPost(match.params.id, updatedPost))\n\n        // figure out a way to set all posts and have them refresh in real time - maybe use effect\n        history.push(`/posts/${id}`)\n\n    }\n\n\n    return(\n        <div>\n            <div>\n                Edit Post\n            </div>\n            <div>\n                <form id=\"editPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"editPostField\" onChange={handleChange} value={title} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"editPostField\" onChange={handleChange} value={category} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"text\"\n                        placeholder=\"content here...\"\n                        className=\"editPostField\"\n                        onChange={handleChange}\n                        value={text && text}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"editPostSubmit\"\n                    value=\"Update Post\"\n                    />\n\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default EditPost ","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddExperience.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profiles.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/Profile.js",["203"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport ProfileDisplay from './ProfileDisplay'\r\nimport { getProfileId } from '../../actions/profile'\r\n\r\nconst Profile = ({ getProfileId, profile: {profile, match} }) => {\r\n    useEffect(() => {\r\n        getProfileId(match.params.id)\r\n    }, [getProfileId]);\r\n\r\n    return (\r\n        <Fragment>\r\n             {typeof(profiles) ==='object' && <ProfileDisplay profile={profile}/>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileId: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileId })(Profile)\r\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/EditProfile.js",["204"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createProfile, currentProfile } from '../../actions/profile'\n\nconst EditProfile = ({ profile: { profile, loading },\n    createProfile, currentProfile, history }) => {\n    const [formData, setFormData] = useState ({\n        name:'',\n        username:'',\n        dateofbirth:'',\n        location:'',\n        bio:'',\n        blogpostdescription:'',\n        interests:'',\n        website:'',\n        languages:'',\n        experiencelevel:'',\n        yearsofexperience:'',\n        jobtitle:'',\n        business:'',\n        linkedin:'',\n        instagram:'',\n        twitter:'',\n        github:'',\n    });\n\n    useEffect(() =>{\n        currentProfile();\n\n        setFormData({\n        name: loading || !profile.name ? '' : profile.name,\n        username: loading || !profile.username ? '' : profile.username,\n        dateofbirth: loading || !profile.dateofbirth ? '' : profile.dateofbirth,\n        location: loading || !profile.location ? '' : profile.location,\n        bio: loading || !profile.bio ? '' : profile.bio,\n        blogpostdescription: loading || !profile.blogpostdescription ? '' : profile.blogpostdescription,\n        interests: loading || !profile.interests ? '' : profile.interests,\n        website: loading || !profile.website ? '' : profile.website,\n        languages: loading || !profile.languages ? '' : profile.languages,\n        experiencelevel: loading || !profile.experiencelevel ? '' : profile.experiencelevel,\n        yearsofexperience: loading || !profile.yearsofexperience ? '' : profile.yearsofexperience,\n        jobtitle: loading || !profile.jobtitle ? '' : profile.jobtitle,\n        business: loading || !profile.business ? '' : profile.business,\n        linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n        instagram: loading || !profile.social ? '' : profile.social.instagram,\n        twitter: loading || !profile.social ? '' : profile.social.twitter,\n        github: loading || !profile.social ? '' : profile.social.github,\n        });\n    }, [loading]);\n    \n    const {\n        name,\n        username,\n        dateofbirth,\n        location,\n        bio,\n        blogpostdescription,\n        interests,\n        languages,\n        website,\n        experiencelevel,\n        yearsofexperience,\n        jobtitle,\n        business,\n        linkedin,\n        instagram,\n        twitter,\n        github\n    } = formData;\n    \n    const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n    return (\n    <Fragment>\n        <div id=\"profile\">\n        <h1 className=\"header\">\n        Dot Developer Profile\n        </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make you stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n      <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" \n          value={name} onChange={e => onChange(e)}/>\n      </div>\n      <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Username\" name=\"username\" \n          value={username} onChange={e => onChange(e)}/>\n      </div>\n\n      \n      <div className=\"form-group\">\n      <small>Date of Birth</small>\n          <input type=\"date\" placeholder=\"Date of Birth\" name=\"dateofbirth\" \n          value={dateofbirth} onChange={e => onChange(e)}/>\n      </div>\n\n      \n        <div className=\"form-group\">\n          <select name=\"experiencelevel\" value={experiencelevel} onChange={e => onChange(e)}>\n            <option value=\"0\">* Current Developer Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <select name=\"yearsofexperience\" value={yearsofexperience} onChange={e => onChange(e)}>\n            <option value=\"0\">* Years of Experience </option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5 + </option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Business (Currently Working At)\" \n          name=\"business\" value={business} onChange={e => onChange(e)}/> \n        </div>\n\n        <div className=\"form-group\">\n          <select name=\"jobtitle\" value={jobtitle} onChange={e => onChange(e)}>\n            <option value=\"0\"> Jobtitle </option>\n            <option value=\"Web Developer\">Web Developers</option>\n            <option value=\"Web Designer\">Web Designer</option>\n            <option value=\"Game Developer\">Game Developer</option>\n            <option value=\"UI/UX Designer\">UI / UX Designer</option>\n            <option value=\"Dev Ops\">Dev Ops </option>\n            <option value=\"SEO\">SEO Specialist</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website ( If Applicable )\" name=\"website\" \n          value={website} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location (City and State)\" name=\"location\" \n          value={location} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Bio ( A little about yourself)\" name=\"bio\"\n          value={bio} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Interests\" name=\"interests\" \n          value={interests} onChange={e => onChange(e)}/>\n        </div>\n\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Programming languages (Seperate by Comma)\" name=\"languages\"\n          value={languages} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Short Blog Post Description !!\" name=\"blogpostdescription\"\n          value={blogpostdescription} onChange={e => onChange(e)} />\n        </div>\n\n\n        <div className=\"break\">\n          <h1> Add Social Network Links </h1>\n        </div>\n\n        \n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-github fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Github URL\" name=\"github\"\n          value={github} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-twitter fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" \n          value={twitter} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" \n          value={linkedin} onChange={e => onChange(e)}/>\n          \n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-instagram fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" \n          value={instagram} onChange={e => onChange(e)}/>\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n        </form>\n        </div>\n    </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    currentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, currentProfile })(withRouter(EditProfile));\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/SignIn.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddQualification.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddProfile.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/BaseProfile.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Navbar.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Home.js",["205","206","207","208","209"],"import React from 'react'\nimport Posts from './posts/Posts'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n\n\nconst Home = ({ isAuthenticated, posts }) => {\n    if(isAuthenticated) {\n        return <Redirect to='/dashboard'/>\n    }\n\n    const props = {posts}\n    // console.log(posts)\n\n\n    return (\n    <div>\n        <section className='home'>\n            <div className='dark-overlay'>\n                <div className=\"backgroundImg\">\n\n                </div>\n                <div className='home-inner'>\n                    <h1 className='x-large'>Welcome!</h1>\n                    <p class=\"homelead\">\n                        Giving Developers another life! Your one stop for everything developer\n                    </p>\n                    <p>\n                        Sign up for a free account or log in to an existing account to get started\n                    </p>\n                        <a className=\"buttonhome\">\n                        <span class=\"away\"><Link to='auth/Register'>Sign Up</Link></span>\n                        <span class=\"over\"><Link to='auth/Register'>Get Noticed</Link></span>\n                        </a>\n                        &nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;\n                        <a className=\"buttonhome\">\n                        <span class=\"away\"><Link to='auth/signin'>Sign In</Link></span>\n                        <span class=\"over\"><Link to='auth/signin'>Welcome Back!</Link></span>\n                        </a>\n                </div>\n            </div>\n        </section>\n    \n       \n    </div>\n    )\n}\n\nHome.propTypes = {\n    isAuthenticated:PropTypes.bool,\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Home);\n\n{/* <div className=\"homebuttons\">\n<Link to='auth/Register' className='btn btn-primary'>Sign Up!</Link>\n&nbsp;&nbsp;&nbsp;\n<Link to='auth/signin' className='btn btn-secondary'>Sign In!</Link>\n</div> */}","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Dashboard.js",["210"],"import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { currentProfile, deleteAccount } from '../../actions/profile'\nimport { Spinner } from 'react-bootstrap'\nimport DashActions from './DashAction'\n\nimport DisplayProfile from './DisplayProfile'\n\n\nimport Experience from './Experience'\nimport Qualification from './Qualification'\n\nconst Dashboard = ({ currentProfile, deleteAccount, auth: { user }, profile: { profile, loading} }) => {\n\n    useEffect(() => {\n        currentProfile();\n    }, [currentProfile]);\n    console.log(profile)\n\n    return loading && profile === null ? <Spinner /> : \n    <Fragment>\n        <section className='dashboard'>\n        <h1 className =\"display-4\">Dot Developer</h1>\n            <i className='fas fa-user-check' /> Welcome to Dot Dev { user && user.name }\n        <br></br>\n        <br></br>\n        {profile !== null ? ( \n            <Fragment> \n            <DashActions/>\n            <Experience experience={profile.experience}/>\n            <Qualification qualification={profile.qualification}/>\n            </Fragment> ) : (\n        <Fragment> You do not have a Profile setup, please create one!</Fragment>)}\n\n        <section className=\"profilebutton\">\n          <Link to='/createprofile' className=\"btn btn-info\">\n        <span class=\"glyphicon glyphicon-user\">\n            </span>Create Profile</Link>\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n        <span class=\"glyphicon glyphicon-user\">\n            </span>Delete Account</button>\n        </section>\n\n        </section>\n    </Fragment>;\n}\n\nDashboard.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { currentProfile, deleteAccount })(Dashboard);\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Posts.js",["211","212","213","214","215","216","217","218"],"import React, { useState, useEffect } from 'react'\nimport Post from './Post'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\nimport './../../styles/Posts.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getProfiles, getProfileId } from './../../actions/profile'\n\n// try filters with controlled input\n\nconst Posts = ({ posts }) => {\n\n    const filters = {\n        category: \"All\",\n        sortBy: \"Newest\"\n    }\n\n    const [filterData, setFilterData] = useState(filters)\n\n    const dispatch = useDispatch()\n    console.log(posts)\n\n    \n    \n    // useEffect(() => {\n    //     dispatch(getProfiles)\n    // }, [dispatch])\n\n    // let profiles = useSelector(state => state.profile.profiles)\n    // console.log(profiles)\n\n    // const getAllProfiles = async () => {\n    //     const res = await axios.get('http://localhost:5000/api/profile')\n    //     // console.log(res.data)\n    //     let profiles = res.data\n    //     return profiles\n    // }\n    // let profiles = getAllProfiles()\n    // console.log(profiles)\n\n    \n\n    \n\n\n\n    function DisplayPosts(post) {\n        const { title, category, user, likes } = post\n        // const profile = profiles.find(x => x._id === user)\n        // console.log(profile)\n        \n\n        \n        return (\n            <div className=\"postCard\">\n                <Link to={`/posts/${post._id}`} className=\"titleLink\">\n                    <h1 className=\"postTitle\">{title}</h1>\n                </Link>\n                <div className=\"postInfo\">\n\n                    {/* <h5>Posted by: {user}</h5> */}\n                    <h3>{category}</h3>\n\n                    <div className=\"upVotesDiv\">\n                        <p className=\"upVotes\">++ {likes.length} </p>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n\n\n\n    // updating display function to take different parameters\n    // first it should filter through the posts and find the \n    // category matching the one given as filter\n    // with that filtered data, it should impliment the chosen\n    // sorting method, eg. newest, oldest, most upvotes, least etc.\n\n    const sortOptions = (a, b, sortBy) => {\n\n        switch (sortBy){\n            case \"Newest\":\n                return (new Date(b.modified_date) - new Date(a.modified_date))\n                \n            case \"Oldest\":\n                return (new Date(a.modified_date) - new Date(b.modified_date))\n            case \"Most Upvotes\":\n                return (b.likes.length - a.likes.length)\n                // return null\n            case \"Least Upvotes\":\n                return null\n            default:\n                return (new Date(b.modified_date) - new Date(a.modified_date))\n                \n\n        }\n    }\n    \n\n    function Display (){\n        const { category, sortBy } = filterData\n       \n\n        return (posts && posts\n\n            .filter((x) => {\n                if (category === \"All\"){\n                    return x\n                } else {\n                    return x.category[0] === category\n                }\n               \n            }\n            )\n            .sort((a, b) =>  sortOptions(a, b, sortBy))\n            .map((post) => {\n                return DisplayPosts(post)\n            })\n            \n        )\n    }\n\n\n    \n\n    function openFilters () {\n        const filterBtn = document.querySelector('.filters')\n\n\n        if (filterBtn){\n            (filterBtn.style.display === \"none\") ? (filterBtn.style.display = \"flex\") : (filterBtn.style.display = \"none\")\n        }\n        \n    }\n\n\n    // const categoryOptions = [\"Code\", \"Food\", \"Issues\", \"Meetups\"]\n\n    const categoryOptions = [\n        {label: \"All\", value: \"category\"},\n        {label: \"Code\", value: \"category\"},\n        {label: \"Food\", value: \"category\"},\n        {label: \"Issues\", value: \"category\"},\n        {label: \"Meetups\", value: \"category\"},\n        {label: \"Health\", value: \"category\"}\n    ]\n\n    // const sortByOptions = [\"Newest\", \"Oldest\", \"Most Upvotes\", \"Least Upvotes\"]\n\n    const sortByOptions = [\n        {label: \"Newest\", value: \"sortBy\"},\n        {label: \"Oldest\", value: \"sortBy\"},\n        {label: \"Most Upvotes\", value: \"sortBy\"},\n        {label: \"Least Upvotes\", value: \"sortBy\"}\n    ]\n\n    const handleSelection = e => {\n       console.log(e)\n        const { value, label } = e\n\n        \n        setFilterData({\n            ...filterData,\n            [value]: label\n        })\n        console.log('filter: ', filterData)\n    }\n\n\n\n    return(\n        <div className=\"postsDiv\">\n            <div className=\"postBgImage\">\n                \n            </div>\n            <div className=\"postBgTransparent\">\n\n            <div className=\"postHeading\">\n                <h4>Posts</h4>\n            </div>\n            <div className=\"filterText\">\n                <p onClick={openFilters}>Filter</p>\n            </div>\n            <div className=\"filters width70\">\n                <div className=\"filterDropdowns\">\n                    <div className=\"dropdownDiv\">\n                        <p>Category: </p>\n                        <Dropdown className='myClassName' options={categoryOptions} id=\"categoryFilter\" label=\"category\" onChange={handleSelection} />\n                    </div>\n                    <div className=\"dropdownDiv\">\n                        <p>Sort by:</p>\n                        <Dropdown options={sortByOptions} id=\"sortByFilter\" label=\"sortBy\" onChange={handleSelection} />\n                    </div>\n                </div>\n                \n                {/* <div className=\"filterBtn\">\n                    <button onClick={handleFilterSubmit}>Done</button>\n                </div> */}\n                \n            </div>\n            \n            <div className=\"width70 posts\">\n                <Display filters={filterData} />\n            </div>\n            </div>\n\n\n\n        </div>\n    )\n}\n\n\nexport default Posts","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Post.js",["219","220","221"],"import React, { useEffect, useState } from 'react'\nimport {Link} from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deletePostById, getPostFromId, toggleLikes } from '../../config/api'\nimport axios from 'axios'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { currentProfile, getProfileId } from '../../actions/profile'\n\n\n\nconst Post = ({ history, match, currentProfile, auth: { user }, profile: { profile, loading}   }) => {\n    // console.log(user)\n    const currentUser = user\n\n\n\n    const dispatch = useDispatch()\n\n    const posts = useSelector(state => state.postReducer)\n\n    let post \n    if (posts){ \n        // console. log(posts)\n        post = posts.filter(x => x._id === match.params.id)\n        post = post[0]\n\n    }\n    const postUser = post.user\n    console.log(postUser)\n    \n    useEffect(() => {\n        dispatch(getProfileId(postUser))\n        \n    }, [dispatch, postUser])\n\n    // console.log(postUser)\n\n    let profiles = useSelector(state => state.profile)\n    profiles = profiles.profiles\n    console.log(profiles)\n    const { blogpostdescription, username } = profiles\n    // console.log(blogpostdescription)\n    // const avatar = profiles.user.avatar\n\n    // const [correctPost, setPost] = useState(post)\n\n\n\n\n\n\n\n    \n\n\n    // user only likes once\n    // \n    const handleLikes = () => {\n        // console.log(currentUser)\n        // const currentId = currentUser._id\n        // if (post.likes.includes(currentId)){\n        //     let index = post.likes.findIndex(x => x === currentId)\n        //     post.likes.splice(index, 1)\n        // } else {\n        //     post.likes.push(currentId)\n        //     console.log(post.likes)\n        // }\n       \n        dispatch(toggleLikes(post._id))\n        // console.log(post.likes)\n        \n        \n\n        \n    }\n\n    const deletePost = (e) => {\n        e.preventDefault()\n        dispatch(deletePostById(match.params.id))\n        history.push('/')\n    }\n\n\n\n\n\n\n    if (!post) {\n        return null\n    } else {\n        const { title, category, text, likes, user, modified_date } = post\n\n        \n        return (\n            <div>\n                <div>\n                    <div className=\"singlePostTitle\">\n                        <Link to={`/posts/${post._id}`} className=\"singleTitleLink\">\n                            <h1 id=\"postTitle\">{title}</h1>\n                        </Link>\n                    </div>\n                    <div id=\"postSections\" className=\"width70\">\n                        \n                        <div className=\"singlePostInfo\">\n                            <h5 id=\"postDate\">Posted {modified_date.toLocaleString().slice(0, 10)}</h5><br></br>\n                            <h3>{category}</h3>\n                            \n                            <p>{text}</p>\n                        </div>\n                        <div className=\"authorInfo\">\n                            {/* <img src={avatar} alt=\"avatar\"  id=\"postAvatar\"/> */}\n                            <p className=\"postUsername\">@{username}</p>\n                            \n                            <p className=\"postDesc\">{\n                                blogpostdescription && blogpostdescription\n                            }\n                            </p>\n\n                            <div className=\"postUpvotes\">\n                                <p onClick={handleLikes} className=\"upvoteButton\">++ {likes && likes.length}</p>\n                            \n                            </div>\n                            {\n                                currentUser && currentUser._id === user && \n                                <button onClick={deletePost} >Delete post</button>\n                            }\n                            {\n                                currentUser && currentUser._id === user && \n                                <Link to={`/posts/edit/${match.params.id}`}>\n                                    <button>Edit post</button>\n                                </Link>\n                                \n                            }\n                        </div>\n                        \n                        \n                    </div>\n                    \n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nPost.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, {currentProfile})(Post);\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/Register.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/index.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/FormInput.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/ProfileFields.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/ProfileDisplay.js",["222","223","224","225","226","227"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileDisplay = ({ profile: {\r\n    user: { name, avatar },\r\n    title,\r\n    company,\r\n    location,\r\n    social,\r\n    }\r\n\r\n}) => {\r\n    return(\r\n        <div class=\"profile-top bg-primary p-2\">\r\n          <img\r\n            class=\"round-img my-1\"\r\n            src={avatar}\r\n            alt=\"\"\r\n          />\r\n          <h1 class=\"large\">{name}</h1>\r\n          <p class=\"lead\"> {title}</p>\r\n          <p class=\"lead\"> {company}</p>\r\n          <p>{location}</p>\r\n          <div class=\"icons my-1\">\r\n              {\r\n                  social && (\r\n                    <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i class=\"fas fa-globe fa-2x\"></i>\r\n                  </a>\r\n                  )\r\n              }\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fas fa-globe fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-twitter fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-facebook fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-linkedin fa-2x\"></i>\r\n            </a>\r\n             <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-youtube fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-instagram fa-2x\"></i>\r\n            </a>\r\n          </div>\r\n\r\n           \r\n          <div class=\"profile-about bg-light p-2\">\r\n          <h2 class=\"text-primary\">John's Bio</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sed\r\n            doloremque nesciunt, repellendus nostrum deleniti recusandae nobis\r\n            neque modi perspiciatis similique?\r\n          </p>\r\n          <div class=\"line\"></div>\r\n          <h2 class=\"text-primary\">Skill Set</h2>\r\n          <div class=\"skills\">\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> HTML</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> CSS</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> JavaScript</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> Python</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> C#</div>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <div class=\"profile-exp bg-white p-2\">\r\n          <h2 class=\"text-primary\">Experience</h2>\r\n          <div>\r\n            <h3 class=\"text-dark\">Microsoft</h3>\r\n            <p>Oct 2011 - Current</p>\r\n            <p><strong>Position: </strong>Senior Developer</p>\r\n            <p>\r\n              <strong>Description: </strong>Lorem ipsum dolor sit amet\r\n              consectetur adipisicing elit. Dignissimos placeat, dolorum ullam\r\n              ipsam, sapiente suscipit dicta eius velit amet aspernatur\r\n              asperiores modi quidem expedita fugit.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <h3 class=\"text-dark\">Sun Microsystems</h3>\r\n            <p>Nov 2004 - Nov 2011</p>\r\n            <p><strong>Position: </strong>Systems Admin</p>\r\n            <p>\r\n              <strong>Description: </strong>Lorem ipsum dolor sit amet\r\n              consectetur adipisicing elit. Dignissimos placeat, dolorum ullam\r\n              ipsam, sapiente suscipit dicta eius velit amet aspernatur\r\n              asperiores modi quidem expedita fugit.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"profile-edu bg-white p-2\">\r\n          <h2 class=\"text-primary\">Education</h2>\r\n          <div>\r\n            <h3>University Of Washington</h3>\r\n            <p>Sep 1993 - June 1999</p>\r\n            <p><strong>Degree: </strong>Masters</p>\r\n            <p><strong>Field Of Study: </strong>Computer Science</p>\r\n            <p>\r\n              <strong>Description: </strong>Lorem ipsum dolor sit amet\r\n              consectetur adipisicing elit. Dignissimos placeat, dolorum ullam\r\n              ipsam, sapiente suscipit dicta eius velit amet aspernatur\r\n              asperiores modi quidem expedita fugit.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nProfileDisplay.propTypes = {\r\n    Profile: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileDisplay;\r\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/spinner.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/alert.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/constants.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/profile.js",["228"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    ALL_PROFILE,\r\n    GET_PROFILES,\r\n    CLEAR_PROFILE,\r\n    DELETE_ACCOUNT,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n\r\n} from './constants';\r\n\r\n// WILL GET THE CURRENT USERS PROFILE UPON SIGN IN IF NOT SIGN UP\r\nexport const currentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('api/profile/me');\r\n\r\n        dispatch({\r\n            type: ALL_PROFILE,\r\n            payload: res.data\r\n        }); \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n    \r\n        if(errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// ALL PROFILES\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        console.log(res)\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        }); \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n    \r\n        if(errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n// PROFILE BY ID\r\nexport const getProfileId = (userId) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/profile/user/${userId}`);\r\n        console.log(\"getProfileId\", res.data)\r\n        dispatch({\r\n            type: ALL_PROFILE,\r\n            payload: res.data\r\n        }); \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n    \r\n        if(errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// CREATE DELETE UPDATE PROFILE \r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: ALL_PROFILE,\r\n            payload: res.data\r\n        }); \r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        } \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// EXPERIENCE ROUTE\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        }); \r\n\r\n        dispatch(setAlert('Experience Successfully Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }};\r\n\r\n    // qualifications route\r\n\r\n    export const addQualification = (formData, history) => async dispatch => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            }\r\n    \r\n            const res = await axios.put('/api/profile/qualification', formData, config);\r\n    \r\n            dispatch({\r\n                type: UPDATE_PROFILE,\r\n                payload: res.data\r\n            }); \r\n    \r\n            dispatch(setAlert('Qualifications Successfully Added', 'success'));\r\n    \r\n            history.push('/dashboard');\r\n        } catch (err) {\r\n            const errors = err.response.data.errors;\r\n    \r\n            if(errors) {\r\n                errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            }\r\n            \r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }};\r\n\r\n// Delete Experiences\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Deleted', ' Success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n// Delete qaulification\r\n\r\nexport const deleteQualification = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/qualification/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Qualification Deleted', ' Success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n// DELETE EVERYTHING\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Confirmation of Nuclear Codes')) {\r\n\r\n    }\r\n    try {\r\n        const res = await axios.delete(`/api/profile`);\r\n\r\n        dispatch({\r\n            type: CLEAR_PROFILE,\r\n            TYPE: DELETE_ACCOUNT,\r\n        });\r\n\r\n        dispatch(setAlert('Account Deleted'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DashAction.js",["229"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DashAction = props => {\n    return (\n      <div class=\"multi-button\">\n        <button><Link to=\"/editprofile\">Edit Profile</Link></button>\n        <button><Link to=\"/addexperience\">Add Experience</Link></button>\n        <button><Link to=\"/addqualification\">Add Qualification</Link></button>\n      </div>\n\n    )\n};\n\nexport default DashAction\n\n\n\n\n\n{/* <div>\n            <div class=\"dash-buttons\">\n        <Link to=\"/editprofile\" class=\"btn btn-light\">\n            <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n            &nbsp;\n        <Link to=\"/addexperience\" class=\"btn btn-light\">\n            <i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n            &nbsp;\n        <Link to=\"/addqualification\" class=\"btn btn-light\">\n        <i class=\"fas fa-graduation-cap text-primary\"></i> Add Qualifications</Link>\n      </div> */}\n\n      //         <div>\n//             <div class=\"dash-buttons\">\n//                 <Link to=\"/editprofile\" class=\"btn btn-light\">\n//                     <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n//                 &nbsp;\n//                 <Link to=\"/add-experience\" class=\"btn btn-light\">\n//                     <i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n//                 &nbsp;\n//                 <Link to=\"/add-education\" class=\"btn btn-light\">\n//                     <i class=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\n//             </div>\n//         </div>\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Experience.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Qualification.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DisplayProfile.js",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"import React from 'react'\nimport Profiles from '../profiles/Profiles'\n\nconst DisplayProfile = ({ profile }) => {\n    console.log(profile)\n\n    const { bio, blogPostDescription, currentroles, dateofbirth, \n    interests, location, name, pastroles, portfolio, prospects, \n    qualifications, skills, username, user } = profile\n\n    const { avatar } = user\n\n\n    return (\n        <div id=\"profileDiv\">\n            \n\n\n        </div>\n    )\n\n}\n\nexport default DisplayProfile","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/auth.js",["245","246","247","248","249"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CREATE_PROFILE_SUCCESS,\r\n    PROFILE_LOADED,\r\n    PROFILE_LOAD_ERROR,\r\n    PROFILE_ERROR,\r\n    DELETE_ACCOUNT, \r\n    \r\n}   from '../actions/constants';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case USER_LOADED:\r\n            \r\n            // console.log(\"USER ID !:\", localStorage)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token );\r\n            \r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case REGISTER_FAIL: \r\n        case AUTH_ERROR: \r\n        case LOGIN_FAIL:\r\n        case LOGOUT: \r\n        case DELETE_ACCOUNT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/post.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/profile.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/alert.js",["250"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/constants';\r\n\r\nconst initialState = [\r\n   \r\n];\r\n\r\nexport default function (state = initialState, alert) {\r\n    const { type, payload } = alert;\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n            default:\r\n                return state;\r\n    }\r\n}",{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","severity":1,"message":"256","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":13},{"ruleId":"255","severity":1,"message":"259","line":8,"column":10,"nodeType":"257","messageId":"258","endLine":8,"endColumn":18},{"ruleId":"255","severity":1,"message":"260","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":13},{"ruleId":"255","severity":1,"message":"261","line":10,"column":10,"nodeType":"257","messageId":"258","endLine":10,"endColumn":18},{"ruleId":"255","severity":1,"message":"262","line":10,"column":33,"nodeType":"257","messageId":"258","endLine":10,"endColumn":46},{"ruleId":"255","severity":1,"message":"263","line":11,"column":9,"nodeType":"257","messageId":"258","endLine":11,"endColumn":21},{"ruleId":"255","severity":1,"message":"264","line":30,"column":8,"nodeType":"257","messageId":"258","endLine":30,"endColumn":18},{"ruleId":"255","severity":1,"message":"265","line":50,"column":12,"nodeType":"257","messageId":"258","endLine":50,"endColumn":20},{"ruleId":"255","severity":1,"message":"266","line":50,"column":22,"nodeType":"257","messageId":"258","endLine":50,"endColumn":33},{"ruleId":"255","severity":1,"message":"267","line":12,"column":3,"nodeType":"257","messageId":"258","endLine":12,"endColumn":17},{"ruleId":"255","severity":1,"message":"268","line":13,"column":3,"nodeType":"257","messageId":"258","endLine":13,"endColumn":17},{"ruleId":"255","severity":1,"message":"269","line":14,"column":3,"nodeType":"257","messageId":"258","endLine":14,"endColumn":16},{"ruleId":"255","severity":1,"message":"270","line":15,"column":3,"nodeType":"257","messageId":"258","endLine":15,"endColumn":21},{"ruleId":"255","severity":1,"message":"271","line":21,"column":3,"nodeType":"257","messageId":"258","endLine":21,"endColumn":14},{"ruleId":"255","severity":1,"message":"272","line":24,"column":3,"nodeType":"257","messageId":"258","endLine":24,"endColumn":14},{"ruleId":"255","severity":1,"message":"273","line":254,"column":13,"nodeType":"257","messageId":"258","endLine":254,"endColumn":17},{"ruleId":"255","severity":1,"message":"274","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"275","line":6,"column":22,"nodeType":"257","messageId":"258","endLine":6,"endColumn":33},{"ruleId":"255","severity":1,"message":"276","line":7,"column":10,"nodeType":"257","messageId":"258","endLine":7,"endColumn":18},{"ruleId":"255","severity":1,"message":"277","line":17,"column":11,"nodeType":"257","messageId":"258","endLine":17,"endColumn":16},{"ruleId":"255","severity":1,"message":"278","line":3,"column":19,"nodeType":"257","messageId":"258","endLine":3,"endColumn":30},{"ruleId":"279","severity":1,"message":"280","line":27,"column":8,"nodeType":"281","endLine":27,"endColumn":10,"suggestions":"282"},{"ruleId":"279","severity":1,"message":"283","line":10,"column":8,"nodeType":"281","endLine":10,"endColumn":22,"suggestions":"284"},{"ruleId":"279","severity":1,"message":"285","line":51,"column":8,"nodeType":"281","endLine":51,"endColumn":17,"suggestions":"286"},{"ruleId":"255","severity":1,"message":"274","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":13},{"ruleId":"255","severity":1,"message":"287","line":14,"column":11,"nodeType":"257","messageId":"258","endLine":14,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":33,"column":25,"nodeType":"290","endLine":33,"endColumn":51},{"ruleId":"288","severity":1,"message":"289","line":39,"column":25,"nodeType":"290","endLine":39,"endColumn":51},{"ruleId":"291","severity":1,"message":"292","line":61,"column":1,"nodeType":"293","messageId":"294","endLine":65,"endColumn":11},{"ruleId":"255","severity":1,"message":"295","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":22},{"ruleId":"255","severity":1,"message":"296","line":1,"column":27,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"297","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":12},{"ruleId":"255","severity":1,"message":"256","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":13},{"ruleId":"255","severity":1,"message":"298","line":8,"column":10,"nodeType":"257","messageId":"258","endLine":8,"endColumn":21},{"ruleId":"255","severity":1,"message":"299","line":9,"column":10,"nodeType":"257","messageId":"258","endLine":9,"endColumn":21},{"ruleId":"255","severity":1,"message":"300","line":9,"column":23,"nodeType":"257","messageId":"258","endLine":9,"endColumn":35},{"ruleId":"255","severity":1,"message":"301","line":22,"column":11,"nodeType":"257","messageId":"258","endLine":22,"endColumn":19},{"ruleId":"255","severity":1,"message":"302","line":50,"column":34,"nodeType":"257","messageId":"258","endLine":50,"endColumn":38},{"ruleId":"255","severity":1,"message":"303","line":1,"column":28,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36},{"ruleId":"255","severity":1,"message":"262","line":4,"column":26,"nodeType":"257","messageId":"258","endLine":4,"endColumn":39},{"ruleId":"255","severity":1,"message":"256","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":13},{"ruleId":"288","severity":1,"message":"304","line":32,"column":13,"nodeType":"290","endLine":32,"endColumn":67},{"ruleId":"288","severity":1,"message":"304","line":35,"column":13,"nodeType":"290","endLine":35,"endColumn":67},{"ruleId":"288","severity":1,"message":"304","line":38,"column":13,"nodeType":"290","endLine":38,"endColumn":67},{"ruleId":"288","severity":1,"message":"304","line":41,"column":13,"nodeType":"290","endLine":41,"endColumn":67},{"ruleId":"288","severity":1,"message":"304","line":44,"column":14,"nodeType":"290","endLine":44,"endColumn":68},{"ruleId":"288","severity":1,"message":"304","line":47,"column":13,"nodeType":"290","endLine":47,"endColumn":67},{"ruleId":"255","severity":1,"message":"305","line":231,"column":15,"nodeType":"257","messageId":"258","endLine":231,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":21,"column":1,"nodeType":"293","messageId":"294","endLine":31,"endColumn":17},{"ruleId":"255","severity":1,"message":"306","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":16},{"ruleId":"255","severity":1,"message":"307","line":7,"column":13,"nodeType":"257","messageId":"258","endLine":7,"endColumn":16},{"ruleId":"255","severity":1,"message":"308","line":7,"column":18,"nodeType":"257","messageId":"258","endLine":7,"endColumn":37},{"ruleId":"255","severity":1,"message":"309","line":7,"column":39,"nodeType":"257","messageId":"258","endLine":7,"endColumn":51},{"ruleId":"255","severity":1,"message":"310","line":7,"column":53,"nodeType":"257","messageId":"258","endLine":7,"endColumn":64},{"ruleId":"255","severity":1,"message":"311","line":8,"column":5,"nodeType":"257","messageId":"258","endLine":8,"endColumn":14},{"ruleId":"255","severity":1,"message":"312","line":8,"column":16,"nodeType":"257","messageId":"258","endLine":8,"endColumn":24},{"ruleId":"255","severity":1,"message":"313","line":8,"column":26,"nodeType":"257","messageId":"258","endLine":8,"endColumn":30},{"ruleId":"255","severity":1,"message":"314","line":8,"column":32,"nodeType":"257","messageId":"258","endLine":8,"endColumn":41},{"ruleId":"255","severity":1,"message":"315","line":8,"column":43,"nodeType":"257","messageId":"258","endLine":8,"endColumn":52},{"ruleId":"255","severity":1,"message":"316","line":8,"column":54,"nodeType":"257","messageId":"258","endLine":8,"endColumn":63},{"ruleId":"255","severity":1,"message":"317","line":9,"column":5,"nodeType":"257","messageId":"258","endLine":9,"endColumn":19},{"ruleId":"255","severity":1,"message":"318","line":9,"column":21,"nodeType":"257","messageId":"258","endLine":9,"endColumn":27},{"ruleId":"255","severity":1,"message":"319","line":9,"column":29,"nodeType":"257","messageId":"258","endLine":9,"endColumn":37},{"ruleId":"255","severity":1,"message":"320","line":11,"column":13,"nodeType":"257","messageId":"258","endLine":11,"endColumn":19},{"ruleId":"255","severity":1,"message":"321","line":2,"column":5,"nodeType":"257","messageId":"258","endLine":2,"endColumn":21},{"ruleId":"255","severity":1,"message":"322","line":9,"column":5,"nodeType":"257","messageId":"258","endLine":9,"endColumn":27},{"ruleId":"255","severity":1,"message":"268","line":10,"column":5,"nodeType":"257","messageId":"258","endLine":10,"endColumn":19},{"ruleId":"255","severity":1,"message":"270","line":11,"column":5,"nodeType":"257","messageId":"258","endLine":11,"endColumn":23},{"ruleId":"255","severity":1,"message":"269","line":12,"column":5,"nodeType":"257","messageId":"258","endLine":12,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":7,"column":1,"nodeType":"325","endLine":17,"endColumn":2},"no-native-reassign",["326"],"no-negated-in-lhs",["327"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'store' is defined but never used.","'loadUser' is defined but never used.","'getPostFromId' is defined but never used.","'setAuthToken' is defined but never used.","'AddProfile' is defined but never used.","'profiles' is assigned a value but never used.","'setProfiles' is assigned a value but never used.","'CREATE_PROFILE' is defined but never used.","'PROFILE_LOADED' is defined but never used.","'PROFILE_ERROR' is defined but never used.","'PROFILE_LOAD_ERROR' is defined but never used.","'ALL_PROFILE' is defined but never used.","'DELETE_POST' is defined but never used.","'data' is assigned a value but never used.","'Posts' is defined but never used.","'getAllPosts' is defined but never used.","'Redirect' is defined but never used.","'posts' is assigned a value but never used.","'setAllPosts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["328"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["329"],"React Hook useEffect has missing dependencies: 'currentProfile', 'profile.bio', 'profile.blogpostdescription', 'profile.business', 'profile.dateofbirth', 'profile.experiencelevel', 'profile.interests', 'profile.jobtitle', 'profile.languages', 'profile.location', 'profile.name', 'profile.social', 'profile.username', 'profile.website', and 'profile.yearsofexperience'. Either include them or remove the dependency array. If 'currentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["330"],"'props' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'DisplayProfile' is defined but never used.","'useEffect' is defined but never used.","'Post' is defined but never used.","'useSelector' is defined but never used.","'getProfiles' is defined but never used.","'getProfileId' is defined but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'useState' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'res' is assigned a value but never used.","'Profiles' is defined but never used.","'bio' is assigned a value but never used.","'blogPostDescription' is assigned a value but never used.","'currentroles' is assigned a value but never used.","'dateofbirth' is assigned a value but never used.","'interests' is assigned a value but never used.","'location' is assigned a value but never used.","'name' is assigned a value but never used.","'pastroles' is assigned a value but never used.","'portfolio' is assigned a value but never used.","'prospects' is assigned a value but never used.","'qualifications' is assigned a value but never used.","'skills' is assigned a value but never used.","'username' is assigned a value but never used.","'avatar' is assigned a value but never used.","'REGISTER_SUCCESS' is defined but never used.","'CREATE_PROFILE_SUCCESS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [dispatch]",{"range":"337","text":"338"},"Update the dependencies array to be: [getProfileId, match.params.id]",{"range":"339","text":"340"},"Update the dependencies array to be: [currentProfile, loading, profile.bio, profile.blogpostdescription, profile.business, profile.dateofbirth, profile.experiencelevel, profile.interests, profile.jobtitle, profile.languages, profile.location, profile.name, profile.social, profile.username, profile.website, profile.yearsofexperience]",{"range":"341","text":"342"},[643,645],"[dispatch]",[367,381],"[getProfileId, match.params.id]",[2191,2200],"[currentProfile, loading, profile.bio, profile.blogpostdescription, profile.business, profile.dateofbirth, profile.experiencelevel, profile.interests, profile.jobtitle, profile.languages, profile.location, profile.name, profile.social, profile.username, profile.website, profile.yearsofexperience]"]
=======
[{"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/index.js":"1","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/store.js":"2","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/App.js":"3","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/history.js":"4","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/utils/setAuthToken.js":"5","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/api.js":"6","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/privateroutes/PrivateRoute.js":"7","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/AddPost.js":"8","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/Alert.js":"9","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/EditPost.js":"10","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddExperience.js":"11","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profiles.js":"12","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/Profile.js":"13","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/EditProfile.js":"14","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/SignIn.js":"15","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddQualification.js":"16","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddProfile.js":"17","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/BaseProfile.js":"18","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Navbar.js":"19","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Home.js":"20","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Dashboard.js":"21","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Posts.js":"22","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Post.js":"23","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/Register.js":"24","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/index.js":"25","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/FormInput.js":"26","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/ProfileFields.js":"27","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/ProfileDisplay.js":"28","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/spinner.js":"29","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/alert.js":"30","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/constants.js":"31","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/profile.js":"32","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DashAction.js":"33","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Experience.js":"34","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Qualification.js":"35","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DisplayProfile.js":"36","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/auth.js":"37","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/post.js":"38","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/profile.js":"39","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/alert.js":"40"},{"size":363,"mtime":1610494647789,"results":"41","hashOfConfig":"42"},{"size":389,"mtime":1610087118246,"results":"43","hashOfConfig":"42"},{"size":4375,"mtime":1610952984053,"results":"44","hashOfConfig":"42"},{"size":86,"mtime":1610677823060,"results":"45","hashOfConfig":"42"},{"size":264,"mtime":1610333893030,"results":"46","hashOfConfig":"42"},{"size":4865,"mtime":1610930615028,"results":"47","hashOfConfig":"42"},{"size":595,"mtime":1610841883292,"results":"48","hashOfConfig":"42"},{"size":2899,"mtime":1610930614994,"results":"49","hashOfConfig":"42"},{"size":528,"mtime":1610244663054,"results":"50","hashOfConfig":"42"},{"size":2557,"mtime":1610930615000,"results":"51","hashOfConfig":"42"},{"size":3636,"mtime":1610707585105,"results":"52","hashOfConfig":"42"},{"size":1146,"mtime":1610947565687,"results":"53","hashOfConfig":"42"},{"size":916,"mtime":1610962215726,"results":"54","hashOfConfig":"42"},{"size":8429,"mtime":1610677947238,"results":"55","hashOfConfig":"42"},{"size":2210,"mtime":1610930614973,"results":"56","hashOfConfig":"42"},{"size":2568,"mtime":1610709604109,"results":"57","hashOfConfig":"42"},{"size":604,"mtime":1610930615017,"results":"58","hashOfConfig":"42"},{"size":6960,"mtime":1610677965456,"results":"59","hashOfConfig":"42"},{"size":3130,"mtime":1610948644774,"results":"60","hashOfConfig":"42"},{"size":2048,"mtime":1610948644768,"results":"61","hashOfConfig":"42"},{"size":2069,"mtime":1610948644788,"results":"62","hashOfConfig":"42"},{"size":5950,"mtime":1610948644802,"results":"63","hashOfConfig":"42"},{"size":4617,"mtime":1610948644795,"results":"64","hashOfConfig":"42"},{"size":4264,"mtime":1610948644781,"results":"65","hashOfConfig":"42"},{"size":252,"mtime":1610501489812,"results":"66","hashOfConfig":"42"},{"size":490,"mtime":1610065713018,"results":"67","hashOfConfig":"42"},{"size":1692,"mtime":1610953354171,"results":"68","hashOfConfig":"42"},{"size":4488,"mtime":1610962247069,"results":"69","hashOfConfig":"42"},{"size":296,"mtime":1610511677230,"results":"70","hashOfConfig":"42"},{"size":372,"mtime":1610318153473,"results":"71","hashOfConfig":"42"},{"size":962,"mtime":1610930614952,"results":"72","hashOfConfig":"42"},{"size":6639,"mtime":1610962067084,"results":"73","hashOfConfig":"42"},{"size":1578,"mtime":1610937894238,"results":"74","hashOfConfig":"42"},{"size":1717,"mtime":1610883178794,"results":"75","hashOfConfig":"42"},{"size":1621,"mtime":1610780582609,"results":"76","hashOfConfig":"42"},{"size":468,"mtime":1610930614989,"results":"77","hashOfConfig":"42"},{"size":1570,"mtime":1610930615053,"results":"78","hashOfConfig":"42"},{"size":605,"mtime":1610930615058,"results":"79","hashOfConfig":"42"},{"size":1383,"mtime":1610930615063,"results":"80","hashOfConfig":"42"},{"size":437,"mtime":1610276487506,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"1xwpbvp",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"84"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/index.js",[],["176","177"],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/store.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/App.js",["178","179","180","181","182","183","184","185","186"],"import React, { Fragment, useEffect, useState } from 'react'\nimport {Router, Route, Switch} from 'react-router-dom'\nimport axios from 'axios'\nimport history from \"./history\";\nimport Alert from './components/reusable/Alert'\n\n// Redux\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './store';\nimport { loadUser, getAllPosts, getPostFromId } from './config/api';\nimport  setAuthToken  from './utils/setAuthToken';\n\n\n// components :\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PrivateRoute from './components/privateroutes/PrivateRoute'\n\nimport Posts from './components/posts/Posts'\nimport Post from './components/posts/Post'\nimport AddPost from './components/posts/AddPost'\nimport EditPost from './components/posts/EditPost'\n\nimport Profile from './components/profile/Profile'\nimport Profiles from './components/profiles/Profiles'\nimport BaseProfile from './components/profiles/BaseProfile'\n// import Profile from './components/profiles/Profilemeikas'\n// import Profiles from './components/profiles/Profilemeika'\nimport AddProfile from './components/profiles/AddProfile'\nimport EditProfile from './components/profiles/EditProfile'\nimport AddExperience from './components/profiles/AddExperience'\nimport AddQualification from './components/profiles/AddQualification'\n\nimport Register from './components/auth/Register'\nimport SignIn from './components/auth/SignIn'\n\n\n\n// styles :\nimport './styles/Styles.css'\nimport './styles/Profile.css'\nimport './styles/Desktop.css'\nimport './styles/Posts.css'\nimport './styles/Tablet.css'\n\n\nconst App = () => { \n\n    const [profiles, setProfiles] = useState([])\n\n    const dispatch = useDispatch()\n\n    \n    // get blog posts\n    useEffect(() => {\n\n       \n        dispatch(getAllPosts())\n\n        .catch(y => {\n            console.log(y)\n        })\n        \n    }, [dispatch])\n    const blogPosts = useSelector((state) =>  state.postReducer)\n\n    \n\n\n\n    return (\n        <div>\n            {/* <Provider store={store}> */}\n                \n                <Router history = {history}>\n                <Fragment>\n                <Navbar/>  \n                <Alert /> \n                    <Switch>\n                        <Route exact path=\"/profiles\" component={Profiles} />\n                        <Route exact path=\"/profile/:id\" component={Profile} />\n                        <Route exact path=\"/auth/register\" component={Register} />\n                        <Route exact path=\"/auth/signin\" component={SignIn} />\n                        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                        <PrivateRoute exact path=\"/createprofile\" component={BaseProfile} />\n                        <PrivateRoute exact path=\"/editprofile\" component={EditProfile} />\n                        <PrivateRoute exact path=\"/addexperience\" component={AddExperience} /> \n                        <PrivateRoute exact path=\"/addqualification\" component={AddQualification} />\n\n                        \n                        {/* <Route exact path=\"/profiles\" render={(props) => <Profiles {...props} profileData={profiles} />} />\n                        <Route exact path=\"/profiles/new\" render={(props) => <AddProfile {...props} profiles={profiles} />} />\n                        <Route exact path=\"/profiles/edit/:id\" render={(props) => <EditProfile {...props}   />} />\n                        <Route exact path=\"/profiles/:id\" render={(props) => <Profile {...props} />} /> */}\n                        \n                        <Route exact path=\"/posts\" render={(props) => <Posts {...props} posts={blogPosts} />} />\n                        <Route exact path=\"/posts/new\" render={(props) => <AddPost {...props}/>} />\n                        <Route exact path=\"/posts/edit/:id\" render={(props) => <EditPost {...props} posts={blogPosts} />} />\n                        <Route exact path=\"/posts/:id\" render={(props) => <Post {...props} />} />\n                        \n                        \n                        <Route exact path=\"/\" render={(props) => <Home {...props} posts={blogPosts} />} />\n\n                    </Switch>\n                    </Fragment>\n                    </Router>\n            {/* </Provider> */}\n        </div>\n                    \n                )};\n\n\nexport default App;","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/history.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/utils/setAuthToken.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/config/api.js",["187","188","189","190","191","192","193"],"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport setAuthToken from '../utils/setAuthToken'\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CREATE_PROFILE,\n  PROFILE_LOADED,\n  PROFILE_ERROR,\n  PROFILE_LOAD_ERROR,\n  ALL_POSTS,\n  POST_ERROR,\n  CREATE_POST,\n\n  CLEAR_PROFILE,\n  ALL_PROFILE,\n\n  CURRENT_POST,\n  DELETE_POST,\n  UPDATED_POST\n\n\n} from '../actions/constants'\n\nimport history from \"./../history\";\n\n// to connect to deployed server\n\n// Create an axios instance\nexport default axios.create({\n  baseURL: 'https://localhost:5000',\n  timeout: 10000,\n  withCredentials: true\n});\n\n// Load a user \nexport const loadUser = () => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n  try {\n    \n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n    // return res.data\n    // console.log(\"USER LOADED\", USER_LOADED)\n    // console.log(\"ID: \", res.data)\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}\n\n// Register a user\n\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  const body = JSON.stringify ({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n    history.push('/dashboard')\n  } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if(errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}\n\n\n// Login a User -------\nexport const login = ( email, password ) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if(errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// logout user \n\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n  \n};\n\n\n\n\n\n\n\n// get all posts\n\nexport const getAllPosts = (newPosts) => async dispatch =>{\n\n  try {\n\n    const { data } = await axios.get('/api/posts');\n    if (newPosts){\n      dispatch({type: ALL_POSTS, payload: newPosts })\n    } else {\n      dispatch({ type: ALL_POSTS, payload: data })\n\n    }\n\n    // console.log(\"DATA\", data)\n    \n  } catch (err) {\n\n    // const errors = err.response.data.errors;\n    console.log(err)\n    \n    // if(err) {\n    //   err.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    // }\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n}\n\n//  create post\n\nexport const createPost = (post) => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n\n  try {\n    const res = await axios.post('/api/posts', post)\n   \n\n    console.log(res)\n\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    })\n\n    history.push(`/posts/${res.data._id}`)\n    \n\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n\n\n// get post by id\n\nexport const getPostFromId = (id) => async dispatch => {\n\n  try {\n    const { data } = await axios.get(`/api/posts/${id}`)\n    // console.log(\"correct: \", data)\n\n    dispatch({\n      type: CURRENT_POST,\n      payload: data\n    })\n\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n// edit post\nexport const editPost = (id, updatedPost) => async dispatch => {\n\n  try{\n\n    const res = await axios.post(`/api/posts/edit/${id}`, updatedPost)\n\n    dispatch({\n      type: UPDATED_POST,\n      payload: res.data\n    })\n\n    // return res.data\n\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\n// delete post\n\nexport const deletePostById = (id) => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n\n  try {\n    console.log(\"hello world\")\n    const { data } = await axios.delete(`/api/posts/${id}` )\n    \n    // .then(x => console.log(x))\n\n    // dispatch({\n    //   type: DELETE_POST,\n    //   payload: data\n    // })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const toggleLikes = (id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  try {\n\n    const temp = await axios.put(`/api/posts/like/${id}`, config)\n    console.log('likes', temp)\n\n    // dispatch({\n      \n    // })\n\n  } catch(err) {\n    console.log(err)\n  }\n}\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/privateroutes/PrivateRoute.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/AddPost.js",["194","195","196","197"],"import React, { useState } from 'react'\nimport './../../styles/Posts.css'\nimport FormInput from './../reusable/FormInput'\nimport Posts from './Posts'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport { createPost, getAllPosts } from './../../config/api'\nimport { Redirect } from 'react-router-dom'\nimport { currentProfile } from '../../actions/profile'\nimport PropTypes from 'prop-types'\n\n\n\nconst AddPost = ({ currentProfile, auth: { user }, profile: { profile, loading}, history, addPost, match }) => {\n    console.log(profile)\n\n    const dispatch = useDispatch()\n    const posts = useSelector(state => state.postReducer)\n    \n    \n\n    const initialFormState = {\n        title: \"\",\n        category: \"\",\n        text: \"\",\n        // username: profile.username\n        // profile: profile\n\n    }\n\n    const [formState, setFormState] = useState(initialFormState)\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setFormState({\n            ...formState,\n            [name]: value\n        })\n    }\n\n    \n\n    const handleSubmit = e => {\n        e.preventDefault()\n        let newPost = {\n            title: formState.title,\n            category: formState.category || \"general\",\n            text: formState.text,\n            // username: formState.username\n        }\n        console.log('new', newPost)\n\n        dispatch(createPost(newPost))\n        history.push(`/posts/${newPost._id}`)\n        \n    }\n\n\n    return(\n        <div>\n            <div id=\"addPostDiv\">\n                <div className=\"heading\">\n                    <h1>Add post</h1>\n                </div>\n                <form id=\"addPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"text\"\n                        placeholder=\"content here...\"\n                        className=\"addPostField\"\n                        onChange={handleChange}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"addPostSubmit\"\n                    value=\"New Post\"\n                    />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n\nAddPost.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, { currentProfile })(AddPost)","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/Alert.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/EditPost.js",["198","199"],"import React, { useState, useEffect } from 'react'\nimport FormInput from './../reusable/FormInput'\nimport {editPost, setAllPosts, getAllPosts } from './../../config/api'\nimport { useDispatch } from 'react-redux'\n\n// use effect\n\nconst EditPost = ({ match, posts, history}) => {\n\n    const dispatch = useDispatch()\n    const id = match.params.id\n    const post = posts.filter(x => x._id === id)[0]\n\n\n    const [newForm, setNewForm] = useState({\n        title: post.title,\n        category: post.category,\n        text: post.text\n    })\n\n    const { title, category, text } = newForm\n\n    useEffect(() => {\n\n        dispatch(getAllPosts)\n\n    }, [])\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setNewForm({\n            ...newForm,\n            [name]: value\n        })\n        console.log(newForm)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        const updatedPost = {\n            _id: id,\n            user: post.user,\n            modified_date: new Date(),\n            title: newForm.title,\n            category: newForm.category,\n            text: newForm.text\n        }\n        console.log(updatedPost)\n\n        dispatch(editPost(match.params.id, updatedPost))\n\n        // figure out a way to set all posts and have them refresh in real time - maybe use effect\n        history.push(`/posts/${id}`)\n\n    }\n\n\n    return(\n        <div>\n            <div>\n                Edit Post\n            </div>\n            <div>\n                <form id=\"editPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"editPostField\" onChange={handleChange} value={title} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"editPostField\" onChange={handleChange} value={category} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"text\"\n                        placeholder=\"content here...\"\n                        className=\"editPostField\"\n                        onChange={handleChange}\n                        value={text && text}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"editPostSubmit\"\n                    value=\"Update Post\"\n                    />\n\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default EditPost ","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddExperience.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/Profiles.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/Profile.js",["200"],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/EditProfile.js",["201"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { createProfile, currentProfile } from '../../actions/profile'\n\nconst EditProfile = ({ profile: { profile, loading },\n    createProfile, currentProfile, history }) => {\n    const [formData, setFormData] = useState ({\n        name:'',\n        username:'',\n        dateofbirth:'',\n        location:'',\n        bio:'',\n        blogpostdescription:'',\n        interests:'',\n        website:'',\n        languages:'',\n        experiencelevel:'',\n        yearsofexperience:'',\n        jobtitle:'',\n        business:'',\n        linkedin:'',\n        instagram:'',\n        twitter:'',\n        github:'',\n    });\n\n    useEffect(() =>{\n        currentProfile();\n\n        setFormData({\n        name: loading || !profile.name ? '' : profile.name,\n        username: loading || !profile.username ? '' : profile.username,\n        dateofbirth: loading || !profile.dateofbirth ? '' : profile.dateofbirth,\n        location: loading || !profile.location ? '' : profile.location,\n        bio: loading || !profile.bio ? '' : profile.bio,\n        blogpostdescription: loading || !profile.blogpostdescription ? '' : profile.blogpostdescription,\n        interests: loading || !profile.interests ? '' : profile.interests,\n        website: loading || !profile.website ? '' : profile.website,\n        languages: loading || !profile.languages ? '' : profile.languages,\n        experiencelevel: loading || !profile.experiencelevel ? '' : profile.experiencelevel,\n        yearsofexperience: loading || !profile.yearsofexperience ? '' : profile.yearsofexperience,\n        jobtitle: loading || !profile.jobtitle ? '' : profile.jobtitle,\n        business: loading || !profile.business ? '' : profile.business,\n        linkedin: loading || !profile.social ? '' : profile.social.linkedin,\n        instagram: loading || !profile.social ? '' : profile.social.instagram,\n        twitter: loading || !profile.social ? '' : profile.social.twitter,\n        github: loading || !profile.social ? '' : profile.social.github,\n        });\n    }, [loading]);\n    \n    const {\n        name,\n        username,\n        dateofbirth,\n        location,\n        bio,\n        blogpostdescription,\n        interests,\n        languages,\n        website,\n        experiencelevel,\n        yearsofexperience,\n        jobtitle,\n        business,\n        linkedin,\n        instagram,\n        twitter,\n        github\n    } = formData;\n    \n    const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n    return (\n    <Fragment>\n        <div id=\"profile\">\n        <h1 className=\"header\">\n        Dot Developer Profile\n        </h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\"></i> Let's get some information to make you stand out\n      </p>\n      <small>* = required field</small>\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\n      <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" \n          value={name} onChange={e => onChange(e)}/>\n      </div>\n      <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Username\" name=\"username\" \n          value={username} onChange={e => onChange(e)}/>\n      </div>\n\n      \n      <div className=\"form-group\">\n      <small>Date of Birth</small>\n          <input type=\"date\" placeholder=\"Date of Birth\" name=\"dateofbirth\" \n          value={dateofbirth} onChange={e => onChange(e)}/>\n      </div>\n\n      \n        <div className=\"form-group\">\n          <select name=\"experiencelevel\" value={experiencelevel} onChange={e => onChange(e)}>\n            <option value=\"0\">* Current Developer Status</option>\n            <option value=\"Developer\">Developer</option>\n            <option value=\"Junior Developer\">Junior Developer</option>\n            <option value=\"Senior Developer\">Senior Developer</option>\n            <option value=\"Manager\">Manager</option>\n            <option value=\"Student or Learning\">Student or Learning</option>\n            <option value=\"Instructor\">Instructor or Teacher</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <select name=\"yearsofexperience\" value={yearsofexperience} onChange={e => onChange(e)}>\n            <option value=\"0\">* Years of Experience </option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5 + </option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Business (Currently Working At)\" \n          name=\"business\" value={business} onChange={e => onChange(e)}/> \n        </div>\n\n        <div className=\"form-group\">\n          <select name=\"jobtitle\" value={jobtitle} onChange={e => onChange(e)}>\n            <option value=\"0\"> Jobtitle </option>\n            <option value=\"Web Developer\">Web Developers</option>\n            <option value=\"Web Designer\">Web Designer</option>\n            <option value=\"Game Developer\">Game Developer</option>\n            <option value=\"UI/UX Designer\">UI / UX Designer</option>\n            <option value=\"Dev Ops\">Dev Ops </option>\n            <option value=\"SEO\">SEO Specialist</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Website ( If Applicable )\" name=\"website\" \n          value={website} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Location (City and State)\" name=\"location\" \n          value={location} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Bio ( A little about yourself)\" name=\"bio\"\n          value={bio} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Interests\" name=\"interests\" \n          value={interests} onChange={e => onChange(e)}/>\n        </div>\n\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"* Programming languages (Seperate by Comma)\" name=\"languages\"\n          value={languages} onChange={e => onChange(e)} />\n        </div>\n\n        <div className=\"form-group\">\n          <input type=\"text\" placeholder=\"Short Blog Post Description !!\" name=\"blogpostdescription\"\n          value={blogpostdescription} onChange={e => onChange(e)} />\n        </div>\n\n\n        <div className=\"break\">\n          <h1> Add Social Network Links </h1>\n        </div>\n\n        \n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-github fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Github URL\" name=\"github\"\n          value={github} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-twitter fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" \n          value={twitter} onChange={e => onChange(e)}/>\n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-linkedin fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" \n          value={linkedin} onChange={e => onChange(e)}/>\n          \n        </div>\n\n        <div className=\"form-group social-input\">\n          <i className=\"fab fa-instagram fa-2x\"></i>\n          <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" \n          value={instagram} onChange={e => onChange(e)}/>\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\n        </form>\n        </div>\n    </Fragment>\n    );\n};\n\nEditProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    currentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { createProfile, currentProfile })(withRouter(EditProfile));\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/SignIn.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddQualification.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/AddProfile.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/BaseProfile.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Navbar.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/Home.js",["202","203","204","205","206"],"import React from 'react'\nimport Posts from './posts/Posts'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n\n\nconst Home = ({ isAuthenticated, posts }) => {\n    if(isAuthenticated) {\n        return <Redirect to='/dashboard'/>\n    }\n\n    const props = {posts}\n    // console.log(posts)\n\n\n    return (\n    <div>\n        <section className='home'>\n            <div className='dark-overlay'>\n                <div className=\"backgroundImg\">\n\n                </div>\n                <div className='home-inner'>\n                    <h1 className='x-large'>Welcome!</h1>\n                    <p class=\"homelead\">\n                        Giving Developers another life! Your one stop for everything developer\n                    </p>\n                    <p>\n                        Sign up for a free account or log in to an existing account to get started\n                    </p>\n                        <a className=\"buttonhome\">\n                        <span class=\"away\"><Link to='auth/Register'>Sign Up</Link></span>\n                        <span class=\"over\"><Link to='auth/Register'>Get Noticed</Link></span>\n                        </a>\n                        &nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;\n                        <a className=\"buttonhome\">\n                        <span class=\"away\"><Link to='auth/signin'>Sign In</Link></span>\n                        <span class=\"over\"><Link to='auth/signin'>Welcome Back!</Link></span>\n                        </a>\n                </div>\n            </div>\n        </section>\n    \n       \n    </div>\n    )\n}\n\nHome.propTypes = {\n    isAuthenticated:PropTypes.bool,\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Home);\n\n{/* <div className=\"homebuttons\">\n<Link to='auth/Register' className='btn btn-primary'>Sign Up!</Link>\n&nbsp;&nbsp;&nbsp;\n<Link to='auth/signin' className='btn btn-secondary'>Sign In!</Link>\n</div> */}","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Dashboard.js",["207"],"import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { currentProfile, deleteAccount } from '../../actions/profile'\nimport { Spinner } from 'react-bootstrap'\nimport DashActions from './DashAction'\n\nimport DisplayProfile from './DisplayProfile'\n\n\nimport Experience from './Experience'\nimport Qualification from './Qualification'\n\nconst Dashboard = ({ currentProfile, deleteAccount, auth: { user }, profile: { profile, loading} }) => {\n\n    useEffect(() => {\n        currentProfile();\n    }, [currentProfile]);\n    console.log(profile)\n\n    return loading && profile === null ? <Spinner /> : \n    <Fragment>\n        <section className='dashboard'>\n        <h1 className =\"display-4\">Dot Developer</h1>\n            <i className='fas fa-user-check' /> Welcome to Dot Dev { user && user.name }\n        <br></br>\n        <br></br>\n        {profile !== null ? ( \n            <Fragment> \n            <DashActions/>\n            <Experience experience={profile.experience}/>\n            <Qualification qualification={profile.qualification}/>\n            </Fragment> ) : (\n        <Fragment> You do not have a Profile setup, please create one!</Fragment>)}\n\n        <section className=\"profilebutton\">\n          <Link to='/createprofile' className=\"btn btn-info\">\n        <span class=\"glyphicon glyphicon-user\">\n            </span>Create Profile</Link>\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n        <span class=\"glyphicon glyphicon-user\">\n            </span>Delete Account</button>\n        </section>\n\n        </section>\n    </Fragment>;\n}\n\nDashboard.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { currentProfile, deleteAccount })(Dashboard);\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Posts.js",["208","209","210","211","212","213","214","215"],"import React, { useState, useEffect } from 'react'\nimport Post from './Post'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\nimport './../../styles/Posts.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getProfiles, getProfileId } from './../../actions/profile'\n\n// try filters with controlled input\n\nconst Posts = ({ posts }) => {\n\n    const filters = {\n        category: \"All\",\n        sortBy: \"Newest\"\n    }\n\n    const [filterData, setFilterData] = useState(filters)\n\n    const dispatch = useDispatch()\n    console.log(posts)\n\n    \n    \n    // useEffect(() => {\n    //     dispatch(getProfiles)\n    // }, [dispatch])\n\n    // let profiles = useSelector(state => state.profile.profiles)\n    // console.log(profiles)\n\n    // const getAllProfiles = async () => {\n    //     const res = await axios.get('http://localhost:5000/api/profile')\n    //     // console.log(res.data)\n    //     let profiles = res.data\n    //     return profiles\n    // }\n    // let profiles = getAllProfiles()\n    // console.log(profiles)\n\n    \n\n    \n\n\n\n    function DisplayPosts(post) {\n        const { title, category, user, likes } = post\n        // const profile = profiles.find(x => x._id === user)\n        // console.log(profile)\n        \n\n        \n        return (\n            <div className=\"postCard\">\n                <Link to={`/posts/${post._id}`} className=\"titleLink\">\n                    <h1 className=\"postTitle\">{title}</h1>\n                </Link>\n                <div className=\"postInfo\">\n\n                    {/* <h5>Posted by: {user}</h5> */}\n                    <h3>{category}</h3>\n\n                    <div className=\"upVotesDiv\">\n                        <p className=\"upVotes\">++ {likes.length} </p>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n\n\n\n    // updating display function to take different parameters\n    // first it should filter through the posts and find the \n    // category matching the one given as filter\n    // with that filtered data, it should impliment the chosen\n    // sorting method, eg. newest, oldest, most upvotes, least etc.\n\n    const sortOptions = (a, b, sortBy) => {\n\n        switch (sortBy){\n            case \"Newest\":\n                return (new Date(b.modified_date) - new Date(a.modified_date))\n                \n            case \"Oldest\":\n                return (new Date(a.modified_date) - new Date(b.modified_date))\n            case \"Most Upvotes\":\n                return (b.likes.length - a.likes.length)\n                // return null\n            case \"Least Upvotes\":\n                return null\n            default:\n                return (new Date(b.modified_date) - new Date(a.modified_date))\n                \n\n        }\n    }\n    \n\n    function Display (){\n        const { category, sortBy } = filterData\n       \n\n        return (posts && posts\n\n            .filter((x) => {\n                if (category === \"All\"){\n                    return x\n                } else {\n                    return x.category[0] === category\n                }\n               \n            }\n            )\n            .sort((a, b) =>  sortOptions(a, b, sortBy))\n            .map((post) => {\n                return DisplayPosts(post)\n            })\n            \n        )\n    }\n\n\n    \n\n    function openFilters () {\n        const filterBtn = document.querySelector('.filters')\n\n\n        if (filterBtn){\n            (filterBtn.style.display === \"none\") ? (filterBtn.style.display = \"flex\") : (filterBtn.style.display = \"none\")\n        }\n        \n    }\n\n\n    // const categoryOptions = [\"Code\", \"Food\", \"Issues\", \"Meetups\"]\n\n    const categoryOptions = [\n        {label: \"All\", value: \"category\"},\n        {label: \"Code\", value: \"category\"},\n        {label: \"Food\", value: \"category\"},\n        {label: \"Issues\", value: \"category\"},\n        {label: \"Meetups\", value: \"category\"},\n        {label: \"Health\", value: \"category\"}\n    ]\n\n    // const sortByOptions = [\"Newest\", \"Oldest\", \"Most Upvotes\", \"Least Upvotes\"]\n\n    const sortByOptions = [\n        {label: \"Newest\", value: \"sortBy\"},\n        {label: \"Oldest\", value: \"sortBy\"},\n        {label: \"Most Upvotes\", value: \"sortBy\"},\n        {label: \"Least Upvotes\", value: \"sortBy\"}\n    ]\n\n    const handleSelection = e => {\n       console.log(e)\n        const { value, label } = e\n\n        \n        setFilterData({\n            ...filterData,\n            [value]: label\n        })\n        console.log('filter: ', filterData)\n    }\n\n\n\n    return(\n        <div className=\"postsDiv\">\n            <div className=\"postBgImage\">\n                \n            </div>\n            <div className=\"postBgTransparent\">\n\n            <div className=\"postHeading\">\n                <h4>Posts</h4>\n            </div>\n            <div className=\"filterText\">\n                <p onClick={openFilters}>Filter</p>\n            </div>\n            <div className=\"filters width70\">\n                <div className=\"filterDropdowns\">\n                    <div className=\"dropdownDiv\">\n                        <p>Category: </p>\n                        <Dropdown className='myClassName' options={categoryOptions} id=\"categoryFilter\" label=\"category\" onChange={handleSelection} />\n                    </div>\n                    <div className=\"dropdownDiv\">\n                        <p>Sort by:</p>\n                        <Dropdown options={sortByOptions} id=\"sortByFilter\" label=\"sortBy\" onChange={handleSelection} />\n                    </div>\n                </div>\n                \n                {/* <div className=\"filterBtn\">\n                    <button onClick={handleFilterSubmit}>Done</button>\n                </div> */}\n                \n            </div>\n            \n            <div className=\"width70 posts\">\n                <Display filters={filterData} />\n            </div>\n            </div>\n\n\n\n        </div>\n    )\n}\n\n\nexport default Posts","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/posts/Post.js",["216","217","218"],"import React, { useEffect, useState } from 'react'\nimport {Link} from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deletePostById, getPostFromId, toggleLikes } from '../../config/api'\nimport axios from 'axios'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { currentProfile, getProfileId } from '../../actions/profile'\n\n\n\nconst Post = ({ history, match, currentProfile, auth: { user }, profile: { profile, loading}   }) => {\n    // console.log(user)\n    const currentUser = user\n\n\n\n    const dispatch = useDispatch()\n\n    const posts = useSelector(state => state.postReducer)\n\n    let post \n    if (posts){ \n        // console. log(posts)\n        post = posts.filter(x => x._id === match.params.id)\n        post = post[0]\n\n    }\n    const postUser = post.user\n    console.log(postUser)\n    \n    useEffect(() => {\n        dispatch(getProfileId(postUser))\n        \n    }, [dispatch, postUser])\n\n    // console.log(postUser)\n\n    let profiles = useSelector(state => state.profile)\n    profiles = profiles.profiles\n    console.log(profiles)\n    const { blogpostdescription, username } = profiles\n    // console.log(blogpostdescription)\n    // const avatar = profiles.user.avatar\n\n    // const [correctPost, setPost] = useState(post)\n\n\n\n\n\n\n\n    \n\n\n    // user only likes once\n    // \n    const handleLikes = () => {\n        // console.log(currentUser)\n        // const currentId = currentUser._id\n        // if (post.likes.includes(currentId)){\n        //     let index = post.likes.findIndex(x => x === currentId)\n        //     post.likes.splice(index, 1)\n        // } else {\n        //     post.likes.push(currentId)\n        //     console.log(post.likes)\n        // }\n       \n        dispatch(toggleLikes(post._id))\n        // console.log(post.likes)\n        \n        \n\n        \n    }\n\n    const deletePost = (e) => {\n        e.preventDefault()\n        dispatch(deletePostById(match.params.id))\n        history.push('/')\n    }\n\n\n\n\n\n\n    if (!post) {\n        return null\n    } else {\n        const { title, category, text, likes, user, modified_date } = post\n\n        \n        return (\n            <div>\n                <div>\n                    <div className=\"singlePostTitle\">\n                        <Link to={`/posts/${post._id}`} className=\"singleTitleLink\">\n                            <h1 id=\"postTitle\">{title}</h1>\n                        </Link>\n                    </div>\n                    <div id=\"postSections\" className=\"width70\">\n                        \n                        <div className=\"singlePostInfo\">\n                            <h5 id=\"postDate\">Posted {modified_date.toLocaleString().slice(0, 10)}</h5><br></br>\n                            <h3>{category}</h3>\n                            \n                            <p>{text}</p>\n                        </div>\n                        <div className=\"authorInfo\">\n                            {/* <img src={avatar} alt=\"avatar\"  id=\"postAvatar\"/> */}\n                            <p className=\"postUsername\">@{username}</p>\n                            \n                            <p className=\"postDesc\">{\n                                blogpostdescription && blogpostdescription\n                            }\n                            </p>\n\n                            <div className=\"postUpvotes\">\n                                <p onClick={handleLikes} className=\"upvoteButton\">++ {likes && likes.length}</p>\n                            \n                            </div>\n                            {\n                                currentUser && currentUser._id === user && \n                                <button onClick={deletePost} >Delete post</button>\n                            }\n                            {\n                                currentUser && currentUser._id === user && \n                                <Link to={`/posts/edit/${match.params.id}`}>\n                                    <button>Edit post</button>\n                                </Link>\n                                \n                            }\n                        </div>\n                        \n                        \n                    </div>\n                    \n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nPost.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, {currentProfile})(Post);\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/auth/Register.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/index.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/reusable/FormInput.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profiles/ProfileFields.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/profile/ProfileDisplay.js",["219","220","221","222","223","224"],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/spinner.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/alert.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/constants.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/actions/profile.js",["225"],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DashAction.js",["226"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst DashAction = props => {\n    return (\n      <div class=\"multi-button\">\n        <button><Link to=\"/editprofile\">Edit Profile</Link></button>\n        <button><Link to=\"/addexperience\">Add Experience</Link></button>\n        <button><Link to=\"/addqualification\">Add Qualification</Link></button>\n      </div>\n\n    )\n};\n\nexport default DashAction\n\n\n\n\n\n{/* <div>\n            <div class=\"dash-buttons\">\n        <Link to=\"/editprofile\" class=\"btn btn-light\">\n            <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n            &nbsp;\n        <Link to=\"/addexperience\" class=\"btn btn-light\">\n            <i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n            &nbsp;\n        <Link to=\"/addqualification\" class=\"btn btn-light\">\n        <i class=\"fas fa-graduation-cap text-primary\"></i> Add Qualifications</Link>\n      </div> */}\n\n      //         <div>\n//             <div class=\"dash-buttons\">\n//                 <Link to=\"/editprofile\" class=\"btn btn-light\">\n//                     <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n//                 &nbsp;\n//                 <Link to=\"/add-experience\" class=\"btn btn-light\">\n//                     <i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n//                 &nbsp;\n//                 <Link to=\"/add-education\" class=\"btn btn-light\">\n//                     <i class=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\n//             </div>\n//         </div>\n","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Experience.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/Qualification.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/components/dashboard/DisplayProfile.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241"],"import React from 'react'\nimport Profiles from '../profiles/Profiles'\n\nconst DisplayProfile = ({ profile }) => {\n    console.log(profile)\n\n    const { bio, blogPostDescription, currentroles, dateofbirth, \n    interests, location, name, pastroles, portfolio, prospects, \n    qualifications, skills, username, user } = profile\n\n    const { avatar } = user\n\n\n    return (\n        <div id=\"profileDiv\">\n            \n\n\n        </div>\n    )\n\n}\n\nexport default DisplayProfile","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/auth.js",["242","243","244","245","246"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CREATE_PROFILE_SUCCESS,\r\n    PROFILE_LOADED,\r\n    PROFILE_LOAD_ERROR,\r\n    PROFILE_ERROR,\r\n    DELETE_ACCOUNT, \r\n    \r\n}   from '../actions/constants';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case USER_LOADED:\r\n            \r\n            // console.log(\"USER ID !:\", localStorage)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token );\r\n            \r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case REGISTER_FAIL: \r\n        case AUTH_ERROR: \r\n        case LOGIN_FAIL:\r\n        case LOGOUT: \r\n        case DELETE_ACCOUNT:\r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};","/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/post.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/profile.js",[],"/mnt/c/Users/danie/Desktop/final/MERNAPP/client/src/reducers/alert.js",["247"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/constants';\r\n\r\nconst initialState = [\r\n   \r\n];\r\n\r\nexport default function (state = initialState, alert) {\r\n    const { type, payload } = alert;\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n            default:\r\n                return state;\r\n    }\r\n}",{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":13},{"ruleId":"252","severity":1,"message":"256","line":8,"column":10,"nodeType":"254","messageId":"255","endLine":8,"endColumn":18},{"ruleId":"252","severity":1,"message":"257","line":9,"column":8,"nodeType":"254","messageId":"255","endLine":9,"endColumn":13},{"ruleId":"252","severity":1,"message":"258","line":10,"column":10,"nodeType":"254","messageId":"255","endLine":10,"endColumn":18},{"ruleId":"252","severity":1,"message":"259","line":10,"column":33,"nodeType":"254","messageId":"255","endLine":10,"endColumn":46},{"ruleId":"252","severity":1,"message":"260","line":11,"column":9,"nodeType":"254","messageId":"255","endLine":11,"endColumn":21},{"ruleId":"252","severity":1,"message":"261","line":30,"column":8,"nodeType":"254","messageId":"255","endLine":30,"endColumn":18},{"ruleId":"252","severity":1,"message":"262","line":50,"column":12,"nodeType":"254","messageId":"255","endLine":50,"endColumn":20},{"ruleId":"252","severity":1,"message":"263","line":50,"column":22,"nodeType":"254","messageId":"255","endLine":50,"endColumn":33},{"ruleId":"252","severity":1,"message":"264","line":12,"column":3,"nodeType":"254","messageId":"255","endLine":12,"endColumn":17},{"ruleId":"252","severity":1,"message":"265","line":13,"column":3,"nodeType":"254","messageId":"255","endLine":13,"endColumn":17},{"ruleId":"252","severity":1,"message":"266","line":14,"column":3,"nodeType":"254","messageId":"255","endLine":14,"endColumn":16},{"ruleId":"252","severity":1,"message":"267","line":15,"column":3,"nodeType":"254","messageId":"255","endLine":15,"endColumn":21},{"ruleId":"252","severity":1,"message":"268","line":21,"column":3,"nodeType":"254","messageId":"255","endLine":21,"endColumn":14},{"ruleId":"252","severity":1,"message":"269","line":24,"column":3,"nodeType":"254","messageId":"255","endLine":24,"endColumn":14},{"ruleId":"252","severity":1,"message":"270","line":254,"column":13,"nodeType":"254","messageId":"255","endLine":254,"endColumn":17},{"ruleId":"252","severity":1,"message":"271","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"252","severity":1,"message":"272","line":6,"column":22,"nodeType":"254","messageId":"255","endLine":6,"endColumn":33},{"ruleId":"252","severity":1,"message":"273","line":7,"column":10,"nodeType":"254","messageId":"255","endLine":7,"endColumn":18},{"ruleId":"252","severity":1,"message":"274","line":17,"column":11,"nodeType":"254","messageId":"255","endLine":17,"endColumn":16},{"ruleId":"252","severity":1,"message":"275","line":3,"column":19,"nodeType":"254","messageId":"255","endLine":3,"endColumn":30},{"ruleId":"276","severity":1,"message":"277","line":27,"column":8,"nodeType":"278","endLine":27,"endColumn":10,"suggestions":"279"},{"ruleId":"276","severity":1,"message":"280","line":10,"column":7,"nodeType":"278","endLine":10,"endColumn":21,"suggestions":"281"},{"ruleId":"276","severity":1,"message":"282","line":51,"column":8,"nodeType":"278","endLine":51,"endColumn":17,"suggestions":"283"},{"ruleId":"252","severity":1,"message":"271","line":2,"column":8,"nodeType":"254","messageId":"255","endLine":2,"endColumn":13},{"ruleId":"252","severity":1,"message":"284","line":14,"column":11,"nodeType":"254","messageId":"255","endLine":14,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":33,"column":25,"nodeType":"287","endLine":33,"endColumn":51},{"ruleId":"285","severity":1,"message":"286","line":39,"column":25,"nodeType":"287","endLine":39,"endColumn":51},{"ruleId":"288","severity":1,"message":"289","line":61,"column":1,"nodeType":"290","messageId":"291","endLine":65,"endColumn":11},{"ruleId":"252","severity":1,"message":"292","line":9,"column":8,"nodeType":"254","messageId":"255","endLine":9,"endColumn":22},{"ruleId":"252","severity":1,"message":"293","line":1,"column":27,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"294","line":2,"column":8,"nodeType":"254","messageId":"255","endLine":2,"endColumn":12},{"ruleId":"252","severity":1,"message":"253","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":13},{"ruleId":"252","severity":1,"message":"295","line":8,"column":10,"nodeType":"254","messageId":"255","endLine":8,"endColumn":21},{"ruleId":"252","severity":1,"message":"296","line":9,"column":10,"nodeType":"254","messageId":"255","endLine":9,"endColumn":21},{"ruleId":"252","severity":1,"message":"297","line":9,"column":23,"nodeType":"254","messageId":"255","endLine":9,"endColumn":35},{"ruleId":"252","severity":1,"message":"298","line":22,"column":11,"nodeType":"254","messageId":"255","endLine":22,"endColumn":19},{"ruleId":"252","severity":1,"message":"299","line":50,"column":34,"nodeType":"254","messageId":"255","endLine":50,"endColumn":38},{"ruleId":"252","severity":1,"message":"300","line":1,"column":28,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"259","line":4,"column":26,"nodeType":"254","messageId":"255","endLine":4,"endColumn":39},{"ruleId":"252","severity":1,"message":"253","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":13},{"ruleId":"285","severity":1,"message":"301","line":32,"column":13,"nodeType":"287","endLine":32,"endColumn":67},{"ruleId":"285","severity":1,"message":"301","line":35,"column":13,"nodeType":"287","endLine":35,"endColumn":67},{"ruleId":"285","severity":1,"message":"301","line":38,"column":13,"nodeType":"287","endLine":38,"endColumn":67},{"ruleId":"285","severity":1,"message":"301","line":41,"column":13,"nodeType":"287","endLine":41,"endColumn":67},{"ruleId":"285","severity":1,"message":"301","line":44,"column":14,"nodeType":"287","endLine":44,"endColumn":68},{"ruleId":"285","severity":1,"message":"301","line":47,"column":13,"nodeType":"287","endLine":47,"endColumn":67},{"ruleId":"252","severity":1,"message":"302","line":232,"column":15,"nodeType":"254","messageId":"255","endLine":232,"endColumn":18},{"ruleId":"288","severity":1,"message":"289","line":21,"column":1,"nodeType":"290","messageId":"291","endLine":31,"endColumn":17},{"ruleId":"252","severity":1,"message":"303","line":2,"column":8,"nodeType":"254","messageId":"255","endLine":2,"endColumn":16},{"ruleId":"252","severity":1,"message":"304","line":7,"column":13,"nodeType":"254","messageId":"255","endLine":7,"endColumn":16},{"ruleId":"252","severity":1,"message":"305","line":7,"column":18,"nodeType":"254","messageId":"255","endLine":7,"endColumn":37},{"ruleId":"252","severity":1,"message":"306","line":7,"column":39,"nodeType":"254","messageId":"255","endLine":7,"endColumn":51},{"ruleId":"252","severity":1,"message":"307","line":7,"column":53,"nodeType":"254","messageId":"255","endLine":7,"endColumn":64},{"ruleId":"252","severity":1,"message":"308","line":8,"column":5,"nodeType":"254","messageId":"255","endLine":8,"endColumn":14},{"ruleId":"252","severity":1,"message":"309","line":8,"column":16,"nodeType":"254","messageId":"255","endLine":8,"endColumn":24},{"ruleId":"252","severity":1,"message":"310","line":8,"column":26,"nodeType":"254","messageId":"255","endLine":8,"endColumn":30},{"ruleId":"252","severity":1,"message":"311","line":8,"column":32,"nodeType":"254","messageId":"255","endLine":8,"endColumn":41},{"ruleId":"252","severity":1,"message":"312","line":8,"column":43,"nodeType":"254","messageId":"255","endLine":8,"endColumn":52},{"ruleId":"252","severity":1,"message":"313","line":8,"column":54,"nodeType":"254","messageId":"255","endLine":8,"endColumn":63},{"ruleId":"252","severity":1,"message":"314","line":9,"column":5,"nodeType":"254","messageId":"255","endLine":9,"endColumn":19},{"ruleId":"252","severity":1,"message":"315","line":9,"column":21,"nodeType":"254","messageId":"255","endLine":9,"endColumn":27},{"ruleId":"252","severity":1,"message":"316","line":9,"column":29,"nodeType":"254","messageId":"255","endLine":9,"endColumn":37},{"ruleId":"252","severity":1,"message":"317","line":11,"column":13,"nodeType":"254","messageId":"255","endLine":11,"endColumn":19},{"ruleId":"252","severity":1,"message":"318","line":2,"column":5,"nodeType":"254","messageId":"255","endLine":2,"endColumn":21},{"ruleId":"252","severity":1,"message":"319","line":9,"column":5,"nodeType":"254","messageId":"255","endLine":9,"endColumn":27},{"ruleId":"252","severity":1,"message":"265","line":10,"column":5,"nodeType":"254","messageId":"255","endLine":10,"endColumn":19},{"ruleId":"252","severity":1,"message":"267","line":11,"column":5,"nodeType":"254","messageId":"255","endLine":11,"endColumn":23},{"ruleId":"252","severity":1,"message":"266","line":12,"column":5,"nodeType":"254","messageId":"255","endLine":12,"endColumn":18},{"ruleId":"320","severity":1,"message":"321","line":7,"column":1,"nodeType":"322","endLine":17,"endColumn":2},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'store' is defined but never used.","'loadUser' is defined but never used.","'getPostFromId' is defined but never used.","'setAuthToken' is defined but never used.","'AddProfile' is defined but never used.","'profiles' is assigned a value but never used.","'setProfiles' is assigned a value but never used.","'CREATE_PROFILE' is defined but never used.","'PROFILE_LOADED' is defined but never used.","'PROFILE_ERROR' is defined but never used.","'PROFILE_LOAD_ERROR' is defined but never used.","'ALL_PROFILE' is defined but never used.","'DELETE_POST' is defined but never used.","'data' is assigned a value but never used.","'Posts' is defined but never used.","'getAllPosts' is defined but never used.","'Redirect' is defined but never used.","'posts' is assigned a value but never used.","'setAllPosts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["325"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["326"],"React Hook useEffect has missing dependencies: 'currentProfile', 'profile.bio', 'profile.blogpostdescription', 'profile.business', 'profile.dateofbirth', 'profile.experiencelevel', 'profile.interests', 'profile.jobtitle', 'profile.languages', 'profile.location', 'profile.name', 'profile.social', 'profile.username', 'profile.website', and 'profile.yearsofexperience'. Either include them or remove the dependency array. If 'currentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["327"],"'props' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'DisplayProfile' is defined but never used.","'useEffect' is defined but never used.","'Post' is defined but never used.","'useSelector' is defined but never used.","'getProfiles' is defined but never used.","'getProfileId' is defined but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'useState' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'res' is assigned a value but never used.","'Profiles' is defined but never used.","'bio' is assigned a value but never used.","'blogPostDescription' is assigned a value but never used.","'currentroles' is assigned a value but never used.","'dateofbirth' is assigned a value but never used.","'interests' is assigned a value but never used.","'location' is assigned a value but never used.","'name' is assigned a value but never used.","'pastroles' is assigned a value but never used.","'portfolio' is assigned a value but never used.","'prospects' is assigned a value but never used.","'qualifications' is assigned a value but never used.","'skills' is assigned a value but never used.","'username' is assigned a value but never used.","'avatar' is assigned a value but never used.","'REGISTER_SUCCESS' is defined but never used.","'CREATE_PROFILE_SUCCESS' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},"Update the dependencies array to be: [dispatch]",{"range":"334","text":"335"},"Update the dependencies array to be: [getProfileId, match.params.id]",{"range":"336","text":"337"},"Update the dependencies array to be: [currentProfile, loading, profile.bio, profile.blogpostdescription, profile.business, profile.dateofbirth, profile.experiencelevel, profile.interests, profile.jobtitle, profile.languages, profile.location, profile.name, profile.social, profile.username, profile.website, profile.yearsofexperience]",{"range":"338","text":"339"},[643,645],"[dispatch]",[368,382],"[getProfileId, match.params.id]",[2191,2200],"[currentProfile, loading, profile.bio, profile.blogpostdescription, profile.business, profile.dateofbirth, profile.experiencelevel, profile.interests, profile.jobtitle, profile.languages, profile.location, profile.name, profile.social, profile.username, profile.website, profile.yearsofexperience]"]

>>>>>>> fad480f2e110c0f7cdea0f2d41d5aaad653be891
