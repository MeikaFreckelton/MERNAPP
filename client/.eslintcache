[{"/Users/meika/Desktop/mern-app/client/src/index.js":"1","/Users/meika/Desktop/mern-app/client/src/App.js":"2","/Users/meika/Desktop/mern-app/client/src/data/post_data.js":"3","/Users/meika/Desktop/mern-app/client/src/data/profile_data.js":"4","/Users/meika/Desktop/mern-app/client/src/components/Navbar.js":"5","/Users/meika/Desktop/mern-app/client/src/components/Home.js":"6","/Users/meika/Desktop/mern-app/client/src/components/posts/Post.js":"7","/Users/meika/Desktop/mern-app/client/src/components/posts/AddPost.js":"8","/Users/meika/Desktop/mern-app/client/src/components/posts/EditPost.js":"9","/Users/meika/Desktop/mern-app/client/src/components/profiles/Profiles.js":"10","/Users/meika/Desktop/mern-app/client/src/components/profiles/EditProfile.js":"11","/Users/meika/Desktop/mern-app/client/src/components/auth/Register.js":"12","/Users/meika/Desktop/mern-app/client/src/components/auth/SignIn.js":"13","/Users/meika/Desktop/mern-app/client/src/components/posts/Posts.js":"14","/Users/meika/Desktop/mern-app/client/src/components/reusable/FormInput.js":"15","/Users/meika/Desktop/mern-app/client/src/config/api.js":"16","/Users/meika/Desktop/mern-app/client/src/store.js":"17","/Users/meika/Desktop/mern-app/client/src/components/reusable/Alert.js":"18","/Users/meika/Desktop/mern-app/client/src/actions/alert.js":"19","/Users/meika/Desktop/mern-app/client/src/actions/constants.js":"20","/Users/meika/Desktop/mern-app/client/src/reducers/index.js":"21","/Users/meika/Desktop/mern-app/client/src/reducers/alert.js":"22","/Users/meika/Desktop/mern-app/client/src/utils/setAuthToken.js":"23","/Users/meika/Desktop/mern-app/client/src/reducers/auth.js":"24","/Users/meika/Desktop/mern-app/client/src/reducers/post.js":"25","/Users/meika/Desktop/mern-app/client/src/components/dashboard/Dashboard.js":"26","/Users/meika/Desktop/mern-app/client/src/components/privateroutes/PrivateRoute.js":"27","/Users/meika/Desktop/mern-app/client/src/history.js":"28","/Users/meika/Desktop/mern-app/client/src/reducers/profile.js":"29","/Users/meika/Desktop/mern-app/client/src/components/profiles/BaseProfile.js":"30","/Users/meika/Desktop/mern-app/client/src/actions/profile.js":"31","/Users/meika/Desktop/mern-app/client/src/components/dashboard/DashAction.js":"32","/Users/meika/Desktop/mern-app/client/src/components/dashboard/DisplayProfile.js":"33","/Users/meika/Desktop/mern-app/client/src/components/profiles/AddProfile.js":"34","/Users/meika/Desktop/mern-app/client/src/components/profiles/MultiStepForm.js":"35","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Skills.js":"36","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Work.js":"37","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Education.js":"38","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Links.js":"39","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Details.js":"40","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Review.js":"41","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/educationSections/PastEducation.js":"42","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Past.js":"43","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Recent.js":"44","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/skillsComponents/SkillForm.js":"45","/Users/meika/Desktop/mern-app/client/src/components/profiles/AddExperience.js":"46","/Users/meika/Desktop/mern-app/client/src/components/profiles/AddQualification.js":"47","/Users/meika/Desktop/mern-app/client/src/components/profiles/ProfileFields.js":"48","/Users/meika/Desktop/mern-app/client/src/components/dashboard/spinner.js":"49","/Users/meika/Desktop/mern-app/client/src/components/dashboard/Qualification.js":"50","/Users/meika/Desktop/mern-app/client/src/components/dashboard/Experience.js":"51","/Users/meika/Desktop/mern-app/client/src/components/profile/Profile.js":"52","/Users/meika/Desktop/mern-app/client/src/components/profile/ProfileDisplay.js":"53"},{"size":363,"mtime":1610509410583,"results":"54","hashOfConfig":"55"},{"size":4375,"mtime":1610945228470,"results":"56","hashOfConfig":"55"},{"size":1622,"mtime":1610493208470,"results":"57","hashOfConfig":"55"},{"size":7175,"mtime":1610237222936,"results":"58","hashOfConfig":"55"},{"size":3130,"mtime":1610945228471,"results":"59","hashOfConfig":"55"},{"size":2048,"mtime":1610930848639,"results":"60","hashOfConfig":"55"},{"size":4617,"mtime":1610944378305,"results":"61","hashOfConfig":"55"},{"size":2970,"mtime":1610955237472,"results":"62","hashOfConfig":"55"},{"size":2557,"mtime":1610921975100,"results":"63","hashOfConfig":"55"},{"size":1303,"mtime":1610947922970,"results":"64","hashOfConfig":"55"},{"size":8429,"mtime":1610930526782,"results":"65","hashOfConfig":"55"},{"size":2907,"mtime":1611009223412,"results":"66","hashOfConfig":"55"},{"size":2119,"mtime":1611009045921,"results":"67","hashOfConfig":"55"},{"size":5950,"mtime":1610942091949,"results":"68","hashOfConfig":"55"},{"size":599,"mtime":1611008875934,"results":"69","hashOfConfig":"55"},{"size":4865,"mtime":1610930526802,"results":"70","hashOfConfig":"55"},{"size":389,"mtime":1610319484472,"results":"71","hashOfConfig":"55"},{"size":528,"mtime":1610319484451,"results":"72","hashOfConfig":"55"},{"size":372,"mtime":1610319484448,"results":"73","hashOfConfig":"55"},{"size":962,"mtime":1610930526772,"results":"74","hashOfConfig":"55"},{"size":252,"mtime":1610677447344,"results":"75","hashOfConfig":"55"},{"size":437,"mtime":1610319484471,"results":"76","hashOfConfig":"55"},{"size":264,"mtime":1610408328903,"results":"77","hashOfConfig":"55"},{"size":1570,"mtime":1610930526886,"results":"78","hashOfConfig":"55"},{"size":605,"mtime":1610929415198,"results":"79","hashOfConfig":"55"},{"size":2393,"mtime":1610954281482,"results":"80","hashOfConfig":"55"},{"size":595,"mtime":1610930526780,"results":"81","hashOfConfig":"55"},{"size":86,"mtime":1610509382284,"results":"82","hashOfConfig":"55"},{"size":1383,"mtime":1610941160808,"results":"83","hashOfConfig":"55"},{"size":6896,"mtime":1611008701682,"results":"84","hashOfConfig":"55"},{"size":6638,"mtime":1610941606804,"results":"85","hashOfConfig":"55"},{"size":1578,"mtime":1610945228473,"results":"86","hashOfConfig":"55"},{"size":468,"mtime":1610680183023,"results":"87","hashOfConfig":"55"},{"size":604,"mtime":1610681142883,"results":"88","hashOfConfig":"55"},{"size":4130,"mtime":1610680765442,"results":"89","hashOfConfig":"55"},{"size":3998,"mtime":1610595179184,"results":"90","hashOfConfig":"55"},{"size":2975,"mtime":1610335842211,"results":"91","hashOfConfig":"55"},{"size":4072,"mtime":1610339224626,"results":"92","hashOfConfig":"55"},{"size":9942,"mtime":1610342331467,"results":"93","hashOfConfig":"55"},{"size":14182,"mtime":1610675397338,"results":"94","hashOfConfig":"55"},{"size":7740,"mtime":1610595132209,"results":"95","hashOfConfig":"55"},{"size":3317,"mtime":1610339537443,"results":"96","hashOfConfig":"55"},{"size":3352,"mtime":1610336759326,"results":"97","hashOfConfig":"55"},{"size":1393,"mtime":1610336549162,"results":"98","hashOfConfig":"55"},{"size":3683,"mtime":1610333959062,"results":"99","hashOfConfig":"55"},{"size":3636,"mtime":1610930526780,"results":"100","hashOfConfig":"55"},{"size":2568,"mtime":1610930526781,"results":"101","hashOfConfig":"55"},{"size":2427,"mtime":1610952870348,"results":"102","hashOfConfig":"55"},{"size":296,"mtime":1610677447308,"results":"103","hashOfConfig":"55"},{"size":1693,"mtime":1610954916334,"results":"104","hashOfConfig":"55"},{"size":1849,"mtime":1610954795578,"results":"105","hashOfConfig":"55"},{"size":976,"mtime":1610945228474,"results":"106","hashOfConfig":"55"},{"size":4391,"mtime":1610945228474,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"1mvab0f",{"filePath":"111","messages":"112","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"110"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"199"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"199"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"199"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"199"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"199"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"110"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"110"},"/Users/meika/Desktop/mern-app/client/src/index.js",[],["241","242"],"/Users/meika/Desktop/mern-app/client/src/App.js",["243","244","245","246","247","248","249","250","251"],"import React, { Fragment, useEffect, useState } from 'react'\nimport {Router, Route, Switch} from 'react-router-dom'\nimport axios from 'axios'\nimport history from \"./history\";\nimport Alert from './components/reusable/Alert'\n\n// Redux\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './store';\nimport { loadUser, getAllPosts, getPostFromId } from './config/api';\nimport  setAuthToken  from './utils/setAuthToken';\n\n\n// components :\nimport Navbar from './components/Navbar'\nimport Home from './components/Home'\nimport Dashboard from './components/dashboard/Dashboard'\nimport PrivateRoute from './components/privateroutes/PrivateRoute'\n\nimport Posts from './components/posts/Posts'\nimport Post from './components/posts/Post'\nimport AddPost from './components/posts/AddPost'\nimport EditPost from './components/posts/EditPost'\n\nimport Profile from './components/profile/Profile'\nimport Profiles from './components/profiles/Profiles'\nimport BaseProfile from './components/profiles/BaseProfile'\n// import Profile from './components/profiles/Profilemeikas'\n// import Profiles from './components/profiles/Profilemeika'\nimport AddProfile from './components/profiles/AddProfile'\nimport EditProfile from './components/profiles/EditProfile'\nimport AddExperience from './components/profiles/AddExperience'\nimport AddQualification from './components/profiles/AddQualification'\n\nimport Register from './components/auth/Register'\nimport SignIn from './components/auth/SignIn'\n\n\n\n// styles :\nimport './styles/Styles.css'\nimport './styles/Profile.css'\nimport './styles/Desktop.css'\nimport './styles/Posts.css'\nimport './styles/Tablet.css'\n\n\nconst App = () => { \n\n    const [profiles, setProfiles] = useState([])\n\n    const dispatch = useDispatch()\n\n    \n    // get blog posts\n    useEffect(() => {\n\n       \n        dispatch(getAllPosts())\n\n        .catch(y => {\n            console.log(y)\n        })\n        \n    }, [dispatch])\n    const blogPosts = useSelector((state) =>  state.postReducer)\n\n    \n\n\n\n    return (\n        <div>\n            {/* <Provider store={store}> */}\n                \n                <Router history = {history}>\n                <Fragment>\n                <Navbar/>  \n                <Alert /> \n                    <Switch>\n                        <Route exact path=\"/profiles\" component={Profiles} />\n                        <Route exact path=\"/profile/:id\" component={Profile} />\n                        <Route exact path=\"/auth/register\" component={Register} />\n                        <Route exact path=\"/auth/signin\" component={SignIn} />\n                        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                        <PrivateRoute exact path=\"/createprofile\" component={BaseProfile} />\n                        <PrivateRoute exact path=\"/editprofile\" component={EditProfile} />\n                        <PrivateRoute exact path=\"/addexperience\" component={AddExperience} /> \n                        <PrivateRoute exact path=\"/addqualification\" component={AddQualification} />\n\n                        \n                        {/* <Route exact path=\"/profiles\" render={(props) => <Profiles {...props} profileData={profiles} />} />\n                        <Route exact path=\"/profiles/new\" render={(props) => <AddProfile {...props} profiles={profiles} />} />\n                        <Route exact path=\"/profiles/edit/:id\" render={(props) => <EditProfile {...props}   />} />\n                        <Route exact path=\"/profiles/:id\" render={(props) => <Profile {...props} />} /> */}\n                        \n                        <Route exact path=\"/posts\" render={(props) => <Posts {...props} posts={blogPosts} />} />\n                        <Route exact path=\"/posts/new\" render={(props) => <AddPost {...props}/>} />\n                        <Route exact path=\"/posts/edit/:id\" render={(props) => <EditPost {...props} posts={blogPosts} />} />\n                        <Route exact path=\"/posts/:id\" render={(props) => <Post {...props} />} />\n                        \n                        \n                        <Route exact path=\"/\" render={(props) => <Home {...props} posts={blogPosts} />} />\n\n                    </Switch>\n                    </Fragment>\n                    </Router>\n            {/* </Provider> */}\n        </div>\n                    \n                )};\n\n\nexport default App;","/Users/meika/Desktop/mern-app/client/src/data/post_data.js",[],["252","253"],"/Users/meika/Desktop/mern-app/client/src/data/profile_data.js",[],["254","255"],"/Users/meika/Desktop/mern-app/client/src/components/Navbar.js",[],"/Users/meika/Desktop/mern-app/client/src/components/Home.js",["256","257","258","259","260"],"import React from 'react'\nimport Posts from './posts/Posts'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\n\n\nconst Home = ({ isAuthenticated, posts }) => {\n    if(isAuthenticated) {\n        return <Redirect to='/dashboard'/>\n    }\n\n    const props = {posts}\n    // console.log(posts)\n\n\n    return (\n    <div>\n        <section className='home'>\n            <div className='dark-overlay'>\n                <div className=\"backgroundImg\">\n\n                </div>\n                <div className='home-inner'>\n                    <h1 className='x-large'>Welcome!</h1>\n                    <p class=\"homelead\">\n                        Giving Developers another life! Your one stop for everything developer\n                    </p>\n                    <p>\n                        Sign up for a free account or log in to an existing account to get started\n                    </p>\n                        <a className=\"buttonhome\">\n                        <span class=\"away\"><Link to='auth/Register'>Sign Up</Link></span>\n                        <span class=\"over\"><Link to='auth/Register'>Get Noticed</Link></span>\n                        </a>\n                        &nbsp;&nbsp;&nbsp;\n                        &nbsp;&nbsp;&nbsp;\n                        <a className=\"buttonhome\">\n                        <span class=\"away\"><Link to='auth/signin'>Sign In</Link></span>\n                        <span class=\"over\"><Link to='auth/signin'>Welcome Back!</Link></span>\n                        </a>\n                </div>\n            </div>\n        </section>\n    \n       \n    </div>\n    )\n}\n\nHome.propTypes = {\n    isAuthenticated:PropTypes.bool,\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Home);\n\n{/* <div className=\"homebuttons\">\n<Link to='auth/Register' className='btn btn-primary'>Sign Up!</Link>\n&nbsp;&nbsp;&nbsp;\n<Link to='auth/signin' className='btn btn-secondary'>Sign In!</Link>\n</div> */}","/Users/meika/Desktop/mern-app/client/src/components/posts/Post.js",["261","262","263"],"import React, { useEffect, useState } from 'react'\nimport {Link} from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deletePostById, getPostFromId, toggleLikes } from '../../config/api'\nimport axios from 'axios'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { currentProfile, getProfileId } from '../../actions/profile'\n\n\n\nconst Post = ({ history, match, currentProfile, auth: { user }, profile: { profile, loading}   }) => {\n    // console.log(user)\n    const currentUser = user\n\n\n\n    const dispatch = useDispatch()\n\n    const posts = useSelector(state => state.postReducer)\n\n    let post \n    if (posts){ \n        // console. log(posts)\n        post = posts.filter(x => x._id === match.params.id)\n        post = post[0]\n\n    }\n    const postUser = post.user\n    console.log(postUser)\n    \n    useEffect(() => {\n        dispatch(getProfileId(postUser))\n        \n    }, [dispatch, postUser])\n\n    // console.log(postUser)\n\n    let profiles = useSelector(state => state.profile)\n    profiles = profiles.profiles\n    console.log(profiles)\n    const { blogpostdescription, username } = profiles\n    // console.log(blogpostdescription)\n    // const avatar = profiles.user.avatar\n\n    // const [correctPost, setPost] = useState(post)\n\n\n\n\n\n\n\n    \n\n\n    // user only likes once\n    // \n    const handleLikes = () => {\n        // console.log(currentUser)\n        // const currentId = currentUser._id\n        // if (post.likes.includes(currentId)){\n        //     let index = post.likes.findIndex(x => x === currentId)\n        //     post.likes.splice(index, 1)\n        // } else {\n        //     post.likes.push(currentId)\n        //     console.log(post.likes)\n        // }\n       \n        dispatch(toggleLikes(post._id))\n        // console.log(post.likes)\n        \n        \n\n        \n    }\n\n    const deletePost = (e) => {\n        e.preventDefault()\n        dispatch(deletePostById(match.params.id))\n        history.push('/')\n    }\n\n\n\n\n\n\n    if (!post) {\n        return null\n    } else {\n        const { title, category, text, likes, user, modified_date } = post\n\n        \n        return (\n            <div>\n                <div>\n                    <div className=\"singlePostTitle\">\n                        <Link to={`/posts/${post._id}`} className=\"singleTitleLink\">\n                            <h1 id=\"postTitle\">{title}</h1>\n                        </Link>\n                    </div>\n                    <div id=\"postSections\" className=\"width70\">\n                        \n                        <div className=\"singlePostInfo\">\n                            <h5 id=\"postDate\">Posted {modified_date.toLocaleString().slice(0, 10)}</h5><br></br>\n                            <h3>{category}</h3>\n                            \n                            <p>{text}</p>\n                        </div>\n                        <div className=\"authorInfo\">\n                            {/* <img src={avatar} alt=\"avatar\"  id=\"postAvatar\"/> */}\n                            <p className=\"postUsername\">@{username}</p>\n                            \n                            <p className=\"postDesc\">{\n                                blogpostdescription && blogpostdescription\n                            }\n                            </p>\n\n                            <div className=\"postUpvotes\">\n                                <p onClick={handleLikes} className=\"upvoteButton\">++ {likes && likes.length}</p>\n                            \n                            </div>\n                            {\n                                currentUser && currentUser._id === user && \n                                <button onClick={deletePost} >Delete post</button>\n                            }\n                            {\n                                currentUser && currentUser._id === user && \n                                <Link to={`/posts/edit/${match.params.id}`}>\n                                    <button>Edit post</button>\n                                </Link>\n                                \n                            }\n                        </div>\n                        \n                        \n                    </div>\n                    \n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nPost.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, {currentProfile})(Post);\n","/Users/meika/Desktop/mern-app/client/src/components/posts/AddPost.js",["264","265","266","267"],"import React, { useState } from 'react'\nimport './../../styles/Posts.css'\nimport FormInput from './../reusable/FormInput'\nimport Posts from './Posts'\nimport { useDispatch, useSelector, connect } from 'react-redux'\nimport { createPost, getAllPosts } from './../../config/api'\nimport { Redirect } from 'react-router-dom'\nimport { currentProfile } from '../../actions/profile'\nimport PropTypes from 'prop-types'\n\n\n\nconst AddPost = ({ currentProfile, auth: { user }, profile: { profile, loading}, history, addPost, match }) => {\n    console.log(profile)\n\n    const dispatch = useDispatch()\n    const posts = useSelector(state => state.postReducer)\n    \n    \n\n    const initialFormState = {\n        title: \"\",\n        category: \"\",\n        text: \"\",\n        // username: profile.username\n        // profile: profile\n\n    }\n\n    const [formState, setFormState] = useState(initialFormState)\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setFormState({\n            ...formState,\n            [name]: value\n        })\n    }\n\n    \n\n    const handleSubmit = e => {\n        e.preventDefault()\n        let newPost = {\n            title: formState.title,\n            category: formState.category || \"general\",\n            text: formState.text,\n            // username: formState.username\n        }\n        console.log('new', newPost)\n\n        dispatch(createPost(newPost))\n        history.push(`/posts/${newPost._id}`)\n        \n    }\n\n\n    return(\n        <div>\n            <div id=\"addPostDiv\">\n                <div className=\"heading\">\n                    <h1>Add post</h1>\n                </div>\n\n                <div className=\"postBgImage\">\n\n                </div>\n                <form id=\"addPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"text\"\n                        placeholder=\"content here...\"\n                        className=\"addPostField\"\n                        onChange={handleChange}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"addPostSubmit\"\n                    value=\"New Post\"\n                    />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n\nAddPost.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\n\nexport default connect(mapStateToProps, { currentProfile })(AddPost)","/Users/meika/Desktop/mern-app/client/src/components/posts/EditPost.js",["268","269"],"import React, { useState, useEffect } from 'react'\nimport FormInput from './../reusable/FormInput'\nimport {editPost, setAllPosts, getAllPosts } from './../../config/api'\nimport { useDispatch } from 'react-redux'\n\n// use effect\n\nconst EditPost = ({ match, posts, history}) => {\n\n    const dispatch = useDispatch()\n    const id = match.params.id\n    const post = posts.filter(x => x._id === id)[0]\n\n\n    const [newForm, setNewForm] = useState({\n        title: post.title,\n        category: post.category,\n        text: post.text\n    })\n\n    const { title, category, text } = newForm\n\n    useEffect(() => {\n\n        dispatch(getAllPosts)\n\n    }, [])\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target\n        setNewForm({\n            ...newForm,\n            [name]: value\n        })\n        console.log(newForm)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        const updatedPost = {\n            _id: id,\n            user: post.user,\n            modified_date: new Date(),\n            title: newForm.title,\n            category: newForm.category,\n            text: newForm.text\n        }\n        console.log(updatedPost)\n\n        dispatch(editPost(match.params.id, updatedPost))\n\n        // figure out a way to set all posts and have them refresh in real time - maybe use effect\n        history.push(`/posts/${id}`)\n\n    }\n\n\n    return(\n        <div>\n            <div>\n                Edit Post\n            </div>\n            <div>\n                <form id=\"editPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"editPostField\" onChange={handleChange} value={title} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"editPostField\" onChange={handleChange} value={category} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"text\"\n                        placeholder=\"content here...\"\n                        className=\"editPostField\"\n                        onChange={handleChange}\n                        value={text && text}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"editPostSubmit\"\n                    value=\"Update Post\"\n                    />\n\n                </form>\n\n            </div>\n        </div>\n    )\n}\n\n\nexport default EditPost ","/Users/meika/Desktop/mern-app/client/src/components/profiles/Profiles.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/EditProfile.js",["270","271","272","273"],"import React, { useState, useEffect } from 'react'\nimport FormInput from './../reusable/FormInput'\nimport MultiStepForm from './MultiStepForm'\n\n\nconst EditProfile = ({ profile,  }) => {\n    console.log(profile)\n\n   \n\n    // const [formState,setFormState] = useState(initialFormState)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n    }\n\n    const handleChange = (e) => {\n\n    }\n\n\n\n    return(\n        <div>\n            <form id=\"editPostForm\" onSubmit={handleSubmit}>\n            {errorMessage && <p>{errorMessage}</p>}\n           <MultiStepForm form=\"edit\" profile={profile} />\n        </form>\n        </div>\n    )\n}\n\n\nexport default EditProfile ","/Users/meika/Desktop/mern-app/client/src/components/auth/Register.js",[],"/Users/meika/Desktop/mern-app/client/src/components/auth/SignIn.js",[],"/Users/meika/Desktop/mern-app/client/src/components/posts/Posts.js",["274","275","276","277","278","279","280","281"],"import React, { useState, useEffect } from 'react'\nimport Post from './Post'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\nimport './../../styles/Posts.css'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getProfiles, getProfileId } from './../../actions/profile'\n\n// try filters with controlled input\n\nconst Posts = ({ posts }) => {\n\n    const filters = {\n        category: \"All\",\n        sortBy: \"Newest\"\n    }\n\n    const [filterData, setFilterData] = useState(filters)\n\n    const dispatch = useDispatch()\n    console.log(posts)\n\n    \n    \n    // useEffect(() => {\n    //     dispatch(getProfiles)\n    // }, [dispatch])\n\n    // let profiles = useSelector(state => state.profile.profiles)\n    // console.log(profiles)\n\n    // const getAllProfiles = async () => {\n    //     const res = await axios.get('http://localhost:5000/api/profile')\n    //     // console.log(res.data)\n    //     let profiles = res.data\n    //     return profiles\n    // }\n    // let profiles = getAllProfiles()\n    // console.log(profiles)\n\n    \n\n    \n\n\n\n    function DisplayPosts(post) {\n        const { title, category, user, likes } = post\n        // const profile = profiles.find(x => x._id === user)\n        // console.log(profile)\n        \n\n        \n        return (\n            <div className=\"postCard\">\n                <Link to={`/posts/${post._id}`} className=\"titleLink\">\n                    <h1 className=\"postTitle\">{title}</h1>\n                </Link>\n                <div className=\"postInfo\">\n\n                    {/* <h5>Posted by: {user}</h5> */}\n                    <h3>{category}</h3>\n\n                    <div className=\"upVotesDiv\">\n                        <p className=\"upVotes\">++ {likes.length} </p>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n\n\n\n    // updating display function to take different parameters\n    // first it should filter through the posts and find the \n    // category matching the one given as filter\n    // with that filtered data, it should impliment the chosen\n    // sorting method, eg. newest, oldest, most upvotes, least etc.\n\n    const sortOptions = (a, b, sortBy) => {\n\n        switch (sortBy){\n            case \"Newest\":\n                return (new Date(b.modified_date) - new Date(a.modified_date))\n                \n            case \"Oldest\":\n                return (new Date(a.modified_date) - new Date(b.modified_date))\n            case \"Most Upvotes\":\n                return (b.likes.length - a.likes.length)\n                // return null\n            case \"Least Upvotes\":\n                return null\n            default:\n                return (new Date(b.modified_date) - new Date(a.modified_date))\n                \n\n        }\n    }\n    \n\n    function Display (){\n        const { category, sortBy } = filterData\n       \n\n        return (posts && posts\n\n            .filter((x) => {\n                if (category === \"All\"){\n                    return x\n                } else {\n                    return x.category[0] === category\n                }\n               \n            }\n            )\n            .sort((a, b) =>  sortOptions(a, b, sortBy))\n            .map((post) => {\n                return DisplayPosts(post)\n            })\n            \n        )\n    }\n\n\n    \n\n    function openFilters () {\n        const filterBtn = document.querySelector('.filters')\n\n\n        if (filterBtn){\n            (filterBtn.style.display === \"none\") ? (filterBtn.style.display = \"flex\") : (filterBtn.style.display = \"none\")\n        }\n        \n    }\n\n\n    // const categoryOptions = [\"Code\", \"Food\", \"Issues\", \"Meetups\"]\n\n    const categoryOptions = [\n        {label: \"All\", value: \"category\"},\n        {label: \"Code\", value: \"category\"},\n        {label: \"Food\", value: \"category\"},\n        {label: \"Issues\", value: \"category\"},\n        {label: \"Meetups\", value: \"category\"},\n        {label: \"Health\", value: \"category\"}\n    ]\n\n    // const sortByOptions = [\"Newest\", \"Oldest\", \"Most Upvotes\", \"Least Upvotes\"]\n\n    const sortByOptions = [\n        {label: \"Newest\", value: \"sortBy\"},\n        {label: \"Oldest\", value: \"sortBy\"},\n        {label: \"Most Upvotes\", value: \"sortBy\"},\n        {label: \"Least Upvotes\", value: \"sortBy\"}\n    ]\n\n    const handleSelection = e => {\n       console.log(e)\n        const { value, label } = e\n\n        \n        setFilterData({\n            ...filterData,\n            [value]: label\n        })\n        console.log('filter: ', filterData)\n    }\n\n\n\n    return(\n        <div className=\"postsDiv\">\n            <div className=\"postBgImage\">\n                \n            </div>\n            <div className=\"postBgTransparent\">\n\n            <div className=\"postHeading\">\n                <h4>Posts</h4>\n            </div>\n            <div className=\"filterText\">\n                <p onClick={openFilters}>Filter</p>\n            </div>\n            <div className=\"filters width70\">\n                <div className=\"filterDropdowns\">\n                    <div className=\"dropdownDiv\">\n                        <p>Category: </p>\n                        <Dropdown className='myClassName' options={categoryOptions} id=\"categoryFilter\" label=\"category\" onChange={handleSelection} />\n                    </div>\n                    <div className=\"dropdownDiv\">\n                        <p>Sort by:</p>\n                        <Dropdown options={sortByOptions} id=\"sortByFilter\" label=\"sortBy\" onChange={handleSelection} />\n                    </div>\n                </div>\n                \n                {/* <div className=\"filterBtn\">\n                    <button onClick={handleFilterSubmit}>Done</button>\n                </div> */}\n                \n            </div>\n            \n            <div className=\"width70 posts\">\n                <Display filters={filterData} />\n            </div>\n            </div>\n\n\n\n        </div>\n    )\n}\n\n\nexport default Posts","/Users/meika/Desktop/mern-app/client/src/components/reusable/FormInput.js",[],"/Users/meika/Desktop/mern-app/client/src/config/api.js",["282","283","284","285","286","287"],"import axios from 'axios';\nimport { setAlert } from '../actions/alert';\nimport setAuthToken from '../utils/setAuthToken'\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CREATE_PROFILE,\n  PROFILE_LOADED,\n  PROFILE_ERROR,\n  PROFILE_LOAD_ERROR,\n  ALL_POSTS,\n  POST_ERROR,\n  CREATE_POST,\n\n  CLEAR_PROFILE,\n  ALL_PROFILE,\n\n  CURRENT_POST,\n  DELETE_POST,\n  UPDATED_POST\n\n\n} from '../actions/constants'\n\nimport history from \"./../history\";\n\n// to connect to deployed server\n\n// Create an axios instance\nexport default axios.create({\n  baseURL: 'https://localhost:5000',\n  timeout: 10000,\n  withCredentials: true\n});\n\n// Load a user \nexport const loadUser = () => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n  try {\n    \n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n    // return res.data\n    // console.log(\"USER LOADED\", USER_LOADED)\n    // console.log(\"ID: \", res.data)\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}\n\n// Register a user\n\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  const body = JSON.stringify ({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n    history.push('/dashboard')\n  } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if(errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}\n\n\n// Login a User -------\nexport const login = ( email, password ) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    \n    if(errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// logout user \n\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n  \n};\n\n\n\n\n\n\n\n// get all posts\n\nexport const getAllPosts = (newPosts) => async dispatch =>{\n\n  try {\n\n    const { data } = await axios.get('/api/posts');\n    if (newPosts){\n      dispatch({type: ALL_POSTS, payload: newPosts })\n    } else {\n      dispatch({ type: ALL_POSTS, payload: data })\n\n    }\n\n    // console.log(\"DATA\", data)\n    \n  } catch (err) {\n\n    // const errors = err.response.data.errors;\n    console.log(err)\n    \n    // if(err) {\n    //   err.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    // }\n    dispatch({\n      type: POST_ERROR\n    });\n  }\n}\n\n//  create post\n\nexport const createPost = (post) => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n\n  try {\n    const res = await axios.post('/api/posts', post)\n   \n\n    console.log(res)\n\n    dispatch({\n      type: CREATE_POST,\n      payload: res.data\n    })\n\n    history.push(`/posts/${res.data._id}`)\n    \n\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\n\n\n\n// get post by id\n\nexport const getPostFromId = (id) => async dispatch => {\n\n  try {\n    const { data } = await axios.get(`/api/posts/${id}`)\n    // console.log(\"correct: \", data)\n\n    dispatch({\n      type: CURRENT_POST,\n      payload: data\n    })\n\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n// edit post\nexport const editPost = (id, updatedPost) => async dispatch => {\n\n  try{\n\n    const res = await axios.post(`/api/posts/edit/${id}`, updatedPost)\n\n    dispatch({\n      type: UPDATED_POST,\n      payload: res.data\n    })\n\n    // return res.data\n\n\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\n// delete post\n\nexport const deletePostById = (id) => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  } \n\n\n  try {\n    console.log(\"hello world\")\n    const { data } = await axios.delete(`/api/posts/${id}` )\n    \n    // .then(x => console.log(x))\n\n    // dispatch({\n    //   type: DELETE_POST,\n    //   payload: data\n    // })\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const toggleLikes = (id) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type' : 'application/json'\n    }\n  }\n\n  try {\n\n    const temp = await axios.put(`/api/posts/like/${id}`, config)\n    console.log('likes', temp)\n\n    // dispatch({\n      \n    // })\n\n  } catch(err) {\n    console.log(err)\n  }\n}\n","/Users/meika/Desktop/mern-app/client/src/store.js",[],"/Users/meika/Desktop/mern-app/client/src/components/reusable/Alert.js",[],"/Users/meika/Desktop/mern-app/client/src/actions/alert.js",[],"/Users/meika/Desktop/mern-app/client/src/actions/constants.js",[],"/Users/meika/Desktop/mern-app/client/src/reducers/index.js",[],"/Users/meika/Desktop/mern-app/client/src/reducers/alert.js",["288"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/constants';\r\n\r\nconst initialState = [\r\n   \r\n];\r\n\r\nexport default function (state = initialState, alert) {\r\n    const { type, payload } = alert;\r\n    switch(type) {\r\n        case SET_ALERT:\r\n            return [...state, payload];\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload);\r\n            default:\r\n                return state;\r\n    }\r\n}","/Users/meika/Desktop/mern-app/client/src/utils/setAuthToken.js",[],"/Users/meika/Desktop/mern-app/client/src/reducers/auth.js",["289","290","291","292","293"],"import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CREATE_PROFILE_SUCCESS,\r\n    PROFILE_LOADED,\r\n    PROFILE_LOAD_ERROR,\r\n    PROFILE_ERROR, \r\n    \r\n}   from '../actions/constants';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    \r\n    switch(type) {\r\n        case USER_LOADED:\r\n            \r\n            // console.log(\"USER ID !:\", localStorage)\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('token', payload.token );\r\n            \r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case REGISTER_FAIL: \r\n        case AUTH_ERROR: \r\n        case LOGIN_FAIL:\r\n        case LOGOUT: \r\n            localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false\r\n\r\n            };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};","/Users/meika/Desktop/mern-app/client/src/reducers/post.js",[],"/Users/meika/Desktop/mern-app/client/src/components/dashboard/Dashboard.js",["294"],"import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { currentProfile, deleteAccount } from '../../actions/profile'\nimport { Spinner } from 'react-bootstrap'\nimport DashActions from './DashAction'\n\nimport DisplayProfile from './DisplayProfile'\n\n\nimport Experience from './Experience'\nimport Qualification from './Qualification'\n\nconst Dashboard = ({ currentProfile, deleteAccount, auth: { user }, profile: { profile, loading} }) => {\n\n    useEffect(() => {\n        currentProfile();\n    }, [currentProfile]);\n    console.log(profile)\n\n    return loading && profile === null ? <Spinner /> : \n    <Fragment>\n        <section className='dashboard'>\n            <div className=\"dashboardBgImg\"></div>\n            <div className=\"dashboard-inner\">\n                <h1 className =\"display-4\">Dot Developer</h1>\n                    <p className=\"welcome\"><i className='fas fa-user-check' /> Welcome to Dot Dev { user && user.name }</p>\n                <br></br>\n                <br></br>\n                {profile !== null ? ( \n                    <Fragment> \n                        <DashActions/>\n                        <Experience experience={profile.experience}/>\n                        <Qualification qualification={profile.qualification}/>\n                    </Fragment> ) : (\n                    <Fragment> You do not have a Profile setup, please create one!</Fragment>)}\n\n                <section className=\"profilebutton\">\n                    <Link to='/createprofile' className=\"btn btn-info\">\n                        <span class=\"glyphicon glyphicon-user\">\n                    </span>Create Profile</Link>\n                    <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n                    <span class=\"glyphicon glyphicon-user\">\n                    </span>Delete Account</button>\n                </section>\n            </div>\n        </section>\n    </Fragment>;\n}\n\nDashboard.propTypes = {\n    currentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { currentProfile, deleteAccount })(Dashboard);\n","/Users/meika/Desktop/mern-app/client/src/components/privateroutes/PrivateRoute.js",[],"/Users/meika/Desktop/mern-app/client/src/history.js",[],"/Users/meika/Desktop/mern-app/client/src/reducers/profile.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/BaseProfile.js",[],"/Users/meika/Desktop/mern-app/client/src/actions/profile.js",["295"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\n\r\nimport {\r\n    ALL_PROFILE,\r\n    GET_PROFILES,\r\n    CLEAR_PROFILE,\r\n    DELETE_ACCOUNT,\r\n    PROFILE_ERROR,\r\n    UPDATE_PROFILE,\r\n\r\n} from './constants';\r\n\r\n// WILL GET THE CURRENT USERS PROFILE UPON SIGN IN IF NOT SIGN UP\r\nexport const currentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('api/profile/me');\r\n\r\n        dispatch({\r\n            type: ALL_PROFILE,\r\n            payload: res.data\r\n        }); \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n    \r\n        if(errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// ALL PROFILES\r\n\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        console.log(res)\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        }); \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n    \r\n        if(errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n// PROFILE BY ID\r\nexport const getProfileId = userId => async dispatch => {\r\n    dispatch({ type: CLEAR_PROFILE });\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n        dispatch({\r\n            type: GET_PROFILES,\r\n            payload: res.data\r\n        }); \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n    \r\n        if(errors) {\r\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n\r\n// CREATE DELETE UPDATE PROFILE \r\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.post('/api/profile', formData, config);\r\n\r\n        dispatch({\r\n            type: ALL_PROFILE,\r\n            payload: res.data\r\n        }); \r\n\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        } \r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// EXPERIENCE ROUTE\r\nexport const addExperience = (formData, history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        }); \r\n\r\n        dispatch(setAlert('Experience Successfully Added', 'success'));\r\n\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n        \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }};\r\n\r\n    // qualifications route\r\n\r\n    export const addQualification = (formData, history) => async dispatch => {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type' : 'application/json'\r\n                }\r\n            }\r\n    \r\n            const res = await axios.put('/api/profile/qualification', formData, config);\r\n    \r\n            dispatch({\r\n                type: UPDATE_PROFILE,\r\n                payload: res.data\r\n            }); \r\n    \r\n            dispatch(setAlert('Qualifications Successfully Added', 'success'));\r\n    \r\n            history.push('/dashboard');\r\n        } catch (err) {\r\n            const errors = err.response.data.errors;\r\n    \r\n            if(errors) {\r\n                errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n            }\r\n            \r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }};\r\n\r\n// Delete Experiences\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Experience Deleted', ' Success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n// Delete qaulification\r\n\r\nexport const deleteQualification = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/qualification/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert('Qualification Deleted', ' Success'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};\r\n\r\n// DELETE EVERYTHING\r\n\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Confirmation of Nuclear Codes')) {\r\n\r\n    }\r\n    try {\r\n        const res = await axios.delete(`/api/profile`);\r\n\r\n        dispatch({\r\n            type: CLEAR_PROFILE,\r\n            TYPE: DELETE_ACCOUNT,\r\n        });\r\n\r\n        dispatch(setAlert('Account Deleted'))\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status}\r\n        });\r\n    }\r\n};","/Users/meika/Desktop/mern-app/client/src/components/dashboard/DashAction.js",["296"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nconst DashAction = props => {\n    return (\n\n      <div class=\"multi-button\">\n        <button><Link to=\"/editprofile\">Edit Profile</Link></button>\n        <button><Link to=\"/addexperience\">Add Experience</Link></button>\n        <button><Link to=\"/addqualification\">Add Qualification</Link></button>\n      </div>\n\n//         <div>\n//             <div class=\"dash-buttons\">\n//                 <Link to=\"/editprofile\" class=\"btn btn-light\">\n//                     <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n//                 &nbsp;\n//                 <Link to=\"/add-experience\" class=\"btn btn-light\">\n//                     <i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n//                 &nbsp;\n//                 <Link to=\"/add-education\" class=\"btn btn-light\">\n//                     <i class=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\n//             </div>\n//         </div>\n\n    )\n};\n\nDashAction.propTypes = {\n\n}\n\nexport default DashAction\n\n{/* <div>\n            <div class=\"dash-buttons\">\n        <Link to=\"/editprofile\" class=\"btn btn-light\">\n            <i class=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n            &nbsp;\n        <Link to=\"/addexperience\" class=\"btn btn-light\">\n            <i class=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n            &nbsp;\n        <Link to=\"/addqualification\" class=\"btn btn-light\">\n        <i class=\"fas fa-graduation-cap text-primary\"></i> Add Qualifications</Link>\n      </div> */}","/Users/meika/Desktop/mern-app/client/src/components/dashboard/DisplayProfile.js",["297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React from 'react'\nimport Profiles from '../profiles/Profiles'\n\nconst DisplayProfile = ({ profile }) => {\n    console.log(profile)\n\n    const { bio, blogPostDescription, currentroles, dateofbirth, \n    interests, location, name, pastroles, portfolio, prospects, \n    qualifications, skills, username, user } = profile\n\n    const { avatar } = user\n\n\n    return (\n        <div id=\"profileDiv\">\n            \n\n\n        </div>\n    )\n\n}\n\nexport default DisplayProfile","/Users/meika/Desktop/mern-app/client/src/components/profiles/AddProfile.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/MultiStepForm.js",[],["312","313"],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Skills.js",["314"],"import React, { useEffect } from 'react'\nimport SkillsForm from './skillsComponents/SkillForm'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\nimport FormInput from '../../reusable/FormInput'\n\n\nconst Skills = ({ setSkills, skillsData, navigation, form, profile, detailsData }) => {\n\n    useEffect(() => {\n        if (form === \"edit\"){\n            setSkills(profile.skillsData)\n        }\n    })\n    console.log(detailsData)\n\n    \n\n    const props = { setSkills, skillsData, navigation }\n    const { skilllevel, yearsofexperience } = skillsData\n    const { previous, next } = navigation;\n\n    // due to current bug, have to disable enter keypress from submitting :\n    // function onKeyPress (e) {\n    //     if (e.which === 13 /* Enter */) {\n    //         e.preventDefault();\n    //     }\n    // }\n\n    // function to handle dropdown and assign its value to the skill level in form data :\n    function onSelect (e) {\n        // console.log(e)\n        const { label, value } = e\n        setSkills({\n            ...skillsData,\n            [value]: label\n        })\n        console.log(skillsData)\n\n    }\n    // options for skill level drop down :\n\n    const levelOptions = [\n        {label: \"Junior-level\", value: \"skilllevel\"},\n        {label: \"Mid-level\", value: \"skilllevel\"},\n        {label: \"Senior-level\", value: \"skilllevel\"}\n    ]\n\n    const experienceOptions = [\n        {label: \"<1\", value: \"yearsofexperience\"},\n        {label: \"1+\", value: \"yearsofexperience\"},\n        {label: \"3+\", value: \"yearsofexperience\"},\n        {label: \"5+\", value: \"yearsofexperience\"},\n        {label: \"7+\", value: \"yearsofexperience\"}\n    ]\n\n    return(\n        <div>\n            <div className=\"profileFormDiv\">\n                <div className=\"heading\">\n                    <h4>\n                        Skills\n                    </h4>\n                </div>\n                <form >\n                    <div className=\"skillsFormSection\">\n                        <div className=\"skillsFormDisplay\">\n                            <div className=\"greySection\">\n                                <h3>Technical Skills</h3>\n                                <SkillsForm {...props} skillType=\"technical\"/>\n                            </div>\n                            \n                        </div>\n                        <div>\n                            <h3>Experience</h3>\n                            <div className=\"skillExperience\">\n                                <div className=\"formFields\">\n                                    <label>\n                                        Skill level\n                                    </label>\n                                    {/* dropdown component from package : */}\n                                    <Dropdown options={levelOptions} onChange={onSelect} value={skilllevel} id=\"skillDropDown\" name=\"skilllevel\" />\n                                </div>\n                                <div className=\"formFields\">\n                                    <label>\n                                        Years of Experience\n                                    </label>\n                                    {/* <FormInput name=\"yearsOfExperience\" value={yearsOfExperience} onChange={handleChange} className=\"yearsExp\" /> */}\n                                    <Dropdown options={experienceOptions} onChange={onSelect} value={yearsofexperience} id=\"expDropDown\" name=\"yearsofexperience\" />\n                                </div>\n                            </div>\n                            \n                            \n                        </div>\n                    </div>\n                </form>\n                <div className=\"navigationDiv\">\n                    <button className=\"nextBtn\" onClick={previous}>back</button>  \n                    <button className=\"nextBtn\" onClick={next}>Next</button>\n                </div>\n\n                \n                \n            </div>\n            \n        </div>\n    )\n}\n\n\nexport default Skills",["315","316"],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Work.js",["317","318"],"import React, { useState, useEffect } from 'react'\nimport RecentWork from './workComponents/Recent'\nimport PastWork from './workComponents/Past'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst Work = ({ setWork, workData, navigation, form, profile }) => {\n\n    const props = { setWork, workData, navigation }\n    const { previous, next } = navigation;\n    const { prospects } = workData\n\n    useEffect(() => {\n        if (form === \"edit\"){\n            setWork(profile.workData)\n        }\n    })\n\n    \n\n\n\n    // handle change function for radio group for work status :\n    function handleChange (e) {\n        setWork({\n            ...workData,\n            prospects: e.target.value\n        })\n    }\n\n    return(\n        <div>\n            <div className=\"profileFormDiv\">\n                <div className=\"heading\">\n                    <h4>\n                        Work Information\n                    </h4>\n                </div>\n                <div>\n                    <form>\n\n                        <div className=\"recentWork\">\n                            <h3>Current Role</h3>\n                            <RecentWork {...props} />\n                        </div>\n\n                        <div className=\"pastWork\">\n                            <h3>Past Roles</h3>\n                            <PastWork {...props} />\n                        </div>\n\n\n                        <div className=\"statusSelection\">\n                            <h3>Please Choose one:</h3>\n                            <FormControl component=\"fieldset\">\n                                {/* <FormLabel component=\"legend\">Future Employment Status</FormLabel> */}\n                                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={prospects} onChange={handleChange} className=\"radioGroupWork\">\n                                    <FormControlLabel value=\"looking\" control={<Radio />} label=\"I'm looking for work\" />\n                                    <FormControlLabel value=\"open\" control={<Radio />} label=\"I'm not currently looking, but I'm open to offers\" />\n                                    <FormControlLabel value=\"notLooking\" control={<Radio />} label=\"I'm not looking for work\" />\n                                    \n                                </RadioGroup>\n                                </FormControl>\n\n                            \n                        </div>\n\n                    </form>\n\n                    <div className=\"navigationDiv\">\n                        <button className=\"nextBtn\" onClick={previous}>back</button>  \n                        <button className=\"nextBtn\" onClick={next}>Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Work","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Education.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Links.js",["319","320","321"],"import React, { useState, useEffect } from 'react'\nimport FormInput from '../../reusable/FormInput'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\n\n// need to add validation on additional links form -> display error message if no name for additional link is selected\n\nconst Links = ({ setLinks, linkData, navigation, form, profile }) => {\n\n\n    useEffect(() => {\n        if (form === \"edit\"){\n            setLinks(profile.linkData)\n        }\n    })\n\n    \n\n    const [disabled, setDisabled] = useState(true)\n\n    // form props :\n    console.log(linkData)\n\n    const { linkedin, twitter, instagram, facebook, portfolio, github, resume } = linkData\n    // console.log(profile.linksData.linkedIn, linkedIn)\n    \n\n    // for wizard form navigation :\n    const { previous, next } = navigation;\n\n\n    // local states for controlled forms :\n    const [tempValue, setTempValue] = useState(\"\")\n    const [tempName, setTempName] = useState(\"\")\n    const [defaultOption, setDefaultOption] = useState(\"\")\n\n\n    // sets temp values for additional links form :\n    function handleAdditional (e) {\n        setTempValue(e.target.value)\n    }\n\n\n    // add form :\n    // find div, create input element, set attributes of type and id, set value, add event listener for change,\n    // append the input field to the div, \n    const addFormField = (e) => {\n\n        const div = document.getElementById(\"additionalForms\")\n        const valueField = document.createElement(\"INPUT\")\n\n        valueField.setAttribute(\"type\", \"text\")\n        valueField.setAttribute(\"id\", \"valueField\")\n        valueField.value = tempValue\n\n        valueField.addEventListener(\"change\", handleAdditional)\n\n        div.appendChild(valueField)\n\n    }\n\n    const hideFormField = (e) => {\n        \n    }\n\n\n    // options for dropdown of additional links :\n    const options = [\n        \"Youtube\", \"Pinterest\", \"Reddit\", \"Codewars\", \"Stack Overflow\"\n    ]\n\n\n    // function for selecting dropdown options :\n    // set the temp name for the additional link from selected value,\n    // add a form field if there are no items in additional links object\n    function onSelect (e) {\n\n        const {value} = e\n        setTempName(value)\n        // console.log(Object.keys(linkData))\n\n        if (Object.keys(linkData).length < 8 ){\n            addFormField()\n        }\n            \n        \n        setDisabled(false)\n    }\n\n\n    // function to handle changes from set input fields :\n    // set linkdata to the name and value given\n    function handleChange (e) {\n\n        const { name, value } = e.target\n\n        setLinks( {\n            ...linkData,\n            socials: {\n                [name]: value\n            }\n            \n        })\n    }\n\n    const handlePortfolioChange = (e) => {\n        const { name, value } = e.target\n\n        setLinks( {\n            ...linkData,\n            portfolio: {\n                [name]: value\n            }\n            \n        })\n    }\n\n\n\n    // display additional items keys and values:\n    function DisplayItems () {\n\n        return (\n\n            Object.entries(linkData).map(([key, value]) => {\n                return <li key={key}>{key}: {value}</li>\n            })\n        )\n    }\n    \n\n    // function to handle the click of the + button :\n    // set the additional links to the ones saved in temp name and value,\n    // clear temp value, value field and dropdown selection\n    // add validation in here to prevent blank name : (if !name => display msg, dont allow submission)\n    function handleClick (e) {\n        e.preventDefault()\n\n        setLinks({\n            ...linkData,\n            socials: {\n                [tempName]: tempValue\n            }\n            \n        })\n        \n        setTempValue(\"\")\n        setTempName(\"\")\n        const valueField = document.getElementById(\"valueField\")\n        valueField.value = \"\"\n        setDefaultOption(\"Select...\")\n    }\n\n    function handleUpload (e) {\n        console.log(e.target.files[0])\n        setLinks({\n            ...linkData,\n            portfolio: {\n                resume: e.target.files[0]\n            }\n            \n        })\n    }\n\n    return(\n        <div>\n            <div>\n                <div className=\"heading\">\n                <h4>\n                    Links\n                </h4>  \n                </div>\n                <div className=\"profileFormDiv\">\n                    <form>\n                        <div>\n                            <h3 className=\"greyTitle\">Social Media</h3>\n                            \n                            <div className=\"linkForms\">\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            LinkedIn\n                                        </label>\n                                        <FormInput name=\"linkedIn\" value={linkedin} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Twitter\n                                        </label>\n                                        <FormInput name=\"twitter\" value={twitter} onChange={handleChange} />\n                                    </div>\n                                </div>\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Instagram\n                                        </label>\n                                        <FormInput name=\"instagram\" value={instagram} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Facebook\n                                        </label>\n                                        <FormInput name=\"facebook\" value={facebook} onChange={handleChange} />\n                                    </div>\n\n                                </div>\n                            </div>\n                            \n                    \n\n                                    \n                        </div>\n\n\n                        <div>\n                            <h3 className=\"greyTitle\">Portfolio</h3>\n                            <div className=\"linkForms\">\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Portfolio\n                                        </label>\n                                        <FormInput name=\"portfolio\" value={portfolio} onChange={handlePortfolioChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Github\n                                        </label>\n                                        <FormInput name=\"github\" value={github} onChange={handlePortfolioChange} />\n                                    </div>\n\n                                </div>\n                                \n                            </div>\n\n                            <div className=\"profilePhotoUpload\">\n                                <label for=\"photoBtn\">Upload Resume</label>\n                                <input \n                                    type=\"file\"\n                                    name=\"resume\"\n                                    accept=\".pdf\"\n                                    multiple=\"false\"\n                                    onChange={handleUpload}\n                                    id=\"photoBtn\"\n                                    hidden\n                                    \n                                />\n                                <span id=\"fileChosen\">No file Chosen</span>\n\n                            </div>\n                            \n                            \n                            {/* <div className=\"formFields\">\n                                <label>\n                                    Resume\n                                </label>\n                                <FormInput type=\"file\" name=\"resume\" accept=\".pdf\" onChange={handleUpload}/>\n                                \n                            </div> */}\n                        </div>\n                        <div>\n                            <h3 className=\"greyTitle\">Additional</h3>\n                            \n                            <div className=\"linkDropDown\">\n                                <Dropdown options={options} onChange={onSelect} value={defaultOption} name=\"additionallinks\" />\n                                \n                                <div id=\"additionalForms\"></div>\n                                <button className=\"plusButton\" onClick={handleClick} disabled={disabled} >+</button>                \n                            </div>\n                                \n                            <div id=\"additionalItems\">\n                                    \n                                {/* <DisplayItems /> */}\n                                    \n                                \n                            </div>\n                            </div>\n\n                    </form>  \n                    <div className=\"navigationDiv\">\n                        <button className=\"nextBtn\" onClick={previous}>back</button>  \n                        <button className=\"nextBtn\" onClick={next}>Next</button>\n                    </div>\n                </div>\n            </div>\n            \n\n        </div>\n    )\n}\n\n\nexport default Links","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Details.js",["322","323","324"],"import React, { useState, useEffect } from 'react'\nimport FormInput from '../../reusable/FormInput'\n\n// import Checkbox from '@material-ui/core/Checkbox';\nimport { STATES } from 'mongoose';\n\n\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\n// checkboxes are broken >:(\n    // checkboxes now work but the onchange event is slow by one click\n\n\n\nconst Details = ({ setDetails, detailsData, navigation, form, profile }) => {\n    \n    // fields from detail form data :\n    const { profilePhoto, name, username, location, \n    dateofbirth, bio, blogpostdescription } = detailsData\n\n    // next from hooks helper\n    const { next } = navigation;\n\n    useEffect(() => {\n        if (form === \"edit\"){\n            setDetails(profile.detailsData)\n        }\n    }) \n\n\n    \n\n    \n\n    // const interests = [\n    //     {\"Front End\": false},\n    //     {\"Back End\": false},\n    //     {\"Full Stack\": false},\n    //     {\"AI\": false},\n    //     {\"Mobile Development\": false},\n    //     {\"Software Development\": false},\n    //     {\"Data Science\": false},\n    //     {\"Cyber Security\": false},\n    //     {\"DevOps\": false},\n    //     {\"Game Development\": false}\n    // ]\n    const interests = {\n        frontEnd: false,\n        backEnd: false,\n        fullStack: false,\n        aI: false,\n        mobileDevelopment: false,\n        softwareDevelopment: false,\n        dataScience: false,\n        cyberSecurity: false,\n        devOps: false,\n        gameDevelopment: false\n    }\n\n\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          display: 'flex',\n        },\n        formControl: {\n          margin: theme.spacing(3),\n        },\n    }));\n\n    const classes = useStyles();\n\n    // const interests = [\n    //     {frontEnd: false, label: \"Front End\"},\n    //     {backEnd: false, label: \"Back End\"},\n    //     {fullStack: false, label: \"Full Stack\"},\n    //     {aI: false, label: \"AI\"},\n    //     {mobileDevelopment: false, label: \"Mobile Development\"},\n    //     {softwareDevelopment: false, label: \"Software Development\"},\n    //     {dataScience: false, label: \"Data Science\"},\n    //     {cyberSecurity: false, label: \"Cyber Security\"},\n    //     {devOps: false, label: \"DevOps\"},\n    //     {gameDevelopment: false, label: \"Game Development\"}\n    // ]\n\n\n\n    // const interests = [\n    //     {frontEnd: {checked: false, label: \"Front End\"}},\n    //     {backEnd: {checked: false, label: \"Back End\"}},\n    //     {fullStack: {checked:false, label: \"Full Stack\"}},\n    //     {aI: {checked: false, label: \"AI\"}},\n    //     {mobileDevelopment: {checked: false, label: \"Mobile Development\"}},\n    //     {softwareDevelopment: {checked: false, label: \"Software Development\"}},\n    //     {dataScience: {checked: false, label: \"Data Science\"}},\n    //     {cyberSecurity: {checked: false, label: \"Cyber Security\"}},\n    //     {devOps: {checked: false, label: \"DevOps\"}},\n    //     {gameDevelopment: {checked: false, label: \"Game Development\"}}\n    // ]\n\n    const [checkedBox, setChecked] = useState(interests)\n\n    const { frontEnd, backEnd, fullStack, aI, mobileDevelopment, softwareDevelopment, dataScience, cyberSecurity, devOps, gameDevelopment } = checkedBox;\n    \n\n\n\n    function handleCheckboxChange (e) {\n\n        const { name, checked } = e.target\n        console.log(name, checked)\n\n\n        setChecked({\n            ...checkedBox,\n            [name]: checked\n        })\n        console.log(checkedBox)\n        // console.log(checkedBox)\n        const entries = Object.entries(checkedBox)\n        // console.log(entries)\n\n        const filteredInterests = entries.filter(x => x[1] === true)\n        // console.log(filteredInterests)\n        // const interestData = []\n        // interestData.push(filteredInterests[0])\n        // console.log(filteredInterests)\n        const spliced = filteredInterests.map((x) => {\n            return x.splice(0, 1).toString()\n        })\n        // console.log(spliced)\n        setDetails({\n            ...detailsData,\n            interests: spliced\n        })\n\n\n    }\n  \n\n\n\n    // function to handle change of regular form inputs :\n    function handleChange (e) {\n        const { name, value } = e.target\n        setDetails({\n            ...detailsData,\n            [name]: value\n        })\n        \n    }\n\n    // function for image upload :\n    function uploadImg (e) {\n        setDetails({\n            ...detailsData,\n            profilePhoto: e.target.files[0]\n        })\n\n        const file = document.getElementById('fileChosen')\n        file.textContent = e.target.files[0].name\n    }\n\n\n\n\n    return(\n        <div>\n    \n            <div className=\"heading\">\n                <h4>\n                    Personal Details\n                </h4>\n            </div>\n\n            <div className=\"profileFormDiv\">\n                \n\n\n                <div className=\"profileForm\">\n                    <div className=\"photoDiv\">\n                        <div className=\"profilePhoto\">\n                            <img\n                                src={profilePhoto}\n                                alt=\"profilephoto\"\n                                />\n                        </div>\n\n\n                        <div className=\"profilePhotoUpload\">\n                            <label id=\"photoLabel\" htmlFor=\"photoBtn\">Upload Image</label>\n                            <input \n                                type=\"file\"\n                                name=\"profilePhoto\"\n                                accept=\"image/png, image/jpeg\"\n                                onChange={uploadImg}\n                                id=\"photoBtn\"\n                                hidden\n                                \n                            />\n                            <span id=\"fileChosen\">No file Chosen</span>\n\n                        </div>\n                    </div>\n\n\n                    <div className=\"profileFormSection\">\n\n                        <div className=\"doubleFields\">\n                            <div className=\"formFields\">\n                                <label>\n                                    Name\n                                </label>\n                                <FormInput name=\"name\" value={name} onChange={handleChange} />  \n                            </div>\n\n                        \n\n                        </div>\n                        \n\n\n                        <div className=\"doubleFields\">\n                            <div className=\"formFields\">\n                                <label>\n                                    Username\n                                </label>\n                                <FormInput name=\"username\" value={username} onChange={handleChange} /> \n                            </div>\n\n                            \n                            <div className=\"formFields\">\n                                <label>\n                                    Location\n                                </label>\n            \n                                <FormInput name=\"location\" value={location} onChange={handleChange} />\n                            </div>\n                        </div>\n\n                        \n                        <div className=\"doubleFields\">\n                            \n\n                            <div className=\"birthdayFields formFields\">\n                                <label>Date of Birth</label>\n\n                                <FormInput type=\"date\" name=\"dateofbirth\" value={dateofbirth} onChange={handleChange}/>\n            \n                            </div>\n                        </div>\n\n\n                        <div className=\"interestsSection\">\n                            <h4>Interests</h4>\n                            <div className=\"interestsCheckBoxes\">\n\n                            <FormControl component=\"fieldset\" className={classes.formControl}>\n                                <FormGroup>\n                                    <FormControlLabel\n                                        control={<Checkbox checked={frontEnd} onChange={handleCheckboxChange} name=\"frontEnd\" />}\n                                        label=\"Front End\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={backEnd} onChange={handleCheckboxChange} name=\"backEnd\" />}\n                                        label=\"Back End\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={fullStack} onChange={handleCheckboxChange} name=\"fullStack\" />}\n                                        label=\"Full Stack\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={aI} onChange={handleCheckboxChange} name=\"aI\" />}\n                                        label=\"AI\"\n                                    />\n                                \n                                    <FormControlLabel\n                                        control={<Checkbox checked={mobileDevelopment} onChange={handleCheckboxChange} name=\"mobileDevelopment\" />}\n                                        label=\"Mobile Development\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={softwareDevelopment} onChange={handleCheckboxChange} name=\"softwareDevelopment\" />}\n                                        label=\"Software Development\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={dataScience} onChange={handleCheckboxChange} name=\"dataScience\" />}\n                                        label=\"Data Science\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={cyberSecurity} onChange={handleCheckboxChange} name=\"cyberSecurity\" />}\n                                        label=\"Cyber Security\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={devOps} onChange={handleCheckboxChange} name=\"devOps\" />}\n                                        label=\"DevOps\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox checked={gameDevelopment} onChange={handleCheckboxChange} name=\"gameDevelopment\" />}\n                                        label=\"Game Development\"\n                                    />\n\n                                                \n                                            \n                                       \n                                    \n                                </FormGroup>\n                            </FormControl>\n\n                            \n                            {/* { // map over checkbox items from checkbox data file :\n                                interests.map((item, index) => {\n                                    // const { value, isChecked, id } = item\n                                    // let isChecked = checkedItems[name]\n                                    // console.log('isChecked', isChecked)\n                                    return(\n                                        <div key={item.id} className=\"checkboxes\">\n                                            \n\n                                            <Checkbox value={item.value} checked={item.isChecked} onChange={handleCheckboxChange}  />\n                                          \n                                            <label className=\"checkLabel\">\n                                                {item.value}\n                                            \n                                            </label>\n                                        </div>\n                                    )   \n                                })\n                            } */}\n\n                            \n                               \n\n                            </div>\n                        </div>\n\n                            <div className=\"formFields desc\">\n                                <label id=\"authorLabel\">\n                                    Brief Author Description \n                                </label>\n                                {/* <p>(This will be shown underneath your blog posts)</p> */}\n                                \n                                <textarea \n                                    name=\"blogpostdescription\"\n                                    value={blogpostdescription}\n                                    onChange={handleChange}\n                                    className=\"description\"\n                                />\n                            </div>\n\n                        <div className=\"formFields desc\">\n                            <label>\n                                Bio\n                            </label>\n                            <textarea \n                                name=\"bio\"\n                                value={bio}\n                                onChange={handleChange}\n                                className=\"bio\"\n                            />\n                        </div>\n\n                        \n                    </div>\n                </div>\n                <div className=\"navigationDiv\">\n                    <button className=\"nextBtn\" onClick={next}>next</button>\n                </div>\n\n                \n            </div>\n\n            \n            \n        </div>\n    )\n}\n\nexport default Details","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Review.js",["325","326","327","328","329","330","331","332","333"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Redirect } from 'react-router-dom'\n// import { getProfileFromId, updateProfile } from '../../../services/profileServices'\n// import { useGlobalState } from '../../../config/store'\nimport { addProfile, loadUserId } from './../../../config/api'\n\nimport { USER_LOADED } from './../../../actions/constants'\n\nimport { useDispatch } from 'react-redux'\n\nimport axios from 'axios'\nimport store from './../../../store'\n\n\n// make DRY !!!!!!!\n// fix functionality for files and arrays\n\nconst Review = ({ detailsData, skillsData, workData, educationData, linkData, navigation,  profiles, form, match }) => {\n  \n \n\n  const profileId = match && match.params ? match.params.id : -1\n  // const profile = getProfileFromId(profiles, profileId)\n\n  let history = useHistory()\n\n  const dispatch = useDispatch()\n\n  \n\n  const { previous } = navigation;\n  console.log(detailsData)\n\n  \n\n\n\n\n  const createProfile = (e) => {\n\n    e.preventDefault()\n\n    const newProfile = {\n      // _id: nextIdProfile,\n      // modified_date: new Date(),\n      details: detailsData,\n      skills: skillsData,\n      currentroles: workData.currentroles,\n      pastroles: workData.pastroles,\n      prospects: workData.prospects,\n      qualifications: educationData,\n      socials: linkData.socials,\n      portfolio: linkData.portfolio\n\n    }\n    // console.log(\"NEW\", newProfile)\n    dispatch(addProfile(newProfile))\n\n    // addProfile(newProfile)\n    history.push(`/profiles/${newProfile._id}`)\n    // console.log(\"NEW\", newProfile)\n    \n\n\n\n    // addProfile(newProfile).then((newProfile) => {\n    //   dispatch({\n    //     type: \"setUserProfiles\",\n    //     data: [newProfile, ...userProfiles]\n    //   })\n      \n\n\n    // }).catch((error) => {\n    //   const status = error.response ? error.response.status : 500\n    //   console.log(\"caught error creating profile\", error)\n    //   if (status === 403)\n    //   setErrorMessage(\"lost login session\")\n    //   else \n    //     setErrorMessage(\"problem on the server\")\n    // })\n    \n    \n  \n  }\n\n  const updateProfile = (e) => {\n    e.preventDefault()\n    const updatedProfile = {\n      modified_date: new Date(),\n      detailsData: detailsData,\n      skillsData: skillsData,\n      workData: workData,\n      educationData: educationData,\n      linkData: linkData\n    }\n\n    // updateProfile(updatedProfile).then(() => {\n    //   const otherProfiles = userProfiles.filter((profile) => profile._id !== updatedProfile._id )\n    //   dispatch({\n    //     type: \"setUserProfiles\",\n    //     data: [updatedProfile, ...otherProfiles]\n    //   })\n    //   history.push(`/profiles/${profile._id}`)\n    // }).catch((error) => {\n    //   const status = error.response ? error.response.status : 500\n    //   console.log(\"caught error on edit\", error)\n    //   if(status === 403)\n    //       setErrorMessage(\"Oops! It appears we lost your login session. Make sure 3rd party cookies are not blocked by your browser settings.\")\n    //   else\n    //       setErrorMessage(\"Well, this is embarrassing... There was a problem on the server.\")\n    // })\n\n  }\n\n  \n\n\n  return (\n    <div>\n      <div className=\"heading\">\n        <h4>\n          Review your details\n        </h4>\n      </div>\n      <div>\n\n\n        <div>\n          <h3 className=\"greyTitle\">Details</h3>\n          <div className=\"reviewDivs\">\n\n            {/* {\n              Object.entries(detailsData).map(([key, value]) => {\n\n\n                if (typeof(value) === \"object\" && value.length > 1){\n                  return (<div>\n                    <li>Interests:</li>\n                    {value.map((x) => <li key={x}>{x}</li>)}\n                  </div>\n                  )\n                } \n                \n                else if (key === \"profilePhoto\"){\n                  console.log(key, value, value.name)\n                  return (\n                    <div>\n                      <li>profile photo:</li>\n                      <li key={key}>{value.name}</li>\n                    </div>\n                  )\n\n                }\n                \n                return <li key={key}>{key}: {value}</li>\n\n              })\n            } */}\n\n\n          </div>\n        </div>\n\n\n\n        <div>\n          <h3 className=\"greyTitle\">Skills</h3>\n          <div className=\"reviewDivs\">\n            {/* {\n              Object.entries(skillsData).map(([key, value]) => {\n\n                return <li key={key}>{key}: {value}</li>\n              })\n            } */}\n          </div>\n        </div>\n\n\n\n        <div>\n          <h3 className=\"greyTitle\">Work</h3>\n          <div className=\"reviewDivs\">\n            {/* {\n              Object.entries(workData).map(([key, value]) => {\n\n                if (typeof(value) === \"object\"){\n                  return value.map(x => {\n                    return (\n                      \n                      <div>\n                        <h5> Past Role</h5>\n                        <li>title: {x.title}</li>\n                        <li>company: {x.company}</li>\n                        <li>dates: {x.startDate} - {x.endDate}</li>\n\n                      </div>\n                    )\n                  })\n                }\n\n                return <li key={key}>{key}: {value}</li>\n\n              })\n            } */}\n          </div>\n        </div>\n\n\n        <div>\n          <h3 className=\"greyTitle\">Education</h3>\n          <div className=\"reviewDivs\">\n\n          {\n            // console.log(\"edu, \", educationData)\n            // educationData.map((x) => {\n            //   console.log(\"EDUCATION MAP: \", x)\n            //   return Object.entries(x).map(([key, value]) => {\n\n            //     return <li key={key}>{key}: {value}</li>\n\n            //   })\n            // })\n              // Object.entries(educationData).map(([key, value]) => {\n\n              //   if (typeof(value) === \"object\"){\n              //     return value.map(x => {\n              //       return (\n                      \n              //         <div>\n              //           <h5> Past Education</h5>\n              //           <li>School: {x.institution}</li>\n              //           <li>degree: {x.degree}</li>\n              //           <li>dates: {x.startdate} - {x.enddate}</li>\n\n              //         </div>\n              //       )\n              //     })\n          }\n                \n              \n          </div>\n        </div>\n\n\n\n        <div>\n          <h3 className=\"greyTitle\">Links</h3>\n          <div className=\"reviewDivs\">\n          {/* {\n              Object.entries(linkData).map(([key, value]) => {\n                if (key === \"resume\"){\n                  console.log(\"RESUME\", key, value)\n                  return (\n                    <div>\n                      <li>Resume:</li>\n                      <li key={key}>{value.name}</li>\n                    </div>\n                  )\n                } else if (typeof(value) === \"object\"){\n                  return Object.entries(value).map(([k, v]) => {\n                    return (\n                      <div>\n                        <li>{k}: {v}</li>\n                      </div>\n                    )\n                  })\n                } else \n                return <li key={key}>{key}: {value}</li>\n              })\n            } */}\n          </div>\n        </div>\n\n      </div>\n      <div className=\"navigationDiv\">\n          <button className=\"nextBtn\" onClick={previous}>back</button>\n          {\n            (form === \"edit\") ? (<button className=\"nextBtn\" onClick={updateProfile}>Update Profile</button>) : (<button className=\"nextBtn\" onClick={createProfile}>Create Profile</button>)\n          }  \n          \n      </div>\n      \n\n    </div>\n\n  )\n\n}\n\n\nexport default Review\n","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/educationSections/PastEducation.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Past.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Recent.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/skillsComponents/SkillForm.js",["334"],"import React, { useState } from 'react'\nimport FormInput from '../../../reusable/FormInput'\n\n// skills forms working, current bug: \n// tryed different ways to have button as a submit button, however \n// prevent default does not work and the page refreshes,\n// the forms also dont work as expected when pressing enter instead \n// of clicking the button,\n// right now have settled with onclick instead of onsubmit and disabled enter from \n// causing submit, find a way to use enter and have forms working as expected,\n// possibly by figuring out how to fix submit problem\n\n// also need to figure out way to store these skills in global state or just to the \n// parent skills component\n\n// also need to figure out how to get rid of the empty string when updating the skills state\n// or a way to not print it to the screen\n\n\n\nconst SkillsForm = ({ setSkills, skillsData }) => {\n  \n    const { languages } = skillsData\n    \n    // states for tech and soft skills arrays :\n    const [techSkills, setTechSkills] = useState([])\n\n    // const [softSkills, setSoftSkills] = useState([])\n\n    // states for temporary values and names :\n    const [tempVal, setTempVal] = useState(\"\")\n    // const [tempName, setTempName] = useState(\"\")\n\n\n    // function that handles text change :\n    // sets temp val and name :\n    function handleChange (e) {\n        setTempVal(e.target.value)\n        // setTempName(e.target.name)\n    }\n\n\n    // function that handles button click :\n    // calls add to array function passing the temp val, which\n    // adds the values to either the tech or soft array based on the temp name :\n    // it then sets tempval to empty  :\n    function handleSubmit (e) {\n        addToArray(tempVal)\n        setTempVal(\"\")\n        \n        e.preventDefault()\n    }\n\n\n    // function described above ^ :\n    const addToArray = (item) => {\n        if (item !== \"\"){\n            const newArr = [...techSkills, item ]\n            setTechSkills(newArr)\n            setSkills({\n                ...skillsData,\n                languages: newArr\n            })\n         } // else if (tempName === \"soft\" && item !== \"\"){\n        //     const newArr = [...softSkills, item]\n        //     setSoftSkills(newArr)\n        //     setSkills({\n        //         ...skillsData,\n        //         soft: newArr\n        //     })\n        // }\n        console.log(skillsData)\n    }\n\n    // display function that displays the correct list of skills based on temp name :\n    function Display(){\n        \n        if (techSkills){\n            return techSkills.map((item, index) => \n\n                <li className=\"skillItem\" key={index}>{item}</li>\n \n                \n            )\n        // }  else if (tempName === \"soft\"){\n            // return softSkills.map((item, index) => \n\n            //         <li className=\"skillItem\" key={index}>{item}</li>\n\n                \n            // )\n        } else return null\n\n    }\n\n\n    return(\n        <div className=\"skillsDisplayInput\">\n            <div className=\"formFields\">\n                <div>\n                    <label>\n                        Languages/Services\n                    </label>\n                    <div className=\"skillInputSection\">\n                        <FormInput name=\"languages\" value={tempVal} onChange={handleChange} />\n                        <button onClick={handleSubmit} className=\"addBtn\">+</button>\n                    </div>\n                </div>\n                \n                <div className=\"skillsList\">\n                   <Display /> \n                </div>\n                \n            </div>\n            \n\n            \n\n            \n            \n            \n        </div>\n    )\n}\n\n\nexport default SkillsForm","/Users/meika/Desktop/mern-app/client/src/components/profiles/AddExperience.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/AddQualification.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/ProfileFields.js",[],"/Users/meika/Desktop/mern-app/client/src/components/dashboard/spinner.js",[],"/Users/meika/Desktop/mern-app/client/src/components/dashboard/Qualification.js",[],"/Users/meika/Desktop/mern-app/client/src/components/dashboard/Experience.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profile/Profile.js",["335","336","337"],"import React, { Fragment, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport ProfileDisplay from './ProfileDisplay'\r\nimport Spinner from '../dashboard/spinner'\r\nimport { getProfileId } from '../../actions/profile'\r\n\r\n\r\n\r\nconst Profile = ({ getProfileId, profile: {profile, loading},auth, match }) => {\r\n    useEffect(() => {\r\n        getProfileId(match.params.id);\r\n    },[getProfileId]);\r\n\r\n    return (\r\n        <Fragment>\r\n           <Fragment>\r\n             <ProfileDisplay profile={profile}/>\r\n           </Fragment>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileId: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileId })(Profile)\r\n","/Users/meika/Desktop/mern-app/client/src/components/profile/ProfileDisplay.js",["338","339","340","341","342","343","344"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileDisplay = ({ profile: {\r\n    \r\n    company,\r\n    location,\r\n    social,\r\n    user: { name, avatar }\r\n}}) => {\r\n    return(\r\n        <div class=\"profile-top bg-primary p-2\">\r\n          <img\r\n            class=\"round-img my-1\"\r\n            src={avatar}\r\n            alt=\"\"\r\n          />\r\n          <h1 class=\"large\">{name}</h1>\r\n          <p class=\"lead\"> {company}</p>\r\n          <p>{location}</p>\r\n          <div class=\"icons my-1\">\r\n              {\r\n                  social && (\r\n                    <a href={social.linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <i class=\"fas fa-globe fa-2x\"></i>\r\n                  </a>\r\n                  )\r\n              }\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fas fa-globe fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-twitter fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-facebook fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-linkedin fa-2x\"></i>\r\n            </a>\r\n             <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-youtube fa-2x\"></i>\r\n            </a>\r\n            <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <i class=\"fab fa-instagram fa-2x\"></i>\r\n            </a>\r\n          </div>\r\n\r\n           \r\n          <div class=\"profile-about bg-light p-2\">\r\n          <h2 class=\"text-primary\">John's Bio</h2>\r\n          <p>\r\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sed\r\n            doloremque nesciunt, repellendus nostrum deleniti recusandae nobis\r\n            neque modi perspiciatis similique?\r\n          </p>\r\n          <div class=\"line\"></div>\r\n          <h2 class=\"text-primary\">Skill Set</h2>\r\n          <div class=\"skills\">\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> HTML</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> CSS</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> JavaScript</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> Python</div>\r\n            <div class=\"p-1\"><i class=\"fa fa-check\"></i> C#</div>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n        <div class=\"profile-exp bg-white p-2\">\r\n          <h2 class=\"text-primary\">Experience</h2>\r\n          <div>\r\n            <h3 class=\"text-dark\">Microsoft</h3>\r\n            <p>Oct 2011 - Current</p>\r\n            <p><strong>Position: </strong>Senior Developer</p>\r\n            <p>\r\n              <strong>Description: </strong>Lorem ipsum dolor sit amet\r\n              consectetur adipisicing elit. Dignissimos placeat, dolorum ullam\r\n              ipsam, sapiente suscipit dicta eius velit amet aspernatur\r\n              asperiores modi quidem expedita fugit.\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <h3 class=\"text-dark\">Sun Microsystems</h3>\r\n            <p>Nov 2004 - Nov 2011</p>\r\n            <p><strong>Position: </strong>Systems Admin</p>\r\n            <p>\r\n              <strong>Description: </strong>Lorem ipsum dolor sit amet\r\n              consectetur adipisicing elit. Dignissimos placeat, dolorum ullam\r\n              ipsam, sapiente suscipit dicta eius velit amet aspernatur\r\n              asperiores modi quidem expedita fugit.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"profile-edu bg-white p-2\">\r\n          <h2 class=\"text-primary\">Education</h2>\r\n          <div>\r\n            <h3>University Of Washington</h3>\r\n            <p>Sep 1993 - June 1999</p>\r\n            <p><strong>Degree: </strong>Masters</p>\r\n            <p><strong>Field Of Study: </strong>Computer Science</p>\r\n            <p>\r\n              <strong>Description: </strong>Lorem ipsum dolor sit amet\r\n              consectetur adipisicing elit. Dignissimos placeat, dolorum ullam\r\n              ipsam, sapiente suscipit dicta eius velit amet aspernatur\r\n              asperiores modi quidem expedita fugit.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nProfileDisplay.propTypes = {\r\n\r\n}\r\n\r\nexport default ProfileDisplay\r\n",{"ruleId":"345","replacedBy":"346"},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","severity":1,"message":"350","line":3,"column":8,"nodeType":"351","messageId":"352","endLine":3,"endColumn":13},{"ruleId":"349","severity":1,"message":"353","line":8,"column":10,"nodeType":"351","messageId":"352","endLine":8,"endColumn":18},{"ruleId":"349","severity":1,"message":"354","line":9,"column":8,"nodeType":"351","messageId":"352","endLine":9,"endColumn":13},{"ruleId":"349","severity":1,"message":"355","line":10,"column":10,"nodeType":"351","messageId":"352","endLine":10,"endColumn":18},{"ruleId":"349","severity":1,"message":"356","line":10,"column":33,"nodeType":"351","messageId":"352","endLine":10,"endColumn":46},{"ruleId":"349","severity":1,"message":"357","line":11,"column":9,"nodeType":"351","messageId":"352","endLine":11,"endColumn":21},{"ruleId":"349","severity":1,"message":"358","line":30,"column":8,"nodeType":"351","messageId":"352","endLine":30,"endColumn":18},{"ruleId":"349","severity":1,"message":"359","line":50,"column":12,"nodeType":"351","messageId":"352","endLine":50,"endColumn":20},{"ruleId":"349","severity":1,"message":"360","line":50,"column":22,"nodeType":"351","messageId":"352","endLine":50,"endColumn":33},{"ruleId":"345","replacedBy":"361"},{"ruleId":"347","replacedBy":"362"},{"ruleId":"345","replacedBy":"363"},{"ruleId":"347","replacedBy":"364"},{"ruleId":"349","severity":1,"message":"365","line":2,"column":8,"nodeType":"351","messageId":"352","endLine":2,"endColumn":13},{"ruleId":"349","severity":1,"message":"366","line":14,"column":11,"nodeType":"351","messageId":"352","endLine":14,"endColumn":16},{"ruleId":"367","severity":1,"message":"368","line":33,"column":25,"nodeType":"369","endLine":33,"endColumn":51},{"ruleId":"367","severity":1,"message":"368","line":39,"column":25,"nodeType":"369","endLine":39,"endColumn":51},{"ruleId":"370","severity":1,"message":"371","line":61,"column":1,"nodeType":"372","messageId":"373","endLine":65,"endColumn":11},{"ruleId":"349","severity":1,"message":"374","line":1,"column":28,"nodeType":"351","messageId":"352","endLine":1,"endColumn":36},{"ruleId":"349","severity":1,"message":"356","line":4,"column":26,"nodeType":"351","messageId":"352","endLine":4,"endColumn":39},{"ruleId":"349","severity":1,"message":"350","line":5,"column":8,"nodeType":"351","messageId":"352","endLine":5,"endColumn":13},{"ruleId":"349","severity":1,"message":"365","line":4,"column":8,"nodeType":"351","messageId":"352","endLine":4,"endColumn":13},{"ruleId":"349","severity":1,"message":"375","line":6,"column":22,"nodeType":"351","messageId":"352","endLine":6,"endColumn":33},{"ruleId":"349","severity":1,"message":"376","line":7,"column":10,"nodeType":"351","messageId":"352","endLine":7,"endColumn":18},{"ruleId":"349","severity":1,"message":"377","line":17,"column":11,"nodeType":"351","messageId":"352","endLine":17,"endColumn":16},{"ruleId":"349","severity":1,"message":"378","line":3,"column":19,"nodeType":"351","messageId":"352","endLine":3,"endColumn":30},{"ruleId":"379","severity":1,"message":"380","line":27,"column":8,"nodeType":"381","endLine":27,"endColumn":10,"suggestions":"382"},{"ruleId":"349","severity":1,"message":"383","line":1,"column":27,"nodeType":"351","messageId":"352","endLine":1,"endColumn":36},{"ruleId":"349","severity":1,"message":"384","line":2,"column":8,"nodeType":"351","messageId":"352","endLine":2,"endColumn":17},{"ruleId":"349","severity":1,"message":"385","line":12,"column":26,"nodeType":"351","messageId":"352","endLine":12,"endColumn":41},{"ruleId":"349","severity":1,"message":"386","line":21,"column":11,"nodeType":"351","messageId":"352","endLine":21,"endColumn":23},{"ruleId":"349","severity":1,"message":"383","line":1,"column":27,"nodeType":"351","messageId":"352","endLine":1,"endColumn":36},{"ruleId":"349","severity":1,"message":"387","line":2,"column":8,"nodeType":"351","messageId":"352","endLine":2,"endColumn":12},{"ruleId":"349","severity":1,"message":"350","line":4,"column":8,"nodeType":"351","messageId":"352","endLine":4,"endColumn":13},{"ruleId":"349","severity":1,"message":"388","line":8,"column":10,"nodeType":"351","messageId":"352","endLine":8,"endColumn":21},{"ruleId":"349","severity":1,"message":"389","line":9,"column":10,"nodeType":"351","messageId":"352","endLine":9,"endColumn":21},{"ruleId":"349","severity":1,"message":"390","line":9,"column":23,"nodeType":"351","messageId":"352","endLine":9,"endColumn":35},{"ruleId":"349","severity":1,"message":"391","line":22,"column":11,"nodeType":"351","messageId":"352","endLine":22,"endColumn":19},{"ruleId":"349","severity":1,"message":"392","line":50,"column":34,"nodeType":"351","messageId":"352","endLine":50,"endColumn":38},{"ruleId":"349","severity":1,"message":"393","line":13,"column":3,"nodeType":"351","messageId":"352","endLine":13,"endColumn":17},{"ruleId":"349","severity":1,"message":"394","line":14,"column":3,"nodeType":"351","messageId":"352","endLine":14,"endColumn":16},{"ruleId":"349","severity":1,"message":"395","line":15,"column":3,"nodeType":"351","messageId":"352","endLine":15,"endColumn":21},{"ruleId":"349","severity":1,"message":"396","line":21,"column":3,"nodeType":"351","messageId":"352","endLine":21,"endColumn":14},{"ruleId":"349","severity":1,"message":"397","line":24,"column":3,"nodeType":"351","messageId":"352","endLine":24,"endColumn":14},{"ruleId":"349","severity":1,"message":"398","line":304,"column":13,"nodeType":"351","messageId":"352","endLine":304,"endColumn":17},{"ruleId":"399","severity":1,"message":"400","line":7,"column":1,"nodeType":"401","endLine":17,"endColumn":2},{"ruleId":"349","severity":1,"message":"402","line":2,"column":5,"nodeType":"351","messageId":"352","endLine":2,"endColumn":21},{"ruleId":"349","severity":1,"message":"403","line":9,"column":5,"nodeType":"351","messageId":"352","endLine":9,"endColumn":27},{"ruleId":"349","severity":1,"message":"393","line":10,"column":5,"nodeType":"351","messageId":"352","endLine":10,"endColumn":19},{"ruleId":"349","severity":1,"message":"395","line":11,"column":5,"nodeType":"351","messageId":"352","endLine":11,"endColumn":23},{"ruleId":"349","severity":1,"message":"394","line":12,"column":5,"nodeType":"351","messageId":"352","endLine":12,"endColumn":18},{"ruleId":"349","severity":1,"message":"404","line":9,"column":8,"nodeType":"351","messageId":"352","endLine":9,"endColumn":22},{"ruleId":"349","severity":1,"message":"405","line":232,"column":15,"nodeType":"351","messageId":"352","endLine":232,"endColumn":18},{"ruleId":"349","severity":1,"message":"406","line":2,"column":8,"nodeType":"351","messageId":"352","endLine":2,"endColumn":17},{"ruleId":"349","severity":1,"message":"407","line":2,"column":8,"nodeType":"351","messageId":"352","endLine":2,"endColumn":16},{"ruleId":"349","severity":1,"message":"408","line":7,"column":13,"nodeType":"351","messageId":"352","endLine":7,"endColumn":16},{"ruleId":"349","severity":1,"message":"409","line":7,"column":18,"nodeType":"351","messageId":"352","endLine":7,"endColumn":37},{"ruleId":"349","severity":1,"message":"410","line":7,"column":39,"nodeType":"351","messageId":"352","endLine":7,"endColumn":51},{"ruleId":"349","severity":1,"message":"411","line":7,"column":53,"nodeType":"351","messageId":"352","endLine":7,"endColumn":64},{"ruleId":"349","severity":1,"message":"412","line":8,"column":5,"nodeType":"351","messageId":"352","endLine":8,"endColumn":14},{"ruleId":"349","severity":1,"message":"413","line":8,"column":16,"nodeType":"351","messageId":"352","endLine":8,"endColumn":24},{"ruleId":"349","severity":1,"message":"414","line":8,"column":26,"nodeType":"351","messageId":"352","endLine":8,"endColumn":30},{"ruleId":"349","severity":1,"message":"415","line":8,"column":32,"nodeType":"351","messageId":"352","endLine":8,"endColumn":41},{"ruleId":"349","severity":1,"message":"416","line":8,"column":43,"nodeType":"351","messageId":"352","endLine":8,"endColumn":52},{"ruleId":"349","severity":1,"message":"417","line":8,"column":54,"nodeType":"351","messageId":"352","endLine":8,"endColumn":63},{"ruleId":"349","severity":1,"message":"418","line":9,"column":5,"nodeType":"351","messageId":"352","endLine":9,"endColumn":19},{"ruleId":"349","severity":1,"message":"419","line":9,"column":21,"nodeType":"351","messageId":"352","endLine":9,"endColumn":27},{"ruleId":"349","severity":1,"message":"420","line":9,"column":29,"nodeType":"351","messageId":"352","endLine":9,"endColumn":37},{"ruleId":"349","severity":1,"message":"421","line":11,"column":13,"nodeType":"351","messageId":"352","endLine":11,"endColumn":19},{"ruleId":"345","replacedBy":"422"},{"ruleId":"347","replacedBy":"423"},{"ruleId":"349","severity":1,"message":"384","line":5,"column":8,"nodeType":"351","messageId":"352","endLine":5,"endColumn":17},{"ruleId":"345","replacedBy":"424"},{"ruleId":"347","replacedBy":"425"},{"ruleId":"349","severity":1,"message":"374","line":1,"column":17,"nodeType":"351","messageId":"352","endLine":1,"endColumn":25},{"ruleId":"349","severity":1,"message":"426","line":9,"column":8,"nodeType":"351","messageId":"352","endLine":9,"endColumn":17},{"ruleId":"349","severity":1,"message":"427","line":24,"column":72,"nodeType":"351","messageId":"352","endLine":24,"endColumn":78},{"ruleId":"349","severity":1,"message":"428","line":62,"column":11,"nodeType":"351","messageId":"352","endLine":62,"endColumn":24},{"ruleId":"349","severity":1,"message":"429","line":121,"column":14,"nodeType":"351","messageId":"352","endLine":121,"endColumn":26},{"ruleId":"349","severity":1,"message":"430","line":5,"column":10,"nodeType":"351","messageId":"352","endLine":5,"endColumn":16},{"ruleId":"349","severity":1,"message":"426","line":8,"column":8,"nodeType":"351","messageId":"352","endLine":8,"endColumn":17},{"ruleId":"349","severity":1,"message":"431","line":12,"column":8,"nodeType":"351","messageId":"352","endLine":12,"endColumn":22},{"ruleId":"349","severity":1,"message":"374","line":1,"column":17,"nodeType":"351","messageId":"352","endLine":1,"endColumn":25},{"ruleId":"349","severity":1,"message":"383","line":1,"column":27,"nodeType":"351","messageId":"352","endLine":1,"endColumn":36},{"ruleId":"349","severity":1,"message":"376","line":3,"column":10,"nodeType":"351","messageId":"352","endLine":3,"endColumn":18},{"ruleId":"349","severity":1,"message":"432","line":6,"column":22,"nodeType":"351","messageId":"352","endLine":6,"endColumn":32},{"ruleId":"349","severity":1,"message":"433","line":8,"column":10,"nodeType":"351","messageId":"352","endLine":8,"endColumn":21},{"ruleId":"349","severity":1,"message":"350","line":12,"column":8,"nodeType":"351","messageId":"352","endLine":12,"endColumn":13},{"ruleId":"349","severity":1,"message":"354","line":13,"column":8,"nodeType":"351","messageId":"352","endLine":13,"endColumn":13},{"ruleId":"349","severity":1,"message":"434","line":23,"column":9,"nodeType":"351","messageId":"352","endLine":23,"endColumn":18},{"ruleId":"349","severity":1,"message":"435","line":90,"column":11,"nodeType":"351","messageId":"352","endLine":90,"endColumn":25},{"ruleId":"349","severity":1,"message":"436","line":23,"column":13,"nodeType":"351","messageId":"352","endLine":23,"endColumn":22},{"ruleId":"349","severity":1,"message":"437","line":3,"column":10,"nodeType":"351","messageId":"352","endLine":3,"endColumn":14},{"ruleId":"349","severity":1,"message":"438","line":6,"column":8,"nodeType":"351","messageId":"352","endLine":6,"endColumn":15},{"ruleId":"379","severity":1,"message":"439","line":14,"column":7,"nodeType":"381","endLine":14,"endColumn":21,"suggestions":"440"},{"ruleId":"349","severity":1,"message":"406","line":2,"column":8,"nodeType":"351","messageId":"352","endLine":2,"endColumn":17},{"ruleId":"367","severity":1,"message":"441","line":29,"column":13,"nodeType":"369","endLine":29,"endColumn":67},{"ruleId":"367","severity":1,"message":"441","line":32,"column":13,"nodeType":"369","endLine":32,"endColumn":67},{"ruleId":"367","severity":1,"message":"441","line":35,"column":13,"nodeType":"369","endLine":35,"endColumn":67},{"ruleId":"367","severity":1,"message":"441","line":38,"column":13,"nodeType":"369","endLine":38,"endColumn":67},{"ruleId":"367","severity":1,"message":"441","line":41,"column":14,"nodeType":"369","endLine":41,"endColumn":68},{"ruleId":"367","severity":1,"message":"441","line":44,"column":13,"nodeType":"369","endLine":44,"endColumn":67},"no-native-reassign",["442"],"no-negated-in-lhs",["443"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'store' is defined but never used.","'loadUser' is defined but never used.","'getPostFromId' is defined but never used.","'setAuthToken' is defined but never used.","'AddProfile' is defined but never used.","'profiles' is assigned a value but never used.","'setProfiles' is assigned a value but never used.",["442"],["443"],["442"],["443"],"'Posts' is defined but never used.","'props' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'getAllPosts' is defined but never used.","'Redirect' is defined but never used.","'posts' is assigned a value but never used.","'setAllPosts' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["444"],"'useEffect' is defined but never used.","'FormInput' is defined but never used.","'setErrorMessage' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Post' is defined but never used.","'useSelector' is defined but never used.","'getProfiles' is defined but never used.","'getProfileId' is defined but never used.","'dispatch' is assigned a value but never used.","'user' is assigned a value but never used.","'PROFILE_LOADED' is defined but never used.","'PROFILE_ERROR' is defined but never used.","'PROFILE_LOAD_ERROR' is defined but never used.","'ALL_PROFILE' is defined but never used.","'DELETE_POST' is defined but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'REGISTER_SUCCESS' is defined but never used.","'CREATE_PROFILE_SUCCESS' is defined but never used.","'DisplayProfile' is defined but never used.","'res' is assigned a value but never used.","'PropTypes' is defined but never used.","'Profiles' is defined but never used.","'bio' is assigned a value but never used.","'blogPostDescription' is assigned a value but never used.","'currentroles' is assigned a value but never used.","'dateofbirth' is assigned a value but never used.","'interests' is assigned a value but never used.","'location' is assigned a value but never used.","'name' is assigned a value but never used.","'pastroles' is assigned a value but never used.","'portfolio' is assigned a value but never used.","'prospects' is assigned a value but never used.","'qualifications' is assigned a value but never used.","'skills' is assigned a value but never used.","'username' is assigned a value but never used.","'avatar' is assigned a value but never used.",["442"],["443"],["442"],["443"],"'FormLabel' is defined but never used.","'resume' is assigned a value but never used.","'hideFormField' is assigned a value but never used.","'DisplayItems' is defined but never used.","'STATES' is defined but never used.","'FormHelperText' is defined but never used.","'loadUserId' is defined but never used.","'USER_LOADED' is defined but never used.","'profileId' is assigned a value but never used.","'updatedProfile' is assigned a value but never used.","'languages' is assigned a value but never used.","'Link' is defined but never used.","'Spinner' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["445"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},"Update the dependencies array to be: [dispatch]",{"range":"450","text":"451"},"Update the dependencies array to be: [getProfileId, match.params.id]",{"range":"452","text":"453"},[643,645],"[dispatch]",[470,484],"[getProfileId, match.params.id]"]