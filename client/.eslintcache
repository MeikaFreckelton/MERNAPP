[{"/Users/meika/Desktop/mern-app/client/src/index.js":"1","/Users/meika/Desktop/mern-app/client/src/App.js":"2","/Users/meika/Desktop/mern-app/client/src/config/stateReducer.js":"3","/Users/meika/Desktop/mern-app/client/src/data/post_data.js":"4","/Users/meika/Desktop/mern-app/client/src/data/profile_data.js":"5","/Users/meika/Desktop/mern-app/client/src/components/Navbar.js":"6","/Users/meika/Desktop/mern-app/client/src/components/Home.js":"7","/Users/meika/Desktop/mern-app/client/src/components/Oopsie.js":"8","/Users/meika/Desktop/mern-app/client/src/components/posts/Post.js":"9","/Users/meika/Desktop/mern-app/client/src/components/posts/AddPost.js":"10","/Users/meika/Desktop/mern-app/client/src/components/posts/EditPost.js":"11","/Users/meika/Desktop/mern-app/client/src/components/profiles/Profile.js":"12","/Users/meika/Desktop/mern-app/client/src/components/profiles/Profiles.js":"13","/Users/meika/Desktop/mern-app/client/src/components/profiles/EditProfile.js":"14","/Users/meika/Desktop/mern-app/client/src/components/profiles/AddProfile.js":"15","/Users/meika/Desktop/mern-app/client/src/components/auth/Register.js":"16","/Users/meika/Desktop/mern-app/client/src/components/auth/SignIn.js":"17","/Users/meika/Desktop/mern-app/client/src/components/profiles/MultiStepForm.js":"18","/Users/meika/Desktop/mern-app/client/src/components/posts/Posts.js":"19","/Users/meika/Desktop/mern-app/client/src/components/reusable/FormInput.js":"20","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Details.js":"21","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Education.js":"22","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Work.js":"23","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Links.js":"24","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Skills.js":"25","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Review.js":"26","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/educationSections/PastEducation.js":"27","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Recent.js":"28","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Past.js":"29","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/skillsComponents/SkillForm.js":"30","/Users/meika/Desktop/mern-app/client/src/services/profileServices.js":"31","/Users/meika/Desktop/mern-app/client/src/config/api.js":"32","/Users/meika/Desktop/mern-app/client/src/config/store.js":"33"},{"size":199,"mtime":1607386467801,"results":"34","hashOfConfig":"35"},{"size":5273,"mtime":1610315529826,"results":"36","hashOfConfig":"35"},{"size":749,"mtime":1610252115622,"results":"37","hashOfConfig":"35"},{"size":1637,"mtime":1610239452711,"results":"38","hashOfConfig":"35"},{"size":7175,"mtime":1610237222936,"results":"39","hashOfConfig":"35"},{"size":1441,"mtime":1610074263175,"results":"40","hashOfConfig":"35"},{"size":381,"mtime":1610074263173,"results":"41","hashOfConfig":"35"},{"size":121,"mtime":1610074263176,"results":"42","hashOfConfig":"35"},{"size":1611,"mtime":1610078732977,"results":"43","hashOfConfig":"35"},{"size":2165,"mtime":1610074263180,"results":"44","hashOfConfig":"35"},{"size":152,"mtime":1610238759645,"results":"45","hashOfConfig":"35"},{"size":6094,"mtime":1610317703849,"results":"46","hashOfConfig":"35"},{"size":6666,"mtime":1610252344133,"results":"47","hashOfConfig":"35"},{"size":729,"mtime":1610249936691,"results":"48","hashOfConfig":"35"},{"size":590,"mtime":1610243738363,"results":"49","hashOfConfig":"35"},{"size":1696,"mtime":1610074263178,"results":"50","hashOfConfig":"35"},{"size":1484,"mtime":1610315221726,"results":"51","hashOfConfig":"35"},{"size":3936,"mtime":1610244475623,"results":"52","hashOfConfig":"35"},{"size":5006,"mtime":1610239490973,"results":"53","hashOfConfig":"35"},{"size":490,"mtime":1610074263196,"results":"54","hashOfConfig":"35"},{"size":9246,"mtime":1610315607765,"results":"55","hashOfConfig":"35"},{"size":3715,"mtime":1610249081739,"results":"56","hashOfConfig":"35"},{"size":2966,"mtime":1610249293118,"results":"57","hashOfConfig":"35"},{"size":9525,"mtime":1610249248879,"results":"58","hashOfConfig":"35"},{"size":4078,"mtime":1610317483653,"results":"59","hashOfConfig":"35"},{"size":7000,"mtime":1610316651757,"results":"60","hashOfConfig":"35"},{"size":3072,"mtime":1610074263192,"results":"61","hashOfConfig":"35"},{"size":1388,"mtime":1610074263194,"results":"62","hashOfConfig":"35"},{"size":3314,"mtime":1610074263193,"results":"63","hashOfConfig":"35"},{"size":3748,"mtime":1610317891388,"results":"64","hashOfConfig":"35"},{"size":803,"mtime":1610318001352,"results":"65","hashOfConfig":"35"},{"size":200,"mtime":1610317956353,"results":"66","hashOfConfig":"35"},{"size":157,"mtime":1610252273537,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1mvab0f",{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/meika/Desktop/mern-app/client/src/index.js",[],["142","143"],"/Users/meika/Desktop/mern-app/client/src/App.js",["144","145","146"],"/Users/meika/Desktop/mern-app/client/src/config/stateReducer.js",[],"/Users/meika/Desktop/mern-app/client/src/data/post_data.js",[],"/Users/meika/Desktop/mern-app/client/src/data/profile_data.js",[],"/Users/meika/Desktop/mern-app/client/src/components/Navbar.js",[],"/Users/meika/Desktop/mern-app/client/src/components/Home.js",[],"/Users/meika/Desktop/mern-app/client/src/components/Oopsie.js",[],"/Users/meika/Desktop/mern-app/client/src/components/posts/Post.js",[],"/Users/meika/Desktop/mern-app/client/src/components/posts/AddPost.js",["147"],"import React, { useState } from 'react'\nimport './../../styles/Posts.css'\nimport FormInput from './../reusable/FormInput'\nimport Posts from './Posts'\n\n\nconst AddPost = ({ history, nextId, addPost}) => {\n    // const [posts, setTwoots] = useState([])\n\n    \n\n    const initialFormState = {\n        title: \"\",\n        category: \"\",\n        content: \"\"\n    }\n\n    const [formState, setFormState] = useState(initialFormState)\n\n\n    const handleChange = e => {\n        const { name, value } = e.target\n        setFormState({\n            ...formState,\n            [name]: value\n        })\n    }\n\n    \n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const newPost = {\n            _id: nextId,\n            title: formState.title,\n            category: formState.category || \"general\",\n            modified_date: new Date(),\n            content: formState.content\n        }\n        addPost(newPost)\n        history.push(`/posts/${nextId}`)\n    }\n    console.log(formState)\n\n\n    return(\n        <div>\n            \n            \n            <div id=\"addPostDiv\">\n                <div className=\"heading\">\n                    <h1>Add post</h1>\n                </div>\n                <form id=\"addPostForm\" onSubmit={handleSubmit}>\n\n                    <label>Post Title</label>\n                    <FormInput name=\"title\" placeholder=\"Title here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Category</label>\n                    <FormInput name=\"category\" placeholder=\"Category here...\" className=\"addPostField\" onChange={handleChange} />\n\n                    <label>Post Content</label>\n                    <textarea\n                        name=\"content\"\n                        placeholder=\"content here...\"\n                        className=\"addPostField\"\n                        onChange={handleChange}\n                        \n                    />\n                    <input \n                    type=\"submit\"\n                    className=\"addPostSubmit\"\n                    value=\"New Post\"\n                    />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nexport default AddPost","/Users/meika/Desktop/mern-app/client/src/components/posts/EditPost.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/Profile.js",["148"],"/Users/meika/Desktop/mern-app/client/src/components/profiles/Profiles.js",["149"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport Profile from './Profile'\nimport Dropdown from 'react-dropdown'\nimport { useGlobalState} from '../../config/store'\n\nconst Profiles = ({ profileData }) => {\n\n    const { store } = useGlobalState()\n    const { userProfiles } = store\n    console.log(\"PROFILES\", userProfiles)\n\n    const filters = {\n        level: \"All\",\n        experience: \"All\"\n    }\n\n\n    const [filterData, setFilterData] = useState(filters)\n\n    // console.log(profileData)\n\n    const toggleFilter = () => {\n        const div = document.getElementById(\"openFilter\")\n        if (div){\n            (div.style.display === \"none\") ? (div.style.display = \"flex\") : (div.style.display = \"none\")\n        }\n    }\n\n    const profiles = (profile) => {\n        console.log(profile)\n        const { detailsData, skillsData, workData  } = profile\n        const { firstName, lastName, username, interests } = detailsData\n        const { skillLevel, yearsOfExperience } = skillsData\n        const { status } = workData\n\n        return (\n            <Link to={`/profiles/${profile._id}`} id=\"profileLink\">\n                <div className=\"profileCard\">\n                    <div className=\"profileTopSection\">\n                        <div className=\"imagePlaceHolder\">\n                            <div className=\"img\"></div>\n\n                        </div>\n                        <div className=\"profileTopDetails\">\n                            <h2>{firstName} {lastName} </h2>\n                            <h3>@{username} </h3>\n                            <h4>{skillLevel} Developer </h4>\n                        </div>\n                    </div>\n                    <div className=\"profileBottomSection\">\n                        <ul>\n                            <li key=\"status\" >{status} </li>\n                            <li key=\"exp\" >{yearsOfExperience} years of experience </li>\n                            <li key=\"interests\" >interests: {interests.join(\", \")} </li>\n                        </ul>\n                    </div>\n\n                    \n                </div>\n            </Link>\n\n        )\n\n\n    }\n\n    const Display = () => {\n        const { level, experience } = filterData\n\n        return (profileData\n            .filter((x) => {\n                if (level === \"All\"){\n                    return x\n                } else {\n                    return x.skillsData.skillLevel === level\n\n                 \n                     \n                }\n            })\n            .filter((x) => {\n                if (experience === \"All\"){\n                    return x\n                } else {\n\n                \n                    return x.skillsData.yearsOfExperience === experience\n                }\n            })\n            .map((profile) => {\n                return profiles(profile)\n            })\n\n        )\n\n\n        \n    }\n\n\n\n    const handleSelection = (e) => {\n\n        const { value, label } = e\n\n        setFilterData({\n            ...filterData,\n            [value]: label\n        })\n        console.log(filterData)\n    }\n\n    const levelOptions = [\n        {label: \"All\", value: \"level\"},\n        {label: \"Junior-level\", value: \"level\"},\n        {label: \"Mid-level\", value: \"level\"},\n        {label: \"Senior-level\", value: \"level\"}\n    ]\n\n    const experienceOptions = [\n        {label: \"All\", value: \"experience\"},\n        {label: \"< 1\", value: \"experience\"},\n        {label: \"1+\", value: \"experience\"},\n        {label: \"3+\", value: \"experience\"},\n        {label: \"5+\", value: \"experience\"},\n        {label: \"7+\", value: \"experience\"}\n    ]\n\n\n\n    return(\n        <div>\n            <div className=\"heading\">\n                <h1>Profiles</h1>\n                <Link to=\"/profiles/new\">New Profile</Link>\n\n                <p className=\"profileFilters\" onClick={toggleFilter} >Filter^</p>\n                <div id=\"openFilter\" className=\"filters\">\n                    <div className=\"filterDropdowns\">\n                        <div className=\"dropdownDiv\">\n                            <p>Experience level</p>\n                            <Dropdown options={levelOptions} onChange={handleSelection} label=\"level\" />\n                        </div>\n                        <div className=\"dropdownDiv\">\n                            <p>Years of experience</p>\n                            <Dropdown options={experienceOptions} onChange={handleSelection} label=\"experience\" />\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"profileWrapper\">\n                <Display />\n                {/* {\n                    profileData.map((x) => {\n                        console.log(x)\n                        const { detailsData, skillsData, workData  } = x\n                        const { firstName, lastName, username, interests } = detailsData\n                        const { skillLevel, yearsOfExperience } = skillsData\n                        const { status } = workData\n\n                        // const path = `/profiles/${x._id}`\n                        return (\n                            <Link to={`/profiles/${x._id}`} id=\"profileLink\">\n                                <div className=\"profileCard\">\n                                    <div className=\"profileTopSection\">\n                                        <div className=\"imagePlaceHolder\">\n                                            <div className=\"img\"></div>\n\n                                        </div>\n                                        <div className=\"profileTopDetails\">\n                                            <h2>{firstName} {lastName} </h2>\n                                            <h3>@{username} </h3>\n                                            <h4>{skillLevel} Developer </h4>\n                                        </div>\n                                    </div>\n                                    <div className=\"profileBottomSection\">\n                                        <ul>\n                                            <li>{status} </li>\n                                            <li>{yearsOfExperience} years of experience </li>\n                                            <li>interests: {interests.join(\", \")} </li>\n                                        </ul>\n                                    </div>\n\n                                    \n                                </div>\n                            </Link>\n\n                        )\n                    })\n                } */}\n                {/* <Profile profile={profileData}/> */}\n\n            </div>\n            \n        </div>\n    )\n}\n\n\nexport default Profiles","/Users/meika/Desktop/mern-app/client/src/components/profiles/EditProfile.js",["150","151","152","153"],"import React, { useState, useEffect } from 'react'\nimport FormInput from './../reusable/FormInput'\nimport MultiStepForm from './MultiStepForm'\n\n\nconst EditProfile = ({ profile,  }) => {\n    console.log(profile)\n\n   \n\n    // const [formState,setFormState] = useState(initialFormState)\n    const [errorMessage, setErrorMessage] = useState(null)\n\n    \n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n    }\n\n    const handleChange = (e) => {\n\n    }\n\n\n\n    return(\n        <div>\n            <form id=\"editPostForm\" onSubmit={handleSubmit}>\n            {errorMessage && <p>{errorMessage}</p>}\n           <MultiStepForm form=\"edit\" profile={profile} />\n        </form>\n        </div>\n    )\n}\n\n\nexport default EditProfile ","/Users/meika/Desktop/mern-app/client/src/components/profiles/AddProfile.js",["154","155"],"import React from 'react'\nimport { useForm, useStep } from 'react-hooks-helper'\nimport MultiStepForm from './MultiStepForm'\n\n\n\n\nconst AddProfile = ({ nextIdProfile, addProfile, profiles }) => {\n\n\n\n    return(\n        <div>\n            <div>\n                <div className=\"heading\">\n                    <h1 className=\"headingFont\">Create Your Profile</h1>\n                </div>\n                <MultiStepForm nextIdProfile={nextIdProfile} addProfile={addProfile}  profiles={profiles} />\n                \n\n            </div>\n             \n        </div>\n    )\n}\n\n\nexport default AddProfile ","/Users/meika/Desktop/mern-app/client/src/components/auth/Register.js",[],"/Users/meika/Desktop/mern-app/client/src/components/auth/SignIn.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/MultiStepForm.js",[],"/Users/meika/Desktop/mern-app/client/src/components/posts/Posts.js",["156","157"],"import React, { useState, useEffect } from 'react'\nimport Post from './Post'\nimport { Link } from 'react-router-dom'\n\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\n\nimport './../../styles/Posts.css'\n\n\nconst Posts = ({ postsData }) => {\n\n    const filters = {\n        category: \"All\",\n        sortBy: \"Newest\"\n    }\n\n    const [filterData, setFilterData] = useState(filters)\n\n\n    const posts = (post) => {\n        const { title, category, modified_date, username } = post\n        return (\n            <div className=\"postCard\">\n                <Link to={`/posts/${post._id}`} className=\"titleLink\">\n                    <h1 className=\"postTitle\">{title}</h1>\n                </Link>\n                <div className=\"postInfo\">\n                    \n                    <h5>Posted by: {username}, {modified_date.toLocaleString()}</h5>\n                    <h3>{category}</h3>\n                    {/* <p>{content}</p> */}\n                    <div className=\"upVotesDiv\">\n                        <p className=\"upVotes\">++5</p>\n                    </div>\n                    \n                </div>\n                    \n                \n            </div>\n        )\n    }\n\n    // updating display function to take different parameters\n    // first it should filter through the posts and find the \n    // category matching the one given as filter\n    // with that filtered data, it should impliment the chosen\n    // sorting method, eg. newest, oldest, most upvotes, least etc.\n\n    const sortOptions = (a, b, sortBy) => {\n        switch (sortBy){\n            case \"Newest\":\n                return (b.modified_date - a.modified_date)\n                \n            case \"Oldest\":\n                return (a.modified_date - b.modified_date)\n                \n            default:\n                return (b.modified_date - a.modified_date)\n                \n\n        }\n    }\n    \n\n    function Display (){\n        // console.log(filterData)\n        const { category, sortBy } = filterData\n        // console.log(category)\n        // console.log(postsData.filter(x => x.category === \"code\"))\n        // console.log(category)\n\n        return (postsData\n            .filter((x) => {\n                if (category === \"All\"){\n                    return x\n                } else {\n                    return x.category === category\n                }\n               \n            }\n            )\n            .sort((a, b) => sortOptions(a, b, sortBy))\n            .map((post) => {\n                return posts(post)\n            })\n        )\n    }\n\n\n    const filterBtn = document.querySelector('.filters')\n\n    function openFilters () {\n        if (filterBtn){\n            (filterBtn.style.display === \"none\") ? (filterBtn.style.display = \"flex\") : (filterBtn.style.display = \"none\")\n        }\n        \n    }\n\n\n    // const categoryOptions = [\"Code\", \"Food\", \"Issues\", \"Meetups\"]\n\n    const categoryOptions = [\n        {label: \"All\", value: \"category\"},\n        {label: \"Code\", value: \"category\"},\n        {label: \"Food\", value: \"category\"},\n        {label: \"Issues\", value: \"category\"},\n        {label: \"Meetups\", value: \"category\"}\n    ]\n\n    // const sortByOptions = [\"Newest\", \"Oldest\", \"Most Upvotes\", \"Least Upvotes\"]\n\n    const sortByOptions = [\n        {label: \"Newest\", value: \"sortBy\"},\n        {label: \"Oldest\", value: \"sortBy\"},\n        {label: \"Most Upvotes\", value: \"sortBy\"},\n        {label: \"Least Upvotes\", value: \"sortBy\"}\n    ]\n\n    const handleSelection = e => {\n       console.log(e)\n        const { value, label } = e\n\n        \n        setFilterData({\n            ...filterData,\n            [value]: label\n        })\n        console.log('filter: ', filterData)\n    }\n\n    // const handleFilterSubmit = e => {\n    //     e.preventDefault()\n\n    // }\n\n    return(\n        <div>\n            {/* <div className=\"heading\">\n                <h4>Posts</h4>\n            </div> */}\n            <div className=\"filterText\">\n                <p onClick={openFilters}>Filter</p>\n            </div>\n            <div className=\"filters width70\">\n                <div className=\"filterDropdowns\">\n                    <div className=\"dropdownDiv\">\n                        <p>Category: </p>\n                        <Dropdown className='myClassName' options={categoryOptions} id=\"categoryFilter\" label=\"category\" onChange={handleSelection} />\n                    </div>\n                    <div className=\"dropdownDiv\">\n                        <p>Sort by:</p>\n                        <Dropdown options={sortByOptions} id=\"sortByFilter\" label=\"sortBy\" onChange={handleSelection} />\n                    </div>\n                </div>\n                \n                {/* <div className=\"filterBtn\">\n                    <button onClick={handleFilterSubmit}>Done</button>\n                </div> */}\n                \n            </div>\n            \n            <div className=\"width70 posts\">\n                <Display filters={filterData} />\n            </div>\n\n\n        </div>\n    )\n}\n\n\nexport default Posts","/Users/meika/Desktop/mern-app/client/src/components/reusable/FormInput.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Details.js",["158","159","160","161"],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Education.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Work.js",["162","163"],"import React, { useState, useEffect } from 'react'\nimport RecentWork from './workComponents/Recent'\nimport PastWork from './workComponents/Past'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\n\n\nconst Work = ({ setWork, workData, navigation, form, profile }) => {\n\n    const props = { setWork, workData, navigation }\n    const { previous, next } = navigation;\n    const { status } = workData\n\n    useEffect(() => {\n        if (form === \"edit\"){\n            setWork(profile.workData)\n        }\n    })\n\n    \n\n\n\n    // handle change function for radio group for work status :\n    function handleChange (e) {\n        setWork({\n            ...workData,\n            status: e.target.value\n        })\n    }\n\n    return(\n        <div>\n            <div className=\"profileFormDiv\">\n                <div className=\"heading\">\n                    <h4>\n                        Work Information\n                    </h4>\n                </div>\n                <div>\n                    <form>\n\n                        <div className=\"recentWork\">\n                            <h3>Current Role</h3>\n                            <RecentWork {...props} />\n                        </div>\n\n                        <div className=\"pastWork\">\n                            <h3>Past Roles</h3>\n                            <PastWork {...props} />\n                        </div>\n\n\n                        <div className=\"statusSelection\">\n                            <h3>Please Choose one:</h3>\n                            <FormControl component=\"fieldset\">\n                                {/* <FormLabel component=\"legend\">Future Employment Status</FormLabel> */}\n                                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={status} onChange={handleChange} className=\"radioGroupWork\">\n                                    <FormControlLabel value=\"looking\" control={<Radio />} label=\"I'm looking for work\" />\n                                    <FormControlLabel value=\"open\" control={<Radio />} label=\"I'm not currently looking, but I'm open to offers\" />\n                                    <FormControlLabel value=\"notLooking\" control={<Radio />} label=\"I'm not looking for work\" />\n                                    \n                                </RadioGroup>\n                                </FormControl>\n\n                            \n                        </div>\n\n                    </form>\n\n                    <div className=\"navigationDiv\">\n                        <button className=\"nextBtn\" onClick={previous}>back</button>  \n                        <button className=\"nextBtn\" onClick={next}>Next</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Work","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Links.js",["164","165"],"import React, { useState, useEffect } from 'react'\nimport FormInput from '../../reusable/FormInput'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css';\n\n// need to add validation on additional links form -> display error message if no name for additional link is selected\n\nconst Links = ({ setLinks, linkData, navigation, form, profile }) => {\n\n\n    useEffect(() => {\n        if (form === \"edit\"){\n            setLinks(profile.linkData)\n        }\n    })\n\n    \n\n    const [disabled, setDisabled] = useState(true)\n\n    // form props :\n    console.log(linkData)\n\n    const { linkedIn, twitter, instagram, facebook, additionalLinks, portfolio, github, resume } = linkData\n    // console.log(profile.linksData.linkedIn, linkedIn)\n    \n\n    // for wizard form navigation :\n    const { previous, next } = navigation;\n\n\n    // local states for controlled forms :\n    const [tempValue, setTempValue] = useState(\"\")\n    const [tempName, setTempName] = useState(\"\")\n    const [defaultOption, setDefaultOption] = useState(\"\")\n\n\n    // sets temp values for additional links form :\n    function handleAdditional (e) {\n        setTempValue(e.target.value)\n    }\n\n\n    // add form :\n    // find div, create input element, set attributes of type and id, set value, add event listener for change,\n    // append the input field to the div, \n    const addFormField = (e) => {\n\n        const div = document.getElementById(\"additionalForms\")\n        const valueField = document.createElement(\"INPUT\")\n\n        valueField.setAttribute(\"type\", \"text\")\n        valueField.setAttribute(\"id\", \"valueField\")\n        valueField.value = tempValue\n\n        valueField.addEventListener(\"change\", handleAdditional)\n\n        div.appendChild(valueField)\n\n    }\n\n    const hideFormField = (e) => {\n        \n    }\n\n\n    // options for dropdown of additional links :\n    const options = [\n        \"Youtube\", \"Pinterest\", \"Reddit\", \"Codewars\", \"Stack Overflow\"\n    ]\n\n\n    // function for selecting dropdown options :\n    // set the temp name for the additional link from selected value,\n    // add a form field if there are no items in additional links object\n    function onSelect (e) {\n\n        const {value} = e\n        setTempName(value)\n\n        if (Object.entries(additionalLinks).length < 1){\n            addFormField()\n        } \n        setDisabled(false)\n    }\n\n\n    // function to handle changes from set input fields :\n    // set linkdata to the name and value given\n    function handleChange (e) {\n\n        const { name, value } = e.target\n\n        setLinks( {\n            ...linkData,\n            [name]: value\n        })\n    }\n\n\n    // display additional items keys and values:\n    function DisplayItems () {\n\n        return (\n            Object.entries(additionalLinks).map(([key, value]) => {\n                return <li key={key}>{key}: {value}</li>\n            })\n        )\n    }\n    \n\n    // function to handle the click of the + button :\n    // set the additional links to the ones saved in temp name and value,\n    // clear temp value, value field and dropdown selection\n    // add validation in here to prevent blank name : (if !name => display msg, dont allow submission)\n    function handleClick (e) {\n        e.preventDefault()\n\n        setLinks({\n            ...linkData,\n            additionalLinks: {...additionalLinks, [tempName]: tempValue}\n        })\n        \n        setTempValue(\"\")\n        setTempName(\"\")\n        const valueField = document.getElementById(\"valueField\")\n        valueField.value = \"\"\n        setDefaultOption(\"Select...\")\n    }\n\n    function handleUpload (e) {\n        console.log(e.target.files[0])\n        setLinks({\n            ...linkData,\n            resume: e.target.files[0]\n        })\n    }\n\n    return(\n        <div>\n            <div>\n                <div className=\"heading\">\n                <h4>\n                    Links\n                </h4>  \n                </div>\n                <div className=\"profileFormDiv\">\n                    <form>\n                        <div>\n                            <h3 className=\"greyTitle\">Social Media</h3>\n                            \n                            <div className=\"linkForms\">\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            LinkedIn\n                                        </label>\n                                        <FormInput name=\"linkedIn\" value={linkedIn} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Twitter\n                                        </label>\n                                        <FormInput name=\"twitter\" value={twitter} onChange={handleChange} />\n                                    </div>\n                                </div>\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Instagram\n                                        </label>\n                                        <FormInput name=\"instagram\" value={instagram} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Facebook\n                                        </label>\n                                        <FormInput name=\"facebook\" value={facebook} onChange={handleChange} />\n                                    </div>\n\n                                </div>\n                            </div>\n                            \n                    \n\n                                    \n                        </div>\n\n\n                        <div>\n                            <h3 className=\"greyTitle\">Portfolio</h3>\n                            <div className=\"linkForms\">\n                                <div className=\"doubleFields\">\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Portfolio\n                                        </label>\n                                        <FormInput name=\"portfolio\" value={portfolio} onChange={handleChange} />\n                                    </div>\n                                    <div className=\"formFields\">\n                                        <label>\n                                            Github\n                                        </label>\n                                        <FormInput name=\"github\" value={github} onChange={handleChange} />\n                                    </div>\n\n                                </div>\n                                \n                            </div>\n\n                            <div className=\"profilePhotoUpload\">\n                                <label for=\"photoBtn\">Upload Resume</label>\n                                <input \n                                    type=\"file\"\n                                    name=\"resume\"\n                                    accept=\".pdf\"\n                                    multiple=\"false\"\n                                    onChange={handleUpload}\n                                    id=\"photoBtn\"\n                                    hidden\n                                    \n                                />\n                                <span id=\"fileChosen\">No file Chosen</span>\n\n                            </div>\n                            \n                            \n                            {/* <div className=\"formFields\">\n                                <label>\n                                    Resume\n                                </label>\n                                <FormInput type=\"file\" name=\"resume\" accept=\".pdf\" onChange={handleUpload}/>\n                                \n                            </div> */}\n                        </div>\n                        <div>\n                            <h3 className=\"greyTitle\">Additional</h3>\n                            \n                            <div className=\"linkDropDown\">\n                                <Dropdown options={options} onChange={onSelect} value={defaultOption} name=\"additionalLinks\" />\n                                \n                                <div id=\"additionalForms\"></div>\n                                <button className=\"plusButton\" onClick={handleClick} disabled={disabled} >+</button>                \n                            </div>\n                                \n                            <div id=\"additionalItems\">\n                                    \n                                <DisplayItems />\n                                    \n                                \n                            </div>\n                            </div>\n\n                    </form>  \n                    <div className=\"navigationDiv\">\n                        <button className=\"nextBtn\" onClick={previous}>back</button>  \n                        <button className=\"nextBtn\" onClick={next}>Next</button>\n                    </div>\n                </div>\n            </div>\n            \n\n        </div>\n    )\n}\n\n\nexport default Links","/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Skills.js",["166"],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/Review.js",["167","168","169","170"],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/educationSections/PastEducation.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Recent.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/workComponents/Past.js",[],"/Users/meika/Desktop/mern-app/client/src/components/profiles/formComponents/skillsComponents/SkillForm.js",["171","172"],"/Users/meika/Desktop/mern-app/client/src/services/profileServices.js",[],"/Users/meika/Desktop/mern-app/client/src/config/api.js",[],"/Users/meika/Desktop/mern-app/client/src/config/store.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":9,"column":10,"nodeType":"179","messageId":"180","endLine":9,"endColumn":28},{"ruleId":"177","severity":1,"message":"181","line":85,"column":12,"nodeType":"179","messageId":"180","endLine":85,"endColumn":21},{"ruleId":"177","severity":1,"message":"182","line":85,"column":30,"nodeType":"179","messageId":"180","endLine":85,"endColumn":42},{"ruleId":"177","severity":1,"message":"183","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":13},{"ruleId":"177","severity":1,"message":"184","line":15,"column":24,"nodeType":"179","messageId":"180","endLine":15,"endColumn":28},{"ruleId":"177","severity":1,"message":"185","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":15},{"ruleId":"177","severity":1,"message":"186","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"187","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"188","line":12,"column":26,"nodeType":"179","messageId":"180","endLine":12,"endColumn":41},{"ruleId":"177","severity":1,"message":"189","line":21,"column":11,"nodeType":"179","messageId":"180","endLine":21,"endColumn":23},{"ruleId":"177","severity":1,"message":"190","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":17},{"ruleId":"177","severity":1,"message":"191","line":2,"column":19,"nodeType":"179","messageId":"180","endLine":2,"endColumn":26},{"ruleId":"177","severity":1,"message":"186","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"192","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":12},{"ruleId":"177","severity":1,"message":"193","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"194","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":16},{"ruleId":"177","severity":1,"message":"195","line":32,"column":11,"nodeType":"179","messageId":"180","endLine":32,"endColumn":20},{"ruleId":"177","severity":1,"message":"196","line":49,"column":14,"nodeType":"179","messageId":"180","endLine":49,"endColumn":34},{"ruleId":"177","severity":1,"message":"193","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"197","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":17},{"ruleId":"177","severity":1,"message":"198","line":24,"column":89,"nodeType":"179","messageId":"180","endLine":24,"endColumn":95},{"ruleId":"177","severity":1,"message":"199","line":62,"column":11,"nodeType":"179","messageId":"180","endLine":62,"endColumn":24},{"ruleId":"177","severity":1,"message":"187","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":17},{"ruleId":"177","severity":1,"message":"186","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"200","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":18},{"ruleId":"177","severity":1,"message":"201","line":4,"column":28,"nodeType":"179","messageId":"180","endLine":4,"endColumn":41},{"ruleId":"177","severity":1,"message":"202","line":26,"column":10,"nodeType":"179","messageId":"180","endLine":26,"endColumn":22},{"ruleId":"177","severity":1,"message":"203","line":23,"column":13,"nodeType":"179","messageId":"180","endLine":23,"endColumn":22},{"ruleId":"177","severity":1,"message":"184","line":23,"column":24,"nodeType":"179","messageId":"180","endLine":23,"endColumn":28},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'getAllUserProfiles' is defined but never used.","Identifier","unusedVar","'blogPosts' is assigned a value but never used.","'userProfiles' is assigned a value but never used.","'Posts' is defined but never used.","'soft' is assigned a value but never used.","'Profile' is defined but never used.","'useEffect' is defined but never used.","'FormInput' is defined but never used.","'setErrorMessage' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'useForm' is defined but never used.","'useStep' is defined but never used.","'Post' is defined but never used.","'useState' is defined but never used.","'Checkbox' is defined but never used.","'interests' is assigned a value but never used.","'handleCheckboxChange' is defined but never used.","'FormLabel' is defined but never used.","'resume' is assigned a value but never used.","'hideFormField' is assigned a value but never used.","'Redirect' is defined but never used.","'updateProfile' is defined but never used.","'errorMessage' is assigned a value but never used.","'technical' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]